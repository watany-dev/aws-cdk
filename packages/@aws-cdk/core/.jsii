{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "@balena/dockerignore": "^1.0.2",
    "fs-extra": "^9.1.0",
    "ignore": "^5.2.4",
    "minimatch": "^3.1.2",
    "table": "^6.8.1",
    "yaml": "1.10.2"
  },
  "dependencies": {
    "@aws-cdk/cloud-assembly-schema": "0.0.0",
    "@aws-cdk/cx-api": "0.0.0",
    "@aws-cdk/region-info": "0.0.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "AWS Cloud Development Kit Core Library",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "5.0.0 (build 4ff1caa)",
  "keywords": [
    "aws",
    "cdk",
    "jsii",
    "cdk-core"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/core",
  "readme": {
    "markdown": "# AWS Cloud Development Kit Library\n\nThe AWS CDK construct library provides APIs to define your CDK application and add\nCDK constructs to the application.\n\n## Usage\n\n### Upgrade from CDK 1.x\n\nWhen upgrading from CDK 1.x, remove all dependencies to individual CDK packages\nfrom your dependencies file and follow the rest of the sections.\n\n### Installation\n\nTo use this package, you need to declare this package and the `constructs` package as\ndependencies.\n\nAccording to the kind of project you are developing:\n\n- For projects that are CDK libraries, declare them both under the `devDependencies`\n  **and** `peerDependencies` sections.\n- For CDK apps, declare them under the `dependencies` section only.\n\n### Use in your code\n\n#### Classic import\n\nYou can use a classic import to get access to each service namespaces:\n\n```ts\nimport { Stack, App, aws_s3 as s3 } from 'aws-cdk-lib';\n\nconst app = new App();\nconst stack = new Stack(app, 'TestStack');\n\nnew s3.Bucket(stack, 'TestBucket');\n```\n\n#### Barrel import\n\nAlternatively, you can use \"barrel\" imports:\n\n```ts\nimport { App, Stack } from 'aws-cdk-lib';\nimport { Bucket } from 'aws-cdk-lib/aws-s3';\n\nconst app = new App();\nconst stack = new Stack(app, 'TestStack');\n\nnew Bucket(stack, 'TestBucket');\n```\n\n<!--BEGIN CORE DOCUMENTATION-->\n\n## Stacks and Stages\n\nA `Stack` is the smallest physical unit of deployment, and maps directly onto\na CloudFormation Stack. You define a Stack by defining a subclass of `Stack`\n-- let's call it `MyStack` -- and instantiating the constructs that make up\nyour application in `MyStack`'s constructor. You then instantiate this stack\none or more times to define different instances of your application. For example,\nyou can instantiate it once using few and cheap EC2 instances for testing,\nand once again using more and bigger EC2 instances for production.\n\nWhen your application grows, you may decide that it makes more sense to split it\nout across multiple `Stack` classes. This can happen for a number of reasons:\n\n- You could be starting to reach the maximum number of resources allowed in a single\n  stack (this is currently 500).\n- You could decide you want to separate out stateful resources and stateless resources\n  into separate stacks, so that it becomes easy to tear down and recreate the stacks\n  that don't have stateful resources.\n- There could be a single stack with resources (like a VPC) that are shared\n  between multiple instances of other stacks containing your applications.\n\nAs soon as your conceptual application starts to encompass multiple stacks,\nit is convenient to wrap them in another construct that represents your\nlogical application. You can then treat that new unit the same way you used\nto be able to treat a single stack: by instantiating it multiple times\nfor different instances of your application.\n\nYou can define a custom subclass of `Stage`, holding one or more\n`Stack`s, to represent a single logical instance of your application.\n\nAs a final note: `Stack`s are not a unit of reuse. They describe physical\ndeployment layouts, and as such are best left to application builders to\norganize their deployments with. If you want to vend a reusable construct,\ndefine it as a subclasses of `Construct`: the consumers of your construct\nwill decide where to place it in their own stacks.\n\n## Stack Synthesizers\n\nEach Stack has a *synthesizer*, an object that determines how and where\nthe Stack should be synthesized and deployed. The synthesizer controls\naspects like:\n\n- How does the stack reference assets? (Either through CloudFormation\n  parameters the CLI supplies, or because the Stack knows a predefined\n  location where assets will be uploaded).\n- What roles are used to deploy the stack? These can be bootstrapped\n  roles, roles created in some other way, or just the CLI's current\n  credentials.\n\nThe following synthesizers are available:\n\n- `DefaultStackSynthesizer`: recommended. Uses predefined asset locations and\n  roles created by the modern bootstrap template. Access control is done by\n  controlling who can assume the deploy role. This is the default stack\n  synthesizer in CDKv2.\n- `LegacyStackSynthesizer`: Uses CloudFormation parameters to communicate\n  asset locations, and the CLI's current permissions to deploy stacks. The\n  is the default stack synthesizer in CDKv1.\n- `CliCredentialsStackSynthesizer`: Uses predefined asset locations, and the\n  CLI's current permissions.\n\nEach of these synthesizers takes configuration arguments. To configure\na stack with a synthesizer, pass it as one of its properties:\n\n```ts\nnew MyStack(app, 'MyStack', {\n  synthesizer: new DefaultStackSynthesizer({\n    fileAssetsBucketName: 'my-orgs-asset-bucket',\n  }),\n});\n```\n\nFor more information on bootstrapping accounts and customizing synthesis,\nsee [Bootstrapping in the CDK Developer Guide](https://docs.aws.amazon.com/cdk/latest/guide/bootstrapping.html).\n\n## Nested Stacks\n\n[Nested stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html) are stacks created as part of other stacks. You create a nested stack within another stack by using the `NestedStack` construct.\n\nAs your infrastructure grows, common patterns can emerge in which you declare the same components in multiple templates. You can separate out these common components and create dedicated templates for them. Then use the resource in your template to reference other templates, creating nested stacks.\n\nFor example, assume that you have a load balancer configuration that you use for most of your stacks. Instead of copying and pasting the same configurations into your templates, you can create a dedicated template for the load balancer. Then, you just use the resource to reference that template from within other templates.\n\nThe following example will define a single top-level stack that contains two nested stacks: each one with a single Amazon S3 bucket:\n\n```ts\nclass MyNestedStack extends cfn.NestedStack {\n  constructor(scope: Construct, id: string, props?: cfn.NestedStackProps) {\n    super(scope, id, props);\n\n    new s3.Bucket(this, 'NestedBucket');\n  }\n}\n\nclass MyParentStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new MyNestedStack(this, 'Nested1');\n    new MyNestedStack(this, 'Nested2');\n  }\n}\n```\n\nResources references across nested/parent boundaries (even with multiple levels of nesting) will be wired by the AWS CDK\nthrough CloudFormation parameters and outputs. When a resource from a parent stack is referenced by a nested stack,\na CloudFormation parameter will automatically be added to the nested stack and assigned from the parent; when a resource\nfrom a nested stack is referenced by a parent stack, a CloudFormation output will be automatically be added to the\nnested stack and referenced using `Fn::GetAtt \"Outputs.Xxx\"` from the parent.\n\nNested stacks also support the use of Docker image and file assets.\n\n## Accessing resources in a different stack\n\nYou can access resources in a different stack, as long as they are in the\nsame account and AWS Region (see [next section](#accessing-resources-in-a-different-stack-and-region) for an exception).\nThe following example defines the stack `stack1`,\nwhich defines an Amazon S3 bucket. Then it defines a second stack, `stack2`,\nwhich takes the bucket from stack1 as a constructor property.\n\n```ts\nconst prod = { account: '123456789012', region: 'us-east-1' };\n\nconst stack1 = new StackThatProvidesABucket(app, 'Stack1' , { env: prod });\n\n// stack2 will take a property { bucket: IBucket }\nconst stack2 = new StackThatExpectsABucket(app, 'Stack2', {\n  bucket: stack1.bucket,\n  env: prod\n});\n```\n\nIf the AWS CDK determines that the resource is in the same account and\nRegion, but in a different stack, it automatically synthesizes AWS\nCloudFormation\n[Exports](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html)\nin the producing stack and an\n[Fn::ImportValue](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html)\nin the consuming stack to transfer that information from one stack to the\nother.\n\n## Accessing resources in a different stack and region\n\n> **This feature is currently experimental**\n\nYou can enable the Stack property `crossRegionReferences`\nin order to access resources in a different stack _and_ region. With this feature flag\nenabled it is possible to do something like creating a CloudFront distribution in `us-east-2` and\nan ACM certificate in `us-east-1`.\n\n```ts\nconst stack1 = new Stack(app, 'Stack1', {\n  env: {\n    region: 'us-east-1',\n  },\n  crossRegionReferences: true,\n});\nconst cert = new acm.Certificate(stack1, 'Cert', {\n  domainName: '*.example.com',\n  validation: acm.CertificateValidation.fromDns(route53.PublicHostedZone.fromHostedZoneId(stack1, 'Zone', 'Z0329774B51CGXTDQV3X')),\n});\n\nconst stack2 = new Stack(app, 'Stack2', {\n  env: {\n    region: 'us-east-2',\n  },\n  crossRegionReferences: true,\n});\nnew cloudfront.Distribution(stack2, 'Distribution', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('example.com'),\n  },\n  domainNames: ['dev.example.com'],\n  certificate: cert,\n});\n```\n\nWhen the AWS CDK determines that the resource is in a different stack _and_ is in a different\nregion, it will \"export\" the value by creating a custom resource in the producing stack which\ncreates SSM Parameters in the consuming region for each exported value. The parameters will be\ncreated with the name '/cdk/exports/${consumingStackName}/${export-name}'.\nIn order to \"import\" the exports into the consuming stack a [SSM Dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html#dynamic-references-ssm)\nis used to reference the SSM parameter which was created.\n\nIn order to mimic strong references, a Custom Resource is also created in the consuming\nstack which marks the SSM parameters as being \"imported\". When a parameter has been successfully\nimported, the producing stack cannot update the value.\n\nSee the [adr](https://github.com/aws/aws-cdk/blob/main/packages/@aws-cdk/core/adr/cross-region-stack-references)\nfor more details on this feature.\n\n### Removing automatic cross-stack references\n\nThe automatic references created by CDK when you use resources across stacks\nare convenient, but may block your deployments if you want to remove the\nresources that are referenced in this way. You will see an error like:\n\n```text\nExport Stack1:ExportsOutputFnGetAtt-****** cannot be deleted as it is in use by Stack1\n```\n\nLet's say there is a Bucket in the `stack1`, and the `stack2` references its\n`bucket.bucketName`. You now want to remove the bucket and run into the error above.\n\nIt's not safe to remove `stack1.bucket` while `stack2` is still using it, so\nunblocking yourself from this is a two-step process. This is how it works:\n\nDEPLOYMENT 1: break the relationship\n\n- Make sure `stack2` no longer references `bucket.bucketName` (maybe the consumer\n  stack now uses its own bucket, or it writes to an AWS DynamoDB table, or maybe you just\n  remove the Lambda Function altogether).\n- In the `stack1` class, call `this.exportValue(this.bucket.bucketName)`. This\n  will make sure the CloudFormation Export continues to exist while the relationship\n  between the two stacks is being broken.\n- Deploy (this will effectively only change the `stack2`, but it's safe to deploy both).\n\nDEPLOYMENT 2: remove the resource\n\n- You are now free to remove the `bucket` resource from `stack1`.\n- Don't forget to remove the `exportValue()` call as well.\n- Deploy again (this time only the `stack1` will be changed -- the bucket will be deleted).\n\n## Durations\n\nTo make specifications of time intervals unambiguous, a single class called\n`Duration` is used throughout the AWS Construct Library by all constructs\nthat that take a time interval as a parameter (be it for a timeout, a\nrate, or something else).\n\nAn instance of Duration is constructed by using one of the static factory\nmethods on it:\n\n```ts\nDuration.seconds(300)   // 5 minutes\nDuration.minutes(5)     // 5 minutes\nDuration.hours(1)       // 1 hour\nDuration.days(7)        // 7 days\nDuration.parse('PT5M')  // 5 minutes\n```\n\nDurations can be added or subtracted together:\n\n```ts\nDuration.minutes(1).plus(Duration.seconds(60)); // 2 minutes\nDuration.minutes(5).minus(Duration.seconds(10)); // 290 secondes\n```\n\n## Size (Digital Information Quantity)\n\nTo make specification of digital storage quantities unambiguous, a class called\n`Size` is available.\n\nAn instance of `Size` is initialized through one of its static factory methods:\n\n```ts\nSize.kibibytes(200) // 200 KiB\nSize.mebibytes(5)   // 5 MiB\nSize.gibibytes(40)  // 40 GiB\nSize.tebibytes(200) // 200 TiB\nSize.pebibytes(3)   // 3 PiB\n```\n\nInstances of `Size` created with one of the units can be converted into others.\nBy default, conversion to a higher unit will fail if the conversion does not produce\na whole number. This can be overridden by unsetting `integral` property.\n\n```ts\nSize.mebibytes(2).toKibibytes()                                             // yields 2048\nSize.kibibytes(2050).toMebibytes({ rounding: SizeRoundingBehavior.FLOOR })  // yields 2\n```\n\n## Secrets\n\nTo help avoid accidental storage of secrets as plain text, we use the `SecretValue` type to\nrepresent secrets. Any construct that takes a value that should be a secret (such as\na password or an access key) will take a parameter of type `SecretValue`.\n\nThe best practice is to store secrets in AWS Secrets Manager and reference them using `SecretValue.secretsManager`:\n\n```ts\nconst secret = SecretValue.secretsManager('secretId', {\n  jsonField: 'password', // optional: key of a JSON field to retrieve (defaults to all content),\n  versionId: 'id',       // optional: id of the version (default AWSCURRENT)\n  versionStage: 'stage', // optional: version stage name (default AWSCURRENT)\n});\n```\n\nUsing AWS Secrets Manager is the recommended way to reference secrets in a CDK app.\n`SecretValue` also supports the following secret sources:\n\n- `SecretValue.unsafePlainText(secret)`: stores the secret as plain text in your app and the resulting template (not recommended).\n- `SecretValue.secretsManager(secret)`: refers to a secret stored in Secrets Manager\n- `SecretValue.ssmSecure(param, version)`: refers to a secret stored as a SecureString in the SSM\n Parameter Store. If you don't specify the exact version, AWS CloudFormation uses the latest\n version of the parameter.\n- `SecretValue.cfnParameter(param)`: refers to a secret passed through a CloudFormation parameter (must have `NoEcho: true`).\n- `SecretValue.cfnDynamicReference(dynref)`: refers to a secret described by a CloudFormation dynamic reference (used by `ssmSecure` and `secretsManager`).\n- `SecretValue.resourceAttribute(attr)`: refers to a secret returned from a CloudFormation resource creation.\n\n`SecretValue`s should only be passed to constructs that accept properties of type\n`SecretValue`. These constructs are written to ensure your secrets will not be\nexposed where they shouldn't be. If you try to use a `SecretValue` in a\ndifferent location, an error about unsafe secret usage will be thrown at\nsynthesis time.\n\nIf you rotate the secret's value in Secrets Manager, you must also change at\nleast one property on the resource where you are using the secret, to force\nCloudFormation to re-read the secret.\n\n`SecretValue.ssmSecure()` is only supported for a limited set of resources.\n[Click here for a list of supported resources and properties](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html#template-parameters-dynamic-patterns-resources).\n\n## ARN manipulation\n\nSometimes you will need to put together or pick apart Amazon Resource Names\n(ARNs). The functions `stack.formatArn()` and `stack.parseArn()` exist for\nthis purpose.\n\n`formatArn()` can be used to build an ARN from components. It will automatically\nuse the region and account of the stack you're calling it on:\n\n```ts\ndeclare const stack: Stack;\n\n// Builds \"arn:<PARTITION>:lambda:<REGION>:<ACCOUNT>:function:MyFunction\"\nstack.formatArn({\n  service: 'lambda',\n  resource: 'function',\n  sep: ':',\n  resourceName: 'MyFunction'\n});\n```\n\n`parseArn()` can be used to get a single component from an ARN. `parseArn()`\nwill correctly deal with both literal ARNs and deploy-time values (tokens),\nbut in case of a deploy-time value be aware that the result will be another\ndeploy-time value which cannot be inspected in the CDK application.\n\n```ts\ndeclare const stack: Stack;\n\n// Extracts the function name out of an AWS Lambda Function ARN\nconst arnComponents = stack.parseArn(arn, ':');\nconst functionName = arnComponents.resourceName;\n```\n\nNote that depending on the service, the resource separator can be either\n`:` or `/`, and the resource name can be either the 6th or 7th\ncomponent in the ARN. When using these functions, you will need to know\nthe format of the ARN you are dealing with.\n\nFor an exhaustive list of ARN formats used in AWS, see [AWS ARNs and\nNamespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)\nin the AWS General Reference.\n\n## Dependencies\n\n### Construct Dependencies\n\nSometimes AWS resources depend on other resources, and the creation of one\nresource must be completed before the next one can be started.\n\nIn general, CloudFormation will correctly infer the dependency relationship\nbetween resources based on the property values that are used. In the cases where\nit doesn't, the AWS Construct Library will add the dependency relationship for\nyou.\n\nIf you need to add an ordering dependency that is not automatically inferred,\nyou do so by adding a dependency relationship using\n`constructA.node.addDependency(constructB)`. This will add a dependency\nrelationship between all resources in the scope of `constructA` and all\nresources in the scope of `constructB`.\n\nIf you want a single object to represent a set of constructs that are not\nnecessarily in the same scope, you can use a `DependencyGroup`. The\nfollowing creates a single object that represents a dependency on two\nconstructs, `constructB` and `constructC`:\n\n```ts\n// Declare the dependable object\nconst bAndC = new DependencyGroup();\nbAndC.add(constructB);\nbAndC.add(constructC);\n\n// Take the dependency\nconstructA.node.addDependency(bAndC);\n```\n\n### Stack Dependencies\n\nTwo different stack instances can have a dependency on one another. This\nhappens when an resource from one stack is referenced in another stack. In\nthat case, CDK records the cross-stack referencing of resources,\nautomatically produces the right CloudFormation primitives, and adds a\ndependency between the two stacks. You can also manually add a dependency\nbetween two stacks by using the `stackA.addDependency(stackB)` method.\n\nA stack dependency has the following implications:\n\n- Cyclic dependencies are not allowed, so if `stackA` is using resources from\n  `stackB`, the reverse is not possible anymore.\n- Stacks with dependencies between them are treated specially by the CDK\n  toolkit:\n  - If `stackA` depends on `stackB`, running `cdk deploy stackA` will also\n    automatically deploy `stackB`.\n  - `stackB`'s deployment will be performed *before* `stackA`'s deployment.\n\n### CfnResource Dependencies\n\nTo make declaring dependencies between `CfnResource` objects easier, you can declare dependencies from one `CfnResource` object on another by using the `cfnResource1.addDependency(cfnResource2)` method. This method will work for resources both within the same stack and across stacks as it detects the relative location of the two resources and adds the dependency either to the resource or between the relevant stacks, as appropriate. If more complex logic is in needed, you can similarly remove, replace, or view dependencies between `CfnResource` objects with the `CfnResource` `removeDependency`, `replaceDependency`, and `obtainDependencies` methods, respectively.\n\n## Custom Resources\n\nCustom Resources are CloudFormation resources that are implemented by arbitrary\nuser code. They can do arbitrary lookups or modifications during a\nCloudFormation deployment.\n\nCustom resources are backed by *custom resource providers*. Commonly, these are\nLambda Functions that are deployed in the same deployment as the one that\ndefines the custom resource itself, but they can also be backed by Lambda\nFunctions deployed previously, or code responding to SNS Topic events running on\nEC2 instances in a completely different account. For more information on custom\nresource providers, see the next section.\n\nOnce you have a provider, each definition of a `CustomResource` construct\nrepresents one invocation. A single provider can be used for the implementation\nof arbitrarily many custom resource definitions. A single definition looks like\nthis:\n\n```ts\nnew CustomResource(this, 'MyMagicalResource', {\n  resourceType: 'Custom::MyCustomResource', // must start with 'Custom::'\n\n  // the resource properties\n  properties: {\n    Property1: 'foo',\n    Property2: 'bar'\n  },\n\n  // the ARN of the provider (SNS/Lambda) which handles\n  // CREATE, UPDATE or DELETE events for this resource type\n  // see next section for details\n  serviceToken: 'ARN'\n});\n```\n\n### Custom Resource Providers\n\nCustom resources are backed by a **custom resource provider** which can be\nimplemented in one of the following ways. The following table compares the\nvarious provider types (ordered from low-level to high-level):\n\n| Provider                                                             | Compute Type | Error Handling | Submit to CloudFormation | Max Timeout     | Language | Footprint |\n|----------------------------------------------------------------------|:------------:|:--------------:|:------------------------:|:---------------:|:--------:|:---------:|\n| [sns.Topic](#amazon-sns-topic)                                       | Self-managed | Manual         | Manual                   | Unlimited       | Any      | Depends   |\n| [lambda.Function](#aws-lambda-function)                              | AWS Lambda   | Manual         | Manual                   | 15min           | Any      | Small     |\n| [core.CustomResourceProvider](#the-corecustomresourceprovider-class) | AWS Lambda   | Auto           | Auto                     | 15min           | Node.js  | Small     |\n| [custom-resources.Provider](#the-custom-resource-provider-framework) | AWS Lambda   | Auto           | Auto                     | Unlimited Async | Any      | Large     |\n\nLegend:\n\n- **Compute type**: which type of compute can be used to execute the handler.\n- **Error Handling**: whether errors thrown by handler code are automatically\n  trapped and a FAILED response is submitted to CloudFormation. If this is\n  \"Manual\", developers must take care of trapping errors. Otherwise, events\n  could cause stacks to hang.\n- **Submit to CloudFormation**: whether the framework takes care of submitting\n  SUCCESS/FAILED responses to CloudFormation through the event's response URL.\n- **Max Timeout**: maximum allows/possible timeout.\n- **Language**: which programming languages can be used to implement handlers.\n- **Footprint**: how many resources are used by the provider framework itself.\n\n**A NOTE ABOUT SINGLETONS**\n\nWhen defining resources for a custom resource provider, you will likely want to\ndefine them as a *stack singleton* so that only a single instance of the\nprovider is created in your stack and which is used by all custom resources of\nthat type.\n\nHere is a basic pattern for defining stack singletons in the CDK. The following\nexamples ensures that only a single SNS topic is defined:\n\n```ts\nfunction getOrCreate(scope: Construct): sns.Topic {\n  const stack = Stack.of(scope);\n  const uniqueid = 'GloballyUniqueIdForSingleton'; // For example, a UUID from `uuidgen`\n  const existing = stack.node.tryFindChild(uniqueid);\n  if (existing) {\n    return existing as sns.Topic;\n  }\n  return new sns.Topic(stack, uniqueid);\n}\n```\n\n#### Amazon SNS Topic\n\nEvery time a resource event occurs (CREATE/UPDATE/DELETE), an SNS notification\nis sent to the SNS topic. Users must process these notifications (e.g. through a\nfleet of worker hosts) and submit success/failure responses to the\nCloudFormation service.\n\n> You only need to use this type of provider if your custom resource cannot run on AWS Lambda, for reasons other than the 15\n> minute timeout. If you are considering using this type of provider because you want to write a custom resource provider that may need\n> to wait for more than 15 minutes for the API calls to stabilize, have a look at the [`custom-resources`](#the-custom-resource-provider-framework) module first.\n>\n> Refer to the [CloudFormation Custom Resource documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html) for information on the contract your custom resource needs to adhere to.\n\nSet `serviceToken` to `topic.topicArn`  in order to use this provider:\n\n```ts\nconst topic = new sns.Topic(this, 'MyProvider');\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: topic.topicArn\n});\n```\n\n#### AWS Lambda Function\n\nAn AWS lambda function is called *directly* by CloudFormation for all resource\nevents. The handler must take care of explicitly submitting a success/failure\nresponse to the CloudFormation service and handle various error cases.\n\n> **We do not recommend you use this provider type.** The CDK has wrappers around Lambda Functions that make them easier to work with.\n>\n> If you do want to use this provider, refer to the [CloudFormation Custom Resource documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html) for information on the contract your custom resource needs to adhere to.\n\nSet `serviceToken` to `lambda.functionArn` to use this provider:\n\n```ts\nconst fn = new lambda.Function(this, 'MyProvider', functionProps);\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: fn.functionArn,\n});\n```\n\n#### The `core.CustomResourceProvider` class\n\nThe class [`@aws-cdk/core.CustomResourceProvider`] offers a basic low-level\nframework designed to implement simple and slim custom resource providers. It\ncurrently only supports Node.js-based user handlers, represents permissions as raw\nJSON blobs instead of `iam.PolicyStatement` objects, and it does not have\nsupport for asynchronous waiting (handler cannot exceed the 15min lambda\ntimeout).\n\n[`@aws-cdk/core.CustomResourceProvider`]: https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_core.CustomResourceProvider.html\n\n> **As an application builder, we do not recommend you use this provider type.** This provider exists purely for custom resources that are part of the AWS Construct Library.\n>\n> The [`custom-resources`](#the-custom-resource-provider-framework) provider is more convenient to work with and more fully-featured.\n\nThe provider has a built-in singleton method which uses the resource type as a\nstack-unique identifier and returns the service token:\n\n```ts\nconst serviceToken = CustomResourceProvider.getOrCreate(this, 'Custom::MyCustomResourceType', {\n  codeDirectory: `${__dirname}/my-handler`,\n  runtime: CustomResourceProviderRuntime.NODEJS_14_X,\n  description: \"Lambda function created by the custom resource provider\",\n});\n\nnew CustomResource(this, 'MyResource', {\n  resourceType: 'Custom::MyCustomResourceType',\n  serviceToken: serviceToken\n});\n```\n\nThe directory (`my-handler` in the above example) must include an `index.js` file. It cannot import\nexternal dependencies or files outside this directory. It must export an async\nfunction named `handler`. This function accepts the CloudFormation resource\nevent object and returns an object with the following structure:\n\n```js\nexports.handler = async function(event) {\n  const id = event.PhysicalResourceId; // only for \"Update\" and \"Delete\"\n  const props = event.ResourceProperties;\n  const oldProps = event.OldResourceProperties; // only for \"Update\"s\n\n  switch (event.RequestType) {\n    case \"Create\":\n      // ...\n\n    case \"Update\":\n      // ...\n\n      // if an error is thrown, a FAILED response will be submitted to CFN\n      throw new Error('Failed!');\n\n    case \"Delete\":\n      // ...\n  }\n\n  return {\n    // (optional) the value resolved from `resource.ref`\n    // defaults to \"event.PhysicalResourceId\" or \"event.RequestId\"\n    PhysicalResourceId: \"REF\",\n\n    // (optional) calling `resource.getAtt(\"Att1\")` on the custom resource in the CDK app\n    // will return the value \"BAR\".\n    Data: {\n      Att1: \"BAR\",\n      Att2: \"BAZ\"\n    },\n\n    // (optional) user-visible message\n    Reason: \"User-visible message\",\n\n    // (optional) hides values from the console\n    NoEcho: true\n  };\n}\n```\n\nHere is an complete example of a custom resource that summarizes two numbers:\n\n`sum-handler/index.js`:\n\n```js\nexports.handler = async (e) => {\n  return {\n    Data: {\n      Result: e.ResourceProperties.lhs + e.ResourceProperties.rhs,\n    },\n  };\n};\n```\n\n`sum.ts`:\n\n```ts nofixture\nimport {\n  Construct,\n  CustomResource,\n  CustomResourceProvider,\n  CustomResourceProviderRuntime,\n  Token,\n} from '@aws-cdk/core';\n\nexport interface SumProps {\n  readonly lhs: number;\n  readonly rhs: number;\n}\n\nexport class Sum extends Construct {\n  public readonly result: number;\n\n  constructor(scope: Construct, id: string, props: SumProps) {\n    super(scope, id);\n\n    const resourceType = 'Custom::Sum';\n    const serviceToken = CustomResourceProvider.getOrCreate(this, resourceType, {\n      codeDirectory: `${__dirname}/sum-handler`,\n      runtime: CustomResourceProviderRuntime.NODEJS_14_X,\n    });\n\n    const resource = new CustomResource(this, 'Resource', {\n      resourceType: resourceType,\n      serviceToken: serviceToken,\n      properties: {\n        lhs: props.lhs,\n        rhs: props.rhs\n      }\n    });\n\n    this.result = Token.asNumber(resource.getAtt('Result'));\n  }\n}\n```\n\nUsage will look like this:\n\n```ts fixture=README-custom-resource-provider\nconst sum = new Sum(this, 'MySum', { lhs: 40, rhs: 2 });\nnew CfnOutput(this, 'Result', { value: Token.asString(sum.result) });\n```\n\nTo access the ARN of the provider's AWS Lambda function role, use the `getOrCreateProvider()`\nbuilt-in singleton method:\n\n```ts\nconst provider = CustomResourceProvider.getOrCreateProvider(this, 'Custom::MyCustomResourceType', {\n  codeDirectory: `${__dirname}/my-handler`,\n  runtime: CustomResourceProviderRuntime.NODEJS_14_X,\n});\n\nconst roleArn = provider.roleArn;\n```\n\nThis role ARN can then be used in resource-based IAM policies.\n\nTo add IAM policy statements to this role, use `addToRolePolicy()`:\n\n```ts\nconst provider = CustomResourceProvider.getOrCreateProvider(this, 'Custom::MyCustomResourceType', {\n  codeDirectory: `${__dirname}/my-handler`,\n  runtime: CustomResourceProviderRuntime.NODEJS_14_X,\n});\nprovider.addToRolePolicy({\n  Effect: 'Allow',\n  Action: 's3:GetObject',\n  Resource: '*',\n})\n```\n\nNote that `addToRolePolicy()` uses direct IAM JSON policy blobs, *not* a\n`iam.PolicyStatement` object like you will see in the rest of the CDK.\n\n#### The Custom Resource Provider Framework\n\nThe [`@aws-cdk/custom-resources`] module includes an advanced framework for\nimplementing custom resource providers.\n\n[`@aws-cdk/custom-resources`]: https://docs.aws.amazon.com/cdk/api/latest/docs/custom-resources-readme.html\n\nHandlers are implemented as AWS Lambda functions, which means that they can be\nimplemented in any Lambda-supported runtime. Furthermore, this provider has an\nasynchronous mode, which means that users can provide an `isComplete` lambda\nfunction which is called periodically until the operation is complete. This\nallows implementing providers that can take up to two hours to stabilize.\n\nSet `serviceToken` to `provider.serviceToken` to use this type of provider:\n\n```ts\nconst provider = new customresources.Provider(this, 'MyProvider', {\n  onEventHandler,\n  isCompleteHandler, // optional async waiter\n});\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: provider.serviceToken\n});\n```\n\nSee the [documentation](https://docs.aws.amazon.com/cdk/api/latest/docs/custom-resources-readme.html) for more details.\n\n## AWS CloudFormation features\n\nA CDK stack synthesizes to an AWS CloudFormation Template. This section\nexplains how this module allows users to access low-level CloudFormation\nfeatures when needed.\n\n### Stack Outputs\n\nCloudFormation [stack outputs][cfn-stack-output] and exports are created using\nthe `CfnOutput` class:\n\n```ts\nnew CfnOutput(this, 'OutputName', {\n  value: myBucket.bucketName,\n  description: 'The name of an S3 bucket', // Optional\n  exportName: 'TheAwesomeBucket', // Registers a CloudFormation export named \"TheAwesomeBucket\"\n});\n```\n\n[cfn-stack-output]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html\n\n### Parameters\n\nCloudFormation templates support the use of [Parameters][cfn-parameters] to\ncustomize a template. They enable CloudFormation users to input custom values to\na template each time a stack is created or updated. While the CDK design\nphilosophy favors using build-time parameterization, users may need to use\nCloudFormation in a number of cases (for example, when migrating an existing\nstack to the AWS CDK).\n\nTemplate parameters can be added to a stack by using the `CfnParameter` class:\n\n```ts\nnew CfnParameter(this, 'MyParameter', {\n  type: 'Number',\n  default: 1337,\n  // See the API reference for more configuration props\n});\n```\n\nThe value of parameters can then be obtained using one of the `value` methods.\nAs parameters are only resolved at deployment time, the values obtained are\nplaceholder tokens for the real value (`Token.isUnresolved()` would return `true`\nfor those):\n\n```ts\nconst param = new CfnParameter(this, 'ParameterName', { /* config */ });\n\n// If the parameter is a String\nparam.valueAsString;\n\n// If the parameter is a Number\nparam.valueAsNumber;\n\n// If the parameter is a List\nparam.valueAsList;\n```\n\n[cfn-parameters]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html\n\n### Pseudo Parameters\n\nCloudFormation supports a number of [pseudo parameters][cfn-pseudo-params],\nwhich resolve to useful values at deployment time. CloudFormation pseudo\nparameters can be obtained from static members of the `Aws` class.\n\nIt is generally recommended to access pseudo parameters from the scope's `stack`\ninstead, which guarantees the values produced are qualifying the designated\nstack, which is essential in cases where resources are shared cross-stack:\n\n```ts\n// \"this\" is the current construct\nconst stack = Stack.of(this);\n\nstack.account; // Returns the AWS::AccountId for this stack (or the literal value if known)\nstack.region;  // Returns the AWS::Region for this stack (or the literal value if known)\nstack.partition; // Returns the AWS::Partition for this stack (or the literal value if known)\n```\n\n[cfn-pseudo-params]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/pseudo-parameter-reference.html\n\n### Resource Options\n\nCloudFormation resources can also specify [resource\nattributes][cfn-resource-attributes]. The `CfnResource` class allows\naccessing those through the `cfnOptions` property:\n\n```ts\nconst rawBucket = new s3.CfnBucket(this, 'Bucket', { /* ... */ });\n// -or-\nconst rawBucketAlt = myBucket.node.defaultChild as s3.CfnBucket;\n\n// then\nrawBucket.cfnOptions.condition = new CfnCondition(this, 'EnableBucket', { /* ... */ });\nrawBucket.cfnOptions.metadata = {\n  metadataKey: 'MetadataValue',\n};\n```\n\nResource dependencies (the `DependsOn` attribute) is modified using the\n`cfnResource.addDependency` method:\n\n```ts\nconst resourceA = new CfnResource(this, 'ResourceA', resourceProps);\nconst resourceB = new CfnResource(this, 'ResourceB', resourceProps);\n\nresourceB.addDependency(resourceA);\n```\n\n[cfn-resource-attributes]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-product-attribute-reference.html\n\n#### CreationPolicy\n\nSome resources support a [CreationPolicy][creation-policy] to be specified as a CfnOption.\n\nThe creation policy is invoked only when AWS CloudFormation creates the associated resource. Currently, the only AWS CloudFormation resources that support creation policies are `CfnAutoScalingGroup`, `CfnInstance`, `CfnWaitCondition` and `CfnFleet`.\n\nThe `CfnFleet` resource from the `aws-appstream` module supports specifying `startFleet` as\na property of the creationPolicy on the resource options. Setting it to true will make AWS CloudFormation wait until the fleet is started before continuing with the creation of\nresources that depend on the fleet resource.\n\n```ts\nconst fleet = new CfnFleet(stack, 'Fleet', {\n  instanceType: 'stream.standard.small',\n  name: 'Fleet',\n  computeCapacity: {\n    desiredInstances: 1,\n  },\n  imageName: 'AppStream-AmazonLinux2-09-21-2022',\n});\nfleet.cfnOptions.creationPolicy = {\n  startFleet: true,\n};\n```\n\nThe properties passed to the level 2 constructs `AutoScalingGroup` and `Instance` from the\n`aws-ec2` module abstract what is passed into the `CfnOption` properties `resourceSignal` and\n`autoScalingCreationPolicy`, but when using level 1 constructs you can specify these yourself.\n\nThe CfnWaitCondition resource from the `aws-cloudformation` module suppports the `resourceSignal`.\nThe format of the timeout is `PT#H#M#S`. In the example below AWS Cloudformation will wait for\n3 success signals to occur within 15 minutes before the status of the resource will be set to\n`CREATE_COMPLETE`.\n\n```ts\nresource.cfnOptions.resourceSignal = {\n  count: 3,\n  timeout: 'PR15M',\n}\n```\n\n[creation-policy]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html\n\n### Intrinsic Functions and Condition Expressions\n\nCloudFormation supports [intrinsic functions][cfn-intrinsics]. These functions\ncan be accessed from the `Fn` class, which provides type-safe methods for each\nintrinsic function as well as condition expressions:\n\n```ts\ndeclare const myObjectOrArray: any;\ndeclare const myArray: any;\n\n// To use Fn::Base64\nFn.base64('SGVsbG8gQ0RLIQo=');\n\n// To compose condition expressions:\nconst environmentParameter = new CfnParameter(this, 'Environment');\nFn.conditionAnd(\n  // The \"Environment\" CloudFormation template parameter evaluates to \"Production\"\n  Fn.conditionEquals('Production', environmentParameter),\n  // The AWS::Region pseudo-parameter value is NOT equal to \"us-east-1\"\n  Fn.conditionNot(Fn.conditionEquals('us-east-1', Aws.REGION)),\n);\n\n// To use Fn::ToJsonString\nFn.toJsonString(myObjectOrArray);\n\n// To use Fn::Length\nFn.len(Fn.split(',', myArray));\n```\n\nWhen working with deploy-time values (those for which `Token.isUnresolved`\nreturns `true`), idiomatic conditionals from the programming language cannot be\nused (the value will not be known until deployment time). When conditional logic\nneeds to be expressed with un-resolved values, it is necessary to use\nCloudFormation conditions by means of the `CfnCondition` class:\n\n```ts\nconst environmentParameter = new CfnParameter(this, 'Environment');\nconst isProd = new CfnCondition(this, 'IsProduction', {\n  expression: Fn.conditionEquals('Production', environmentParameter),\n});\n\n// Configuration value that is a different string based on IsProduction\nconst stage = Fn.conditionIf(isProd.logicalId, 'Beta', 'Prod').toString();\n\n// Make Bucket creation condition to IsProduction by accessing\n// and overriding the CloudFormation resource\nconst bucket = new s3.Bucket(this, 'Bucket');\nconst cfnBucket = myBucket.node.defaultChild as s3.CfnBucket;\ncfnBucket.cfnOptions.condition = isProd;\n```\n\n[cfn-intrinsics]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html\n\n### Mappings\n\nCloudFormation [mappings][cfn-mappings] are created and queried using the\n`CfnMappings` class:\n\n```ts\nconst regionTable = new CfnMapping(this, 'RegionTable', {\n  mapping: {\n    'us-east-1': {\n      regionName: 'US East (N. Virginia)',\n      // ...\n    },\n    'us-east-2': {\n      regionName: 'US East (Ohio)',\n      // ...\n    },\n    // ...\n  }\n});\n\nregionTable.findInMap(Aws.REGION, 'regionName')\n```\n\nThis will yield the following template:\n\n```yaml\nMappings:\n  RegionTable:\n    us-east-1:\n      regionName: US East (N. Virginia)\n    us-east-2:\n      regionName: US East (Ohio)\n```\n\nMappings can also be synthesized \"lazily\"; lazy mappings will only render a \"Mappings\"\nsection in the synthesized CloudFormation template if some `findInMap` call is unable to\nimmediately return a concrete value due to one or both of the keys being unresolved tokens\n(some value only available at deploy-time).\n\nFor example, the following code will not produce anything in the \"Mappings\" section. The\ncall to `findInMap` will be able to resolve the value during synthesis and simply return\n`'US East (Ohio)'`.\n\n```ts\nconst regionTable = new CfnMapping(this, 'RegionTable', {\n  mapping: {\n    'us-east-1': {\n      regionName: 'US East (N. Virginia)',\n    },\n    'us-east-2': {\n      regionName: 'US East (Ohio)',\n    },\n  },\n  lazy: true,\n});\n\nregionTable.findInMap('us-east-2', 'regionName');\n```\n\nOn the other hand, the following code will produce the \"Mappings\" section shown above,\nsince the top-level key is an unresolved token. The call to `findInMap` will return a token that resolves to\n`{ \"Fn::FindInMap\": [ \"RegionTable\", { \"Ref\": \"AWS::Region\" }, \"regionName\" ] }`.\n\n```ts\ndeclare const regionTable: CfnMapping;\n\nregionTable.findInMap(Aws.REGION, 'regionName');\n```\n\n[cfn-mappings]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html\n\n### Dynamic References\n\nCloudFormation supports [dynamically resolving][cfn-dynamic-references] values\nfor SSM parameters (including secure strings) and Secrets Manager. Encoding such\nreferences is done using the `CfnDynamicReference` class:\n\n```ts\nnew CfnDynamicReference(\n  CfnDynamicReferenceService.SECRETS_MANAGER,\n  'secret-id:secret-string:json-key:version-stage:version-id',\n);\n```\n\n[cfn-dynamic-references]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html\n\n### Template Options & Transform\n\nCloudFormation templates support a number of options, including which Macros or\n[Transforms][cfn-transform] to use when deploying the stack. Those can be\nconfigured using the `stack.templateOptions` property:\n\n```ts\nconst stack = new Stack(app, 'StackName');\n\nstack.templateOptions.description = 'This will appear in the AWS console';\nstack.templateOptions.transforms = ['AWS::Serverless-2016-10-31'];\nstack.templateOptions.metadata = {\n  metadataKey: 'MetadataValue',\n};\n```\n\n[cfn-transform]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html\n\n### Emitting Raw Resources\n\nThe `CfnResource` class allows emitting arbitrary entries in the\n[Resources][cfn-resources] section of the CloudFormation template.\n\n```ts\nnew CfnResource(this, 'ResourceId', {\n  type: 'AWS::S3::Bucket',\n  properties: {\n    BucketName: 'bucket-name'\n  },\n});\n```\n\nAs for any other resource, the logical ID in the CloudFormation template will be\ngenerated by the AWS CDK, but the type and properties will be copied verbatim in\nthe synthesized template.\n\n[cfn-resources]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html\n\n### Including raw CloudFormation template fragments\n\nWhen migrating a CloudFormation stack to the AWS CDK, it can be useful to\ninclude fragments of an existing template verbatim in the synthesized template.\nThis can be achieved using the `CfnInclude` class.\n\n```ts\nnew CfnInclude(this, 'ID', {\n  template: {\n    Resources: {\n      Bucket: {\n        Type: 'AWS::S3::Bucket',\n        Properties: {\n          BucketName: 'my-shiny-bucket'\n        }\n      }\n    }\n  },\n});\n```\n\n### Termination Protection\n\nYou can prevent a stack from being accidentally deleted by enabling termination\nprotection on the stack. If a user attempts to delete a stack with termination\nprotection enabled, the deletion fails and the stack--including its status--remains\nunchanged. Enabling or disabling termination protection on a stack sets it for any\nnested stacks belonging to that stack as well. You can enable termination protection\non a stack by setting the `terminationProtection` prop to `true`.\n\n```ts\nconst stack = new Stack(app, 'StackName', {\n  terminationProtection: true,\n});\n```\n\nBy default, termination protection is disabled.\n\n### Description\n\nYou can add a description of the stack in the same way as `StackProps`.\n\n```ts\nconst stack = new Stack(app, 'StackName', {\n  description: 'This is a description.',\n});\n```\n\n### CfnJson\n\n`CfnJson` allows you to postpone the resolution of a JSON blob from\ndeployment-time. This is useful in cases where the CloudFormation JSON template\ncannot express a certain value.\n\nA common example is to use `CfnJson` in order to render a JSON map which needs\nto use intrinsic functions in keys. Since JSON map keys must be strings, it is\nimpossible to use intrinsics in keys and `CfnJson` can help.\n\nThe following example defines an IAM role which can only be assumed by\nprincipals that are tagged with a specific tag.\n\n```ts\nconst tagParam = new CfnParameter(this, 'TagName');\n\nconst stringEquals = new CfnJson(this, 'ConditionJson', {\n  value: {\n    [`aws:PrincipalTag/${tagParam.valueAsString}`]: true,\n  },\n});\n\nconst principal = new iam.AccountRootPrincipal().withConditions({\n  StringEquals: stringEquals,\n});\n\nnew iam.Role(this, 'MyRole', { assumedBy: principal });\n```\n\n**Explanation**: since in this example we pass the tag name through a parameter, it\ncan only be resolved during deployment. The resolved value can be represented in\nthe template through a `{ \"Ref\": \"TagName\" }`. However, since we want to use\nthis value inside a [`aws:PrincipalTag/TAG-NAME`](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-principaltag)\nIAM operator, we need it in the *key* of a `StringEquals` condition. JSON keys\n*must be* strings, so to circumvent this limitation, we use `CfnJson`\nto \"delay\" the rendition of this template section to deploy-time. This means\nthat the value of `StringEquals` in the template will be `{ \"Fn::GetAtt\": [ \"ConditionJson\", \"Value\" ] }`, and will only \"expand\" to the operator we synthesized during deployment.\n\n### Stack Resource Limit\n\nWhen deploying to AWS CloudFormation, it needs to keep in check the amount of resources being added inside a Stack. Currently it's possible to check the limits in the [AWS CloudFormation quotas](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html) page.\n\nIt's possible to synthesize the project with more Resources than the allowed (or even reduce the number of Resources).\n\nSet the context key `@aws-cdk/core:stackResourceLimit` with the proper value, being 0 for disable the limit of resources.\n\n## App Context\n\n[Context values](https://docs.aws.amazon.com/cdk/v2/guide/context.html) are key-value pairs that can be associated with an app, stack, or construct.\nOne common use case for context is to use it for enabling/disabling [feature flags](https://docs.aws.amazon.com/cdk/v2/guide/featureflags.html). There are several places\nwhere context can be specified. They are listed below in the order they are evaluated (items at the\ntop take precedence over those below).\n\n- The `node.setContext()` method\n- The `postCliContext` prop when you create an `App`\n- The CLI via the `--context` CLI argument\n- The `cdk.json` file via the `context` key:\n- The `cdk.context.json` file:\n- The `~/.cdk.json` file via the `context` key:\n- The `context` prop when you create an `App`\n\n### Examples of setting context\n\n```ts\nnew App({\n  context: {\n    '@aws-cdk/core:newStyleStackSynthesis': true,\n  },\n});\n```\n\n```ts\nconst app = new App();\napp.node.setContext('@aws-cdk/core:newStyleStackSynthesis', true);\n```\n\n```ts\nnew App({\n  postCliContext: {\n    '@aws-cdk/core:newStyleStackSynthesis': true,\n  },\n});\n```\n\n```console\ncdk synth --context @aws-cdk/core:newStyleStackSynthesis=true\n```\n\n_cdk.json_\n\n```json\n{\n  \"context\": {\n    \"@aws-cdk/core:newStyleStackSynthesis\": true\n  }\n}\n```\n\n_cdk.context.json_\n\n```json\n{\n  \"@aws-cdk/core:newStyleStackSynthesis\": true\n}\n```\n\n_~/.cdk.json_\n\n```json\n{\n  \"context\": {\n    \"@aws-cdk/core:newStyleStackSynthesis\": true\n  }\n}\n```\n\n## IAM Permissions Boundary\n\nIt is possible to apply an [IAM permissions boundary](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html)\nto all roles within a specific construct scope. The most common use case would\nbe to apply a permissions boundary at the `Stage` level.\n\n```ts\ndeclare const app: App;\n\nconst prodStage = new Stage(app, 'ProdStage', {\n  permissionsBoundary: PermissionsBoundary.fromName('cdk-${Qualifier}-PermissionsBoundary'),\n});\n```\n\nAny IAM Roles or Users created within this Stage will have the default\npermissions boundary attached.\n\nFor more details see the [Permissions Boundary](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_iam-readme.html#permissions-boundaries) section in the IAM guide.\n\n## Policy Validation\n\nIf you or your organization use (or would like to use) any policy validation tool, such as\n[CloudFormation\nGuard](https://docs.aws.amazon.com/cfn-guard/latest/ug/what-is-guard.html) or\n[OPA](https://www.openpolicyagent.org/), to define constraints on your\nCloudFormation template, you can incorporate them into the CDK application.\nBy using the appropriate plugin, you can make the CDK application check the\ngenerated CloudFormation templates against your policies immediately after\nsynthesis. If there are any violations, the synthesis will fail and a report\nwill be printed to the console or to a file (see below).\n\n> **Note**\n> This feature is considered experimental, and both the plugin API and the\n> format of the validation report are subject to change in the future.\n\n### For application developers\n\nTo use one or more validation plugins in your application, use the\n`policyValidationBeta1` property of `Stage`:\n\n```ts\n// globally for the entire app (an app is a stage)\nconst app = new App({\n  policyValidationBeta1: [\n    // These hypothetical classes implement IValidationPlugin:\n    new ThirdPartyPluginX(),\n    new ThirdPartyPluginY(),\n  ],\n});\n\n// only apply to a particular stage\nconst prodStage = new Stage(app, 'ProdStage', {\n  policyValidationBeta1: [...],\n});\n```\n\nImmediately after synthesis, all plugins registered this way will be invoked to\nvalidate all the templates generated in the scope you defined. In particular, if\nyou register the templates in the `App` object, all templates will be subject to\nvalidation.\n\n> **Warning**\n> Other than modifying the cloud assembly, plugins can do anything that your CDK\n> application can. They can read data from the filesystem, access the network\n> etc. It's your responsibility as the consumer of a plugin to verify that it is\n> secure to use.\n\nBy default, the report will be printed in a human readable format. If you want a\nreport in JSON format, enable it using the `@aws-cdk/core:validationReportJson`\ncontext passing it directly to the application:\n\n```ts\nconst app = new App({\n  context: { '@aws-cdk/core:validationReportJson': true },\n});\n```\n\nAlternatively, you can set this context key-value pair using the `cdk.json` or\n`cdk.context.json` files in your project directory (see\n[Runtime context](https://docs.aws.amazon.com/cdk/v2/guide/context.html)).\n\nIf you choose the JSON format, the CDK will print the policy validation report\nto a file called `policy-validation-report.json` in the cloud assembly\ndirectory. For the default, human-readable format, the report will be printed to\nthe standard output.\n\n### For plugin authors\n\nThe communication protocol between the CDK core module and your policy tool is\ndefined by the `IValidationPluginBeta1` interface. To create a new plugin you must\nwrite a class that implements this interface. There are two things you need to\nimplement: the plugin name (by overriding the `name` property), and the\n`validate()` method.\n\nThe framework will call `validate()`, passing an `IValidationContextBeta1` object.\nThe location of the templates to be validated is given by `templatePaths`. The\nplugin should return an instance of `ValidationPluginReportBeta1`. This object\nrepresents the report that the user wil receive at the end of the synthesis.\n\n```ts\nvalidate(context: ValidationContextBeta1): ValidationReportBeta1 {\n  // First read the templates using context.templatePaths...\n\n  // ...then perform the validation, and then compose and return the report.\n  // Using hard-coded values here for better clarity:\n  return {\n    success: false,\n    violations: [{\n      ruleName: 'CKV_AWS_117',\n      recommendation: 'Ensure that AWS Lambda function is configured inside a VPC',\n      fix: 'https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1',\n      violatingResources: [{\n        resourceName: 'MyFunction3BAA72D1',\n        templatePath: '/home/johndoe/myapp/cdk.out/MyService.template.json',\n        locations: 'Properties/VpcConfig',\n      }],\n    }],\n  };\n}\n```\n\nNote that plugins are not allowed to modify anything in the cloud assembly. Any\nattempt to do so will result in synthesis failure.\n\nIf your plugin depends on an external tool, keep in mind that some developers may\nnot have that tool installed in their workstations yet. To minimize friction, we\nhighly recommend that you provide some installation script along with your\nplugin package, to automate the whole process. Better yet, run that script as\npart of the installation of your package. With `npm`, for example, you can run\nadd it to the `postinstall`\n[script](https://docs.npmjs.com/cli/v9/using-npm/scripts) in the `package.json`\nfile.\n\n<!--END CORE DOCUMENTATION-->\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/core",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
      "namespace": "Amazon.CDK",
      "packageId": "Amazon.CDK"
    },
    "java": {
      "maven": {
        "artifactId": "core",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.core"
    },
    "js": {
      "npm": "@aws-cdk/core"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.core",
      "module": "aws_cdk.core"
    }
  },
  "types": {
    "@aws-cdk/core.Annotations": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Includes API for attaching annotations such as warning messages to constructs."
      },
      "fqn": "@aws-cdk/core.Annotations",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/annotations.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the annotations API for a construct scope."
          },
          "locationInModule": {
            "filename": "lib/annotations.ts",
            "line": 13
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "The scope."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Annotations"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Deprecations will be added only once per construct as a warning and will be\ndeduplicated based on the `api`.\n\nIf the environment variable `CDK_BLOCK_DEPRECATIONS` is set, this method\nwill throw an error instead with the deprecation message.",
            "stability": "stable",
            "summary": "Adds a deprecation warning for a specific API."
          },
          "locationInModule": {
            "filename": "lib/annotations.ts",
            "line": 73
          },
          "name": "addDeprecation",
          "parameters": [
            {
              "docs": {
                "summary": "The API being deprecated in the format `module.Class.property` (e.g. `@aws-cdk/core.Construct.node`)."
              },
              "name": "api",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The deprecation message to display, with information about alternatives."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The toolkit will fail deployment of any stack that has errors reported against it.",
            "stability": "stable",
            "summary": "Adds an { \"error\": <message> } metadata entry to this construct."
          },
          "locationInModule": {
            "filename": "lib/annotations.ts",
            "line": 55
          },
          "name": "addError",
          "parameters": [
            {
              "docs": {
                "summary": "The error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The CLI will display the info message when apps are synthesized.",
            "stability": "stable",
            "summary": "Adds an info metadata entry to this construct."
          },
          "locationInModule": {
            "filename": "lib/annotations.ts",
            "line": 46
          },
          "name": "addInfo",
          "parameters": [
            {
              "docs": {
                "summary": "The info message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The CLI will display the warning when an app is synthesized, or fail if run\nin --strict mode.",
            "stability": "stable",
            "summary": "Adds a warning metadata entry to this construct."
          },
          "locationInModule": {
            "filename": "lib/annotations.ts",
            "line": 35
          },
          "name": "addWarning",
          "parameters": [
            {
              "docs": {
                "summary": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Annotations",
      "symbolId": "lib/annotations:Annotations"
    },
    "@aws-cdk/core.App": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.Stage",
      "docs": {
        "remarks": "You would normally define an `App` instance in your program's entrypoint,\nthen define constructs where the app is used as the parent scope.\n\nAfter all the child constructs are defined within the app, you should call\n`app.synth()` which will emit a \"cloud assembly\" from this app into the\ndirectory specified by `outdir`. Cloud assemblies includes artifacts such as\nCloudFormation templates and assets that are needed to deploy this app into\nthe AWS cloud.",
        "see": "https://docs.aws.amazon.com/cdk/latest/guide/apps.html",
        "stability": "stable",
        "summary": "A construct which represents an entire CDK app. This construct is normally the root of the construct tree."
      },
      "fqn": "@aws-cdk/core.App",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes a CDK application."
        },
        "locationInModule": {
          "filename": "lib/app.ts",
          "line": 167
        },
        "parameters": [
          {
            "docs": {
              "summary": "initialization properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.AppProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 146
      },
      "methods": [
        {
          "docs": {
            "returns": "`true` if `obj` is an `App`.",
            "stability": "stable",
            "summary": "Checks if an object is an instance of the `App` class."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 152
          },
          "name": "isApp",
          "parameters": [
            {
              "docs": {
                "summary": "The object to evaluate."
              },
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "App",
      "symbolId": "lib/app:App"
    },
    "@aws-cdk/core.AppProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Initialization props for apps."
      },
      "fqn": "@aws-cdk/core.AppProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 15
      },
      "name": "AppProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Value of 'aws:cdk:version-reporting' context key",
            "stability": "stable",
            "summary": "Include runtime versioning information in the Stacks of this app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 61
          },
          "name": "analyticsReporting",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if running via CDK CLI (`CDK_OUTDIR` is set), `false`\notherwise",
            "remarks": "If you set this, you don't have to call `synth()` explicitly. Note that\nthis feature is only available for certain programming languages, and\ncalling `synth()` is still recommended.",
            "stability": "stable",
            "summary": "Automatically call `synth()` before the program exits."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 26
          },
          "name": "autoSynth",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional context",
            "remarks": "Context set by the CLI or the `context` key in `cdk.json` has precedence.\n\nContext can be read from any construct using `node.getContext(key)`.",
            "stability": "stable",
            "summary": "Additional context values for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 72
          },
          "name": "context",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A `DefaultStackSynthesizer` with default settings",
            "remarks": "The Stack Synthesizer controls aspects of synthesis and deployment,\nlike how assets are referenced and what IAM roles to use. For more\ninformation, see the README of the main CDK package.",
            "stability": "stable",
            "summary": "The stack synthesizer to use by default for all Stacks in the App."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 121
          },
          "name": "defaultStackSynthesizer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.IReusableStackSynthesizer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If this value is _not_ set, considers the environment variable `CDK_OUTDIR`.\n  If `CDK_OUTDIR` is not defined, uses a temp directory.",
            "remarks": "You should never need to set this value. By default, the value you pass to\nthe CLI's `--output` flag will be used, and if you change it to a different\ndirectory the CLI will fail to pick up the generated Cloud Assembly.\n\nThis property is intended for internal and testing use.",
            "stability": "stable",
            "summary": "The output directory into which to emit synthesized artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 40
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no validation plugins",
            "stability": "stable",
            "summary": "Validation plugins to run after synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 128
          },
          "name": "policyValidationBeta1",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IPolicyValidationPluginBeta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional context",
            "example": "// context from the CLI and from `cdk.json` are stored in the\n// CDK_CONTEXT env variable\nconst cliContext = JSON.parse(process.env.CDK_CONTEXT!);\n\n// determine whether to take the context passed in the CLI or not\nconst determineValue = process.env.PROD ? cliContext.SOMEKEY : 'my-prod-value';\nnew App({\n  postCliContext: {\n    SOMEKEY: determineValue,\n  },\n});",
            "remarks": "Context provided here has precedence over context set by:\n\n- The CLI via --context\n- The `context` key in `cdk.json`\n- The `AppProps.context` property\n\nThis property is recommended over the `AppProps.context` property since you\ncan make final decision over which context value to take in your app.\n\nContext can be read from any construct using `node.getContext(key)`.",
            "stability": "stable",
            "summary": "Additional context values for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 103
          },
          "name": "postCliContext",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Value of 'aws:cdk:version-reporting' context key",
            "deprecated": "use `versionReporting` instead",
            "stability": "deprecated",
            "summary": "Include runtime versioning information in the Stacks of this app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 54
          },
          "name": "runtimeInfo",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true stack traces are included unless `aws:cdk:disable-stack-trace` is set in the context.",
            "stability": "stable",
            "summary": "Include construct creation stack trace in the `aws:cdk:trace` metadata key of all constructs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 46
          },
          "name": "stackTraces",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Include construct tree metadata as part of the Cloud Assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 110
          },
          "name": "treeMetadata",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/app:AppProps"
    },
    "@aws-cdk/core.Arn": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.Arn",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/arn.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "remarks": "Necessary for resource names (paths) that may contain the separator, like\n`arn:aws:iam::111111111111:role/path/to/role/name`.\n\nOnly works if we statically know the expected `resourceType` beforehand, since we're going\nto use that to split the string on ':<resourceType>/' (and take the right-hand side).\n\nWe can't extract the 'resourceType' from the ARN at hand, because CloudFormation Expressions\nonly allow literals in the 'separator' argument to `{ Fn::Split }`, and so it can't be\n`{ Fn::Select: [5, { Fn::Split: [':', ARN] }}`.\n\nOnly necessary for ARN formats for which the type-name separator is `/`.",
            "stability": "stable",
            "summary": "Extract the full resource name from an ARN."
          },
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 313
          },
          "name": "extractResourceName",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resourceType",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If `partition`, `region` or `account` are not specified, the stack's\npartition, region and account will be used.\n\nIf any component is the empty string, an empty string will be inserted\ninto the generated ARN at the location that component corresponds to.\n\nThe ARN will be formatted as follows:\n\n  arn:{partition}:{service}:{region}:{account}:{resource}{sep}{resource-name}\n\nThe required ARN pieces that are omitted will be taken from the stack that\nthe 'scope' is attached to. If all ARN pieces are supplied, the supplied scope\ncan be 'undefined'.",
            "stability": "stable",
            "summary": "Creates an ARN from components."
          },
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 133
          },
          "name": "format",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/core.ArnComponents"
              }
            },
            {
              "name": "stack",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use split instead",
            "remarks": "IF THE ARN IS A CONCRETE STRING...\n\n...it will be parsed and validated. The separator (`sep`) will be set to '/'\nif the 6th component includes a '/', in which case, `resource` will be set\nto the value before the '/' and `resourceName` will be the rest. In case\nthere is no '/', `resource` will be set to the 6th components and\n`resourceName` will be set to the rest of the string.\n\nIF THE ARN IS A TOKEN...\n\n...it cannot be validated, since we don't have the actual value yet at the\ntime of this function call. You will have to supply `sepIfToken` and\nwhether or not ARNs of the expected format usually have resource names\nin order to parse it properly. The resulting `ArnComponents` object will\ncontain tokens for the subexpressions of the ARN, not string literals.\n\nIf the resource name could possibly contain the separator char, the actual\nresource name cannot be properly parsed. This only occurs if the separator\nchar is '/', and happens for example for S3 object ARNs, IAM Role ARNs,\nIAM OIDC Provider ARNs, etc. To properly extract the resource name from a\nTokenized ARN, you must know the resource type and call\n`Arn.extractResourceName`.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN.",
            "stability": "deprecated",
            "summary": "Given an ARN, parses it and returns components."
          },
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 203
          },
          "name": "parse",
          "parameters": [
            {
              "docs": {
                "summary": "The ARN to parse."
              },
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The separator used to separate resource from resourceName."
              },
              "name": "sepIfToken",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "For\nexample, SNS Topics ARNs have the 'resource' component contain the topic\nname, and no 'resourceName' component.",
                "summary": "Whether there is a name component in the ARN at all."
              },
              "name": "hasName",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ArnComponents"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Works both if 'arn' is a string like 'arn:aws:s3:::bucket',\nand a Token representing a dynamic CloudFormation expression\n(in which case the returned components will also be dynamic CloudFormation expressions,\nencoded as Tokens).",
            "stability": "stable",
            "summary": "Splits the provided ARN into its components."
          },
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 223
          },
          "name": "split",
          "parameters": [
            {
              "docs": {
                "summary": "the ARN to split into its components."
              },
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the expected format of 'arn' - depends on what format the service 'arn' represents uses."
              },
              "name": "arnFormat",
              "type": {
                "fqn": "@aws-cdk/core.ArnFormat"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ArnComponents"
            }
          },
          "static": true
        }
      ],
      "name": "Arn",
      "symbolId": "lib/arn:Arn"
    },
    "@aws-cdk/core.ArnComponents": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.ArnComponents",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/arn.ts",
        "line": 50
      },
      "name": "ArnComponents",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource type (e.g. \"table\", \"autoScalingGroup\", \"certificate\"). For some resource types, e.g. S3 buckets, this field defines the bucket name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 88
          },
          "name": "resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service namespace that identifies the AWS product (for example, 's3', 'iam', 'codepipline')."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 65
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The account the stack is deployed to.",
            "remarks": "For example, 123456789012. Note that the ARNs for some resources don't\nrequire an account number, so this component might be omitted.",
            "stability": "stable",
            "summary": "The ID of the AWS account that owns the resource, without the hyphens."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 82
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- uses value of `sep` as the separator for formatting,\n`ArnFormat.SLASH_RESOURCE_NAME` if that property was also not provided",
            "stability": "stable",
            "summary": "The specific ARN format to use for this ARN value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 112
          },
          "name": "arnFormat",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.ArnFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The AWS partition the stack is deployed to.",
            "remarks": "For standard AWS regions, the\npartition is aws. If you have resources in other partitions, the\npartition is aws-partitionname. For example, the partition for resources\nin the China (Beijing) region is aws-cn.",
            "stability": "stable",
            "summary": "The partition that the resource is in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 59
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The region the stack is deployed to.",
            "remarks": "Note that the ARNs for some resources\ndo not require a region, so this component might be omitted.",
            "stability": "stable",
            "summary": "The region the resource resides in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 73
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource name or path within the resource (i.e. S3 bucket object key) or a wildcard such as ``\"*\"``. This is service-dependent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 104
          },
          "name": "resourceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'/'",
            "deprecated": "use arnFormat instead",
            "remarks": "Can be either '/', ':' or an empty string. Will only be used if resourceName is defined.",
            "stability": "deprecated",
            "summary": "Separator between resource type and the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/arn.ts",
            "line": 98
          },
          "name": "sep",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/arn:ArnComponents"
    },
    "@aws-cdk/core.ArnFormat": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "An enum representing the various ARN formats that different services use."
      },
      "fqn": "@aws-cdk/core.ArnFormat",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/arn.ts",
        "line": 9
      },
      "members": [
        {
          "docs": {
            "remarks": "This format is used for S3 resources,\nlike 'arn:aws:s3:::bucket'.\nEverything after the last colon is considered the 'resource',\neven if it contains slashes,\nlike in 'arn:aws:s3:::bucket/object.zip'.",
            "stability": "stable",
            "summary": "This represents a format where there is no 'resourceName' part."
          },
          "name": "NO_RESOURCE_NAME"
        },
        {
          "docs": {
            "remarks": "Like in: 'arn:aws:service:region:account:resource:resourceName'.\nEverything after the last colon is considered the 'resourceName',\neven if it contains slashes,\nlike in 'arn:aws:apigateway:region:account:resource:/test/mydemoresource/*'.",
            "stability": "stable",
            "summary": "This represents a format where the 'resource' and 'resourceName' parts are separated with a colon."
          },
          "name": "COLON_RESOURCE_NAME"
        },
        {
          "docs": {
            "remarks": "Like in: 'arn:aws:service:region:account:resource/resourceName'.\nEverything after the separating slash is considered the 'resourceName',\neven if it contains colons,\nlike in 'arn:aws:cognito-sync:region:account:identitypool/us-east-1:1a1a1a1a-ffff-1111-9999-12345678:bla'.",
            "stability": "stable",
            "summary": "This represents a format where the 'resource' and 'resourceName' parts are separated with a slash."
          },
          "name": "SLASH_RESOURCE_NAME"
        },
        {
          "docs": {
            "remarks": "Like in: 'arn:aws:service:region:account:/resource/resourceName'.\nNote that the leading slash is _not_ included in the parsed 'resource' part.",
            "stability": "stable",
            "summary": "This represents a format where the 'resource' and 'resourceName' parts are seperated with a slash, but there is also an additional slash after the colon separating 'account' from 'resource'."
          },
          "name": "SLASH_RESOURCE_SLASH_RESOURCE_NAME"
        }
      ],
      "name": "ArnFormat",
      "symbolId": "lib/arn:ArnFormat"
    },
    "@aws-cdk/core.Aspects": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Aspects can be applied to CDK tree scopes and can operate on the tree before synthesis."
      },
      "fqn": "@aws-cdk/core.Aspects",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aspect.ts",
        "line": 19
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the `Aspects` object associated with a construct scope."
          },
          "locationInModule": {
            "filename": "lib/aspect.ts",
            "line": 24
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "The scope for which these aspects will apply."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Aspects"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an aspect to apply this scope before synthesis."
          },
          "locationInModule": {
            "filename": "lib/aspect.ts",
            "line": 48
          },
          "name": "add",
          "parameters": [
            {
              "docs": {
                "summary": "The aspect to add."
              },
              "name": "aspect",
              "type": {
                "fqn": "@aws-cdk/core.IAspect"
              }
            }
          ]
        }
      ],
      "name": "Aspects",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The list of aspects which were directly applied on this scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspect.ts",
            "line": 55
          },
          "name": "all",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IAspect"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/aspect:Aspects"
    },
    "@aws-cdk/core.AssetHashType": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "NOTE: the hash is used in order to identify a specific revision of the asset, and\nused for optimizing and caching deployment activities related to this asset such as\npackaging, uploading to Amazon S3, etc.",
        "stability": "stable",
        "summary": "The type of asset hash."
      },
      "fqn": "@aws-cdk/core.AssetHashType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 69
      },
      "members": [
        {
          "docs": {
            "remarks": "When bundling, use `SOURCE` when the content of the bundling output is not\nstable across repeated bundling operations.",
            "stability": "stable",
            "summary": "Based on the content of the source path."
          },
          "name": "SOURCE"
        },
        {
          "docs": {
            "deprecated": "use `OUTPUT` instead",
            "stability": "deprecated",
            "summary": "Based on the content of the bundled path."
          },
          "name": "BUNDLE"
        },
        {
          "docs": {
            "remarks": "Use `OUTPUT` when the source of the asset is a top level folder containing\ncode and/or dependencies that are not directly linked to the asset.",
            "stability": "stable",
            "summary": "Based on the content of the bundling output."
          },
          "name": "OUTPUT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use a custom hash."
          },
          "name": "CUSTOM"
        }
      ],
      "name": "AssetHashType",
      "symbolId": "lib/assets:AssetHashType"
    },
    "@aws-cdk/core.AssetManifestBuilder": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "This class does not need to be used by app builders; it is only necessary for building Stack Synthesizers.",
        "stability": "stable",
        "summary": "Build an asset manifest from assets added to a stack."
      },
      "fqn": "@aws-cdk/core.AssetManifestBuilder",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "remarks": "sourceHash should be unique for every source.",
            "stability": "stable",
            "summary": "Add a docker asset source and destination to the manifest."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 106
          },
          "name": "addDockerImageAsset",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "sourceHash",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "source",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageSource"
              }
            },
            {
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageDestination"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageDestination"
            }
          }
        },
        {
          "docs": {
            "remarks": "sourceHash should be unique for every source.",
            "stability": "stable",
            "summary": "Add a file asset source and destination to the manifest."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 90
          },
          "name": "addFileAsset",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "sourceHash",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "source",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.FileSource"
              }
            },
            {
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.FileDestination"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.FileDestination"
            }
          }
        },
        {
          "docs": {
            "remarks": "Derive the region from the stack, use the asset hash as the key, and set the prefix.",
            "stability": "stable",
            "summary": "Add a docker image asset to the manifest with default settings."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 55
          },
          "name": "defaultAddDockerImageAsset",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/core.AssetManifestDockerImageDestination"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageDestination"
            }
          }
        },
        {
          "docs": {
            "remarks": "Derive the region from the stack, use the asset hash as the key, copy the\nfile extension over, and set the prefix.",
            "stability": "stable",
            "summary": "Add a file asset to the manifest with default settings."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 24
          },
          "name": "defaultAddFileAsset",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/core.AssetManifestFileDestination"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.FileDestination"
            }
          }
        },
        {
          "docs": {
            "remarks": "Return the artifact id, which should be added to the `additionalDependencies`\nfield of the stack artifact.",
            "stability": "stable",
            "summary": "Write the manifest to disk, and add it to the synthesis session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 130
          },
          "name": "emitManifest",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.AssetManifestOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "AssetManifestBuilder",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether there are any assets registered in the manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 120
          },
          "name": "hasAssets",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/asset-manifest-builder:AssetManifestBuilder"
    },
    "@aws-cdk/core.AssetManifestDockerImageDestination": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The destination for a docker image asset, when it is given to the AssetManifestBuilder."
      },
      "fqn": "@aws-cdk/core.AssetManifestDockerImageDestination",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
        "line": 193
      },
      "name": "AssetManifestDockerImageDestination",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Repository name where the docker image asset should be written."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 197
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "''",
            "stability": "stable",
            "summary": "Prefix to add to the asset hash to make the Docker image tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 204
          },
          "name": "dockerTagPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role",
            "stability": "stable",
            "summary": "Role to use to perform the upload."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 211
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RoleOptions"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/asset-manifest-builder:AssetManifestDockerImageDestination"
    },
    "@aws-cdk/core.AssetManifestFileDestination": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The destination for a file asset, when it is given to the AssetManifestBuilder."
      },
      "fqn": "@aws-cdk/core.AssetManifestFileDestination",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
        "line": 169
      },
      "name": "AssetManifestFileDestination",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Bucket name where the file asset should be written."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 173
          },
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "''",
            "stability": "stable",
            "summary": "Prefix to prepend to the asset hash."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 180
          },
          "name": "bucketPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- current role",
            "stability": "stable",
            "summary": "Role to use for uploading."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 187
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RoleOptions"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/asset-manifest-builder:AssetManifestFileDestination"
    },
    "@aws-cdk/core.AssetOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Asset hash options."
      },
      "fqn": "@aws-cdk/core.AssetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 18
      },
      "name": "AssetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- based on `assetHashType`",
            "remarks": "If `assetHashType` is set it must\nbe set to `AssetHashType.CUSTOM`. For consistency, this custom hash will\nbe SHA256 hashed and encoded as hex. The resulting hash will be the asset\nhash.\n\nNOTE: the hash is used in order to identify a specific revision of the asset, and\nused for optimizing and caching deployment activities related to this asset such as\npackaging, uploading to Amazon S3, etc. If you chose to customize the hash, you will\nneed to make sure it is updated every time the asset changes, or otherwise it is\npossible that some deployments will not be invalidated.",
            "stability": "stable",
            "summary": "Specify a custom hash for this asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 33
          },
          "name": "assetHash",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the default is `AssetHashType.SOURCE`, but if `assetHash` is\nexplicitly specified this value defaults to `AssetHashType.CUSTOM`.",
            "remarks": "If `assetHash` is configured, this option must be `undefined` or\n`AssetHashType.CUSTOM`.",
            "stability": "stable",
            "summary": "Specifies the type of hash to calculate for this asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 44
          },
          "name": "assetHashType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.AssetHashType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- uploaded as-is to S3 if the asset is a regular file or a .zip file,\narchived into a .zip file and uploaded to S3 otherwise",
            "remarks": "The asset path will be mounted at `/asset-input`. The Docker\ncontainer is responsible for putting content at `/asset-output`.\nThe content at `/asset-output` will be zipped and used as the\nfinal asset.",
            "stability": "stable",
            "summary": "Bundle the asset by executing a command in a Docker container or a custom bundling provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 59
          },
          "name": "bundling",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.BundlingOptions"
          }
        }
      ],
      "symbolId": "lib/assets:AssetOptions"
    },
    "@aws-cdk/core.AssetStaging": {
      "assembly": "@aws-cdk/core",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "This is controlled by the context key 'aws:cdk:asset-staging' and enabled\nby the CLI by default in order to ensure that when the CDK app exists, all\nassets are available for deployment. Otherwise, if an app references assets\nin temporary locations, those will not be available when it exists (see\nhttps://github.com/aws/aws-cdk/issues/1716).\n\nThe `stagedPath` property is a stringified token that represents the location\nof the file or directory after staging. It will be resolved only during the\n\"prepare\" stage and may be either the original path or the staged path\ndepending on the context setting.\n\nThe file/directory are staged based on their content hash (fingerprint). This\nmeans that only if content was changed, copy will happen.",
        "stability": "stable",
        "summary": "Stages a file or directory from a location on the file system into a staging directory."
      },
      "fqn": "@aws-cdk/core.AssetStaging",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/asset-staging.ts",
          "line": 162
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.AssetStagingProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/asset-staging.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Clears the asset hash cache."
          },
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 87
          },
          "name": "clearAssetHashCache",
          "static": true
        },
        {
          "docs": {
            "remarks": "Only returns a relative path if the asset was staged, returns an absolute path if\nit was not staged.\n\nA bundled asset might end up in the outDir and still not count as\n\"staged\"; if asset staging is disabled we're technically expected to\nreference source directories, but we don't have a source directory for the\nbundled outputs (as the bundle output is written to a temporary\ndirectory). Nevertheless, we will still return an absolute path.\n\nA non-obvious directory layout may look like this:\n\n```\n  CLOUD ASSEMBLY ROOT\n    +-- asset.12345abcdef/\n    +-- assembly-Stage\n          +-- MyStack.template.json\n          +-- MyStack.assets.json <- will contain { \"path\": \"../asset.12345abcdef\" }\n```",
            "stability": "stable",
            "summary": "Return the path to the staged asset, relative to the Cloud Assembly (manifest) directory of the given stack."
          },
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 261
          },
          "name": "relativeStagedPath",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "AssetStaging",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The directory inside the bundling container into which the asset sources will be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 77
          },
          "name": "BUNDLING_INPUT_DIR",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The directory inside the bundling container into which the bundled output should be written."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 82
          },
          "name": "BUNDLING_OUTPUT_DIR",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "If asset staging is disabled, this will just be the source path or\na temporary directory used for bundling.\n\nIf asset staging is enabled it will be the staged path.\n\nIMPORTANT: If you are going to call `addFileAsset()`, use\n`relativeStagedPath()` instead.",
            "stability": "stable",
            "summary": "Absolute path to the asset data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 124
          },
          "name": "absoluteStagedPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A cryptographic hash of the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 134
          },
          "name": "assetHash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether this asset is an archive (zip or jar)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 144
          },
          "name": "isArchive",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "How this asset should be packaged."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 139
          },
          "name": "packaging",
          "type": {
            "fqn": "@aws-cdk/core.FileAssetPackaging"
          }
        },
        {
          "docs": {
            "deprecated": "see `assetHash`.",
            "stability": "deprecated",
            "summary": "A cryptographic hash of the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 235
          },
          "name": "sourceHash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The absolute path of the asset as it was referenced by the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 129
          },
          "name": "sourcePath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "- Use `absoluteStagedPath` instead.",
            "remarks": "If asset staging is disabled, this will just be the source path or\na temporary directory used for bundling.\n\nIf asset staging is enabled it will be the staged path.\n\nIMPORTANT: If you are going to call `addFileAsset()`, use\n`relativeStagedPath()` instead.",
            "stability": "deprecated",
            "summary": "Absolute path to the asset data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 111
          },
          "name": "stagedPath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/asset-staging:AssetStaging"
    },
    "@aws-cdk/core.AssetStagingProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Initialization properties for `AssetStaging`."
      },
      "fqn": "@aws-cdk/core.AssetStagingProps",
      "interfaces": [
        "@aws-cdk/core.FingerprintOptions",
        "@aws-cdk/core.AssetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/asset-staging.ts",
        "line": 48
      },
      "name": "AssetStagingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source file or directory to copy from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/asset-staging.ts",
            "line": 52
          },
          "name": "sourcePath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/asset-staging:AssetStagingProps"
    },
    "@aws-cdk/core.Aws": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Since pseudo parameters need to be anchored to a stack somewhere in the\nconstruct tree, this class takes an scope parameter; the pseudo parameter\nvalues can be obtained as properties from an scoped object.",
        "stability": "stable",
        "summary": "Accessor for pseudo parameters."
      },
      "fqn": "@aws-cdk/core.Aws",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-pseudo.ts",
        "line": 21
      },
      "name": "Aws",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 22
          },
          "name": "ACCOUNT_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 29
          },
          "name": "NO_VALUE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 24
          },
          "name": "NOTIFICATION_ARNS",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 25
          },
          "name": "PARTITION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 26
          },
          "name": "REGION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 27
          },
          "name": "STACK_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 28
          },
          "name": "STACK_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 23
          },
          "name": "URL_SUFFIX",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-pseudo:Aws"
    },
    "@aws-cdk/core.BootstraplessSynthesizer": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.DefaultStackSynthesizer",
      "docs": {
        "remarks": "A special synthesizer that behaves similarly to `DefaultStackSynthesizer`,\nbut doesn't require bootstrapping the environment it operates in. Instead,\nit will re-use the Roles that were created for a different region (which\nis possible because IAM is a global service).\n\nHowever, it will not assume asset buckets or repositories have been created,\nand therefore does not support assets.\n\nThe name is poorly chosen -- it does still require bootstrapping, it just\ndoes not support assets.\n\nUsed by the CodePipeline construct for the support stacks needed for\ncross-region replication S3 buckets. App builders do not need to use this\nsynthesizer directly.",
        "stability": "stable",
        "summary": "Synthesizer that reuses bootstrap roles from a different region."
      },
      "fqn": "@aws-cdk/core.BootstraplessSynthesizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
          "line": 44
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.BootstraplessSynthesizerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a Docker Image Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
            "line": 56
          },
          "name": "addDockerImageAsset",
          "overrides": "@aws-cdk/core.DefaultStackSynthesizer",
          "parameters": [
            {
              "name": "_asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a File Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
            "line": 52
          },
          "name": "addFileAsset",
          "overrides": "@aws-cdk/core.DefaultStackSynthesizer",
          "parameters": [
            {
              "name": "_asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the associated stack to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
            "line": 60
          },
          "name": "synthesize",
          "overrides": "@aws-cdk/core.DefaultStackSynthesizer",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ]
        }
      ],
      "name": "BootstraplessSynthesizer",
      "symbolId": "lib/stack-synthesizers/bootstrapless-synthesizer:BootstraplessSynthesizer"
    },
    "@aws-cdk/core.BootstraplessSynthesizerProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of `BootstraplessSynthesizer`."
      },
      "fqn": "@aws-cdk/core.BootstraplessSynthesizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
        "line": 8
      },
      "name": "BootstraplessSynthesizerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No CloudFormation role (use CLI credentials)",
            "stability": "stable",
            "summary": "The CFN execution Role ARN to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
            "line": 22
          },
          "name": "cloudFormationExecutionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No deploy role (use CLI credentials)",
            "stability": "stable",
            "summary": "The deploy Role ARN to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/bootstrapless-synthesizer.ts",
            "line": 15
          },
          "name": "deployRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/bootstrapless-synthesizer:BootstraplessSynthesizerProps"
    },
    "@aws-cdk/core.BundlingDockerImage": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "deprecated": "use DockerImage",
        "stability": "deprecated",
        "summary": "A Docker image used for asset bundling."
      },
      "fqn": "@aws-cdk/core.BundlingDockerImage",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/bundling.ts",
          "line": 224
        },
        "parameters": [
          {
            "docs": {
              "summary": "The Docker image."
            },
            "name": "image",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "_imageHash",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 201
      },
      "methods": [
        {
          "docs": {
            "deprecated": "use DockerImage.fromBuild()",
            "stability": "deprecated",
            "summary": "Reference an image that's built directly from sources on disk."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 219
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "The path to the directory containing the Docker file."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Docker build options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.DockerBuildOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.BundlingDockerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Reference an image on DockerHub or another online registry."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 207
          },
          "name": "fromRegistry",
          "parameters": [
            {
              "docs": {
                "summary": "the image name."
              },
              "name": "image",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If `outputPath` is omitted the destination path is a temporary directory.",
            "returns": "the destination path",
            "stability": "deprecated",
            "summary": "Copies a file or directory out of the Docker image to the local filesystem."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 289
          },
          "name": "cp",
          "parameters": [
            {
              "docs": {
                "summary": "the path in the Docker image."
              },
              "name": "imagePath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the destination path for the copy operation."
              },
              "name": "outputPath",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Runs a Docker image."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 238
          },
          "name": "run",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.DockerRunOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "The overridden image name if set or image hash name in that order",
            "stability": "deprecated",
            "summary": "Provides a stable representation of this image for JSON serialization."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 231
          },
          "name": "toJSON",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "BundlingDockerImage",
      "properties": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "The Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 224
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/bundling:BundlingDockerImage"
    },
    "@aws-cdk/core.BundlingFileAccess": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "The access mechanism used to make source files available to the bundling container and to return the bundling output back to the host."
      },
      "fqn": "@aws-cdk/core.BundlingFileAccess",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 182
      },
      "members": [
        {
          "docs": {
            "remarks": "This is slower, but works also in more complex situations with remote or shared docker sockets.",
            "stability": "stable",
            "summary": "Creates temporary volumes and containers to copy files from the host to the bundling container and back."
          },
          "name": "VOLUME_COPY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The source and output folders will be mounted as bind mount from the host system This is faster and simpler, but less portable than `VOLUME_COPY`."
          },
          "name": "BIND_MOUNT"
        }
      ],
      "name": "BundlingFileAccess",
      "symbolId": "lib/bundling:BundlingFileAccess"
    },
    "@aws-cdk/core.BundlingOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Bundling options."
      },
      "fqn": "@aws-cdk/core.BundlingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 30
      },
      "name": "BundlingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Docker image where the command will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 34
          },
          "name": "image",
          "type": {
            "fqn": "@aws-cdk/core.DockerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- BundlingFileAccess.BIND_MOUNT",
            "stability": "stable",
            "summary": "The access mechanism used to make source files available to the bundling container and to return the bundling output back to the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 135
          },
          "name": "bundlingFileAccess",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.BundlingFileAccess"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- run the command defined in the image",
            "remarks": "Example value: `['npm', 'install']`",
            "see": "https://docs.docker.com/engine/reference/run/",
            "stability": "stable",
            "summary": "The command to run in the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 56
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- run the entrypoint defined in the image",
            "remarks": "Example value: `['/bin/sh', '-c']`",
            "see": "https://docs.docker.com/engine/reference/builder/#entrypoint",
            "stability": "stable",
            "summary": "The entrypoint to run in the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 45
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no environment variables.",
            "stability": "stable",
            "summary": "The environment variables to pass to the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 77
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- bundling will only be performed in a Docker container",
            "remarks": "The provider implements a method `tryBundle()` which should return `true`\nif local bundling was performed. If `false` is returned, docker bundling\nwill be done.",
            "stability": "stable",
            "summary": "Local bundling provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 107
          },
          "name": "local",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.ILocalBundling"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no networking options",
            "stability": "stable",
            "summary": "Docker [Networking options](https://docs.docker.com/engine/reference/commandline/run/#connect-a-container-to-a-network---network)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 129
          },
          "name": "network",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "BundlingOutput.AUTO_DISCOVER",
            "stability": "stable",
            "summary": "The type of output that this bundling operation is producing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 115
          },
          "name": "outputType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.BundlingOutput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no security options",
            "stability": "stable",
            "summary": "[Security configuration](https://docs.docker.com/engine/reference/run/#security-configuration) when running the docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 123
          },
          "name": "securityOpt",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- uid:gid of the current user or 1000:1000 on Windows",
            "remarks": "user | user:group | uid | uid:gid | user:gid | uid:group",
            "see": "https://docs.docker.com/engine/reference/run/#user",
            "stability": "stable",
            "summary": "The user to use when running the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 95
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional volumes are mounted",
            "stability": "stable",
            "summary": "Additional Docker volumes to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 63
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.DockerVolume"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no containers are specified to mount volumes from",
            "see": "https://docs.docker.com/engine/reference/commandline/run/#mount-volumes-from-container---volumes-from",
            "stability": "stable",
            "summary": "Where to mount the specified volumes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 70
          },
          "name": "volumesFrom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/asset-input",
            "stability": "stable",
            "summary": "Working directory inside the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 84
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/bundling:BundlingOptions"
    },
    "@aws-cdk/core.BundlingOutput": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "The type of output that a bundling operation is producing."
      },
      "fqn": "@aws-cdk/core.BundlingOutput",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 142
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The bundling output directory includes a single .zip or .jar file which will be used as the final bundle. If the output directory does not include exactly a single archive, bundling will fail."
          },
          "name": "ARCHIVED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The bundling output directory contains one or more files which will be archived and uploaded as a .zip file to S3."
          },
          "name": "NOT_ARCHIVED"
        },
        {
          "docs": {
            "remarks": "Otherwise, all the files in the bundling output directory will be zipped.",
            "stability": "stable",
            "summary": "If the bundling output directory contains a single archive file (zip or jar) it will be used as the bundle output as-is."
          },
          "name": "AUTO_DISCOVER"
        }
      ],
      "name": "BundlingOutput",
      "symbolId": "lib/bundling:BundlingOutput"
    },
    "@aws-cdk/core.CfnAutoScalingReplacingUpdate": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "During replacement,\nAWS CloudFormation retains the old group until it finishes creating the new one. If the update fails, AWS CloudFormation\ncan roll back to the old Auto Scaling group and delete the new Auto Scaling group.\n\nWhile AWS CloudFormation creates the new group, it doesn't detach or attach any instances. After successfully creating\nthe new Auto Scaling group, AWS CloudFormation deletes the old Auto Scaling group during the cleanup process.\n\nWhen you set the WillReplace parameter, remember to specify a matching CreationPolicy. If the minimum number of\ninstances (specified by the MinSuccessfulInstancesPercent property) don't signal success within the Timeout period\n(specified in the CreationPolicy policy), the replacement update fails and AWS CloudFormation rolls back to the old\nAuto Scaling group.",
        "stability": "stable",
        "summary": "Specifies whether an Auto Scaling group and the instances it contains are replaced during an update."
      },
      "fqn": "@aws-cdk/core.CfnAutoScalingReplacingUpdate",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 233
      },
      "name": "CfnAutoScalingReplacingUpdate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 234
          },
          "name": "willReplace",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnAutoScalingReplacingUpdate"
    },
    "@aws-cdk/core.CfnAutoScalingRollingUpdate": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "Rolling updates enable you to specify whether AWS CloudFormation updates instances that are in an Auto Scaling\ngroup in batches or all at once.",
        "stability": "stable",
        "summary": "To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group, use the AutoScalingRollingUpdate policy."
      },
      "fqn": "@aws-cdk/core.CfnAutoScalingRollingUpdate",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 157
      },
      "name": "CfnAutoScalingRollingUpdate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the maximum number of instances that AWS CloudFormation updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 162
          },
          "name": "maxBatchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the minimum number of instances that must be in service within the Auto Scaling group while AWS CloudFormation updates old instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 168
          },
          "name": "minInstancesInService",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can specify a value from 0 to 100. AWS CloudFormation rounds to the nearest tenth of a percent. For example, if you\nupdate five instances with a minimum successful percentage of 50, three instances must signal success.\n\nIf an instance doesn't send a signal within the time specified in the PauseTime property, AWS CloudFormation assumes\nthat the instance wasn't updated.\n\nIf you specify this property, you must also enable the WaitOnResourceSignals and PauseTime properties.",
            "stability": "stable",
            "summary": "Specifies the percentage of instances in an Auto Scaling rolling update that must signal success for an update to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 180
          },
          "name": "minSuccessfulInstancesPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, you might need to specify PauseTime when scaling up the number of\ninstances in an Auto Scaling group.\n\nIf you enable the WaitOnResourceSignals property, PauseTime is the amount of time that AWS CloudFormation should wait\nfor the Auto Scaling group to receive the required number of valid signals from added or replaced instances. If the\nPauseTime is exceeded before the Auto Scaling group receives the required number of signals, the update fails. For best\nresults, specify a time period that gives your applications sufficient time to get started. If the update needs to be\nrolled back, a short PauseTime can cause the rollback to fail.\n\nSpecify PauseTime in the ISO8601 duration format (in the format PT#H#M#S, where each # is the number of hours, minutes,\nand seconds, respectively). The maximum PauseTime is one hour (PT1H).",
            "stability": "stable",
            "summary": "The amount of time that AWS CloudFormation pauses after making a change to a batch of instances to give those instances time to start software applications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 196
          },
          "name": "pauseTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Suspending processes prevents Auto Scaling from\ninterfering with a stack update. For example, you can suspend alarming so that Auto Scaling doesn't execute scaling\npolicies associated with an alarm. For valid values, see the ScalingProcesses.member.N parameter for the SuspendProcesses\naction in the Auto Scaling API Reference.",
            "stability": "stable",
            "summary": "Specifies the Auto Scaling processes to suspend during a stack update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 204
          },
          "name": "suspendProcesses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Use this property to\nensure that instances have completed installing and configuring applications before the Auto Scaling group update proceeds.\nAWS CloudFormation suspends the update of an Auto Scaling group after new EC2 instances are launched into the group.\nAWS CloudFormation must receive a signal from each new instance within the specified PauseTime before continuing the update.\nTo signal the Auto Scaling group, use the cfn-signal helper script or SignalResource API.\n\nTo have instances wait for an Elastic Load Balancing health check before they signal success, add a health-check\nverification by using the cfn-init helper script. For an example, see the verify_instance_health command in the Auto Scaling\nrolling updates sample template.",
            "stability": "stable",
            "summary": "Specifies whether the Auto Scaling group waits on signals from new instances during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 217
          },
          "name": "waitOnResourceSignals",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnAutoScalingRollingUpdate"
    },
    "@aws-cdk/core.CfnAutoScalingScheduledAction": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "When you update a\nstack with an Auto Scaling group and scheduled action, AWS CloudFormation always sets the group size property values of\nyour Auto Scaling group to the values that are defined in the AWS::AutoScaling::AutoScalingGroup resource of your template,\neven if a scheduled action is in effect.\n\nIf you do not want AWS CloudFormation to change any of the group size property values when you have a scheduled action in\neffect, use the AutoScalingScheduledAction update policy to prevent AWS CloudFormation from changing the MinSize, MaxSize,\nor DesiredCapacity properties unless you have modified these values in your template.\\",
        "stability": "stable",
        "summary": "With scheduled actions, the group size properties of an Auto Scaling group can change at any time."
      },
      "fqn": "@aws-cdk/core.CfnAutoScalingScheduledAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 247
      },
      "name": "CfnAutoScalingScheduledAction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 254
          },
          "name": "ignoreUnmodifiedGroupSizeProperties",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnAutoScalingScheduledAction"
    },
    "@aws-cdk/core.CfnCapabilities": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Capabilities that affect whether CloudFormation is allowed to change IAM resources."
      },
      "fqn": "@aws-cdk/core.CfnCapabilities",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cfn-capabilities.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities"
            },
            "remarks": "Pass this capability if you wish to block the creation IAM resources.",
            "stability": "stable",
            "summary": "No IAM Capabilities."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities"
            },
            "remarks": "Pass this capability if you're only creating anonymous resources.",
            "stability": "stable",
            "summary": "Capability to create anonymous IAM resources."
          },
          "name": "ANONYMOUS_IAM"
        },
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities"
            },
            "remarks": "Pass this capability if you're creating IAM resources that have physical\nnames.\n\n`CloudFormationCapabilities.NamedIAM` implies `CloudFormationCapabilities.IAM`; you don't have to pass both.",
            "stability": "stable",
            "summary": "Capability to create named IAM resources."
          },
          "name": "NAMED_IAM"
        },
        {
          "docs": {
            "custom": {
              "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStack.html"
            },
            "remarks": "Pass this capability if your template includes macros, for example AWS::Include or AWS::Serverless.",
            "stability": "stable",
            "summary": "Capability to run CloudFormation macros."
          },
          "name": "AUTO_EXPAND"
        }
      ],
      "name": "CfnCapabilities",
      "symbolId": "lib/cfn-capabilities:CfnCapabilities"
    },
    "@aws-cdk/core.CfnCodeDeployBlueGreenAdditionalOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "The type of the `CfnCodeDeployBlueGreenHookProps.additionalOptions` property.",
        "stability": "stable",
        "summary": "Additional options for the blue/green deployment."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenAdditionalOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 102
      },
      "name": "CfnCodeDeployBlueGreenAdditionalOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- 5 minutes",
            "stability": "stable",
            "summary": "Specifies time to wait, in minutes, before terminating the blue resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 108
          },
          "name": "terminationWaitTimeInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnCodeDeployBlueGreenAdditionalOptions"
    },
    "@aws-cdk/core.CfnCodeDeployBlueGreenApplication": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "Type of the `CfnCodeDeployBlueGreenHookProps.applications` property.",
        "stability": "stable",
        "summary": "The application actually being deployed."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenApplication",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 234
      },
      "name": "CfnCodeDeployBlueGreenApplication",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The detailed attributes of the deployed target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 243
          },
          "name": "ecsAttributes",
          "type": {
            "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenEcsAttributes"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target that is being deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 238
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenApplicationTarget"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnCodeDeployBlueGreenApplication"
    },
    "@aws-cdk/core.CfnCodeDeployBlueGreenApplicationTarget": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Type of the `CfnCodeDeployBlueGreenApplication.target` property."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenApplicationTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 156
      },
      "name": "CfnCodeDeployBlueGreenApplicationTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The logical id of the target resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 166
          },
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Right now, the only allowed value is 'AWS::ECS::Service'.",
            "stability": "stable",
            "summary": "The resource type of the target being deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 161
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnCodeDeployBlueGreenApplicationTarget"
    },
    "@aws-cdk/core.CfnCodeDeployBlueGreenEcsAttributes": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "Type of the `CfnCodeDeployBlueGreenApplication.ecsAttributes` property.",
        "stability": "stable",
        "summary": "The attributes of the ECS Service being deployed."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenEcsAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 211
      },
      "name": "CfnCodeDeployBlueGreenEcsAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The logical IDs of the blue and green, respectively, AWS::ECS::TaskDefinition task definitions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 216
          },
          "name": "taskDefinitions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The logical IDs of the blue and green, respectively, AWS::ECS::TaskSet task sets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 222
          },
          "name": "taskSets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The traffic routing configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 227
          },
          "name": "trafficRouting",
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRouting"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnCodeDeployBlueGreenEcsAttributes"
    },
    "@aws-cdk/core.CfnCodeDeployBlueGreenHook": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnHook",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/blue-green.html#blue-green-template-reference",
        "stability": "stable",
        "summary": "A CloudFormation Hook for CodeDeploy blue-green ECS deployments."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenHook",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new CodeDeploy blue-green ECS Hook."
        },
        "locationInModule": {
          "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
          "line": 389
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope to create the hook in (usually the containing Stack object)."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "the identifier of the construct - will be used to generate the logical ID of the Hook."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the properties of the Hook."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenHookProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 291
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 467
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnHook",
          "parameters": [
            {
              "name": "_props",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCodeDeployBlueGreenHook",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Properties of the Amazon ECS applications being deployed."
          },
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 416
          },
          "name": "applications",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenApplication"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM Role for CloudFormation to use to perform blue-green deployments."
          },
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 405
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- no additional options",
            "stability": "stable",
            "summary": "Additional options for the blue/green deployment."
          },
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 442
          },
          "name": "additionalOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenAdditionalOptions"
          }
        },
        {
          "docs": {
            "default": "- no lifecycle event hooks",
            "remarks": "You can use the same function or a different one for deployment lifecycle events.\nFollowing completion of the validation tests,\nthe Lambda `CfnCodeDeployBlueGreenLifecycleEventHooks.afterAllowTraffic`\nfunction calls back CodeDeploy and delivers a result of 'Succeeded' or 'Failed'.",
            "stability": "stable",
            "summary": "Use lifecycle event hooks to specify a Lambda function that CodeDeploy can call to validate a deployment."
          },
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 459
          },
          "name": "lifecycleEventHooks",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenLifecycleEventHooks"
          }
        },
        {
          "docs": {
            "default": "- time-based canary traffic shifting, with a 15% step percentage and a five minute bake time",
            "stability": "stable",
            "summary": "Traffic routing configuration settings."
          },
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 429
          },
          "name": "trafficRoutingConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRoutingConfig"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnCodeDeployBlueGreenHook"
    },
    "@aws-cdk/core.CfnCodeDeployBlueGreenHookProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of `CfnCodeDeployBlueGreenHook`."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenHookProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 249
      },
      "name": "CfnCodeDeployBlueGreenHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Properties of the Amazon ECS applications being deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 258
          },
          "name": "applications",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenApplication"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IAM Role for CloudFormation to use to perform blue-green deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 253
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional options",
            "stability": "stable",
            "summary": "Additional options for the blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 272
          },
          "name": "additionalOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenAdditionalOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no lifecycle event hooks",
            "remarks": "You can use the same function or a different one for deployment lifecycle events.\nFollowing completion of the validation tests,\nthe Lambda `CfnCodeDeployBlueGreenLifecycleEventHooks.afterAllowTraffic`\nfunction calls back CodeDeploy and delivers a result of 'Succeeded' or 'Failed'.",
            "stability": "stable",
            "summary": "Use lifecycle event hooks to specify a Lambda function that CodeDeploy can call to validate a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 283
          },
          "name": "lifecycleEventHooks",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenLifecycleEventHooks"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- time-based canary traffic shifting, with a 15% step percentage and a five minute bake time",
            "stability": "stable",
            "summary": "Traffic routing configuration settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 265
          },
          "name": "trafficRoutingConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRoutingConfig"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnCodeDeployBlueGreenHookProps"
    },
    "@aws-cdk/core.CfnCodeDeployBlueGreenLifecycleEventHooks": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "The type of the `CfnCodeDeployBlueGreenHookProps.lifecycleEventHooks` property.",
        "stability": "stable",
        "summary": "Lifecycle events for blue-green deployments."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployBlueGreenLifecycleEventHooks",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 115
      },
      "name": "CfnCodeDeployBlueGreenLifecycleEventHooks",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Function to use to run tasks after the test listener serves traffic to the replacement task set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 135
          },
          "name": "afterAllowTestTraffic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Function to use to run tasks after the second target group serves traffic to the replacement task set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 150
          },
          "name": "afterAllowTraffic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Function to use to run tasks after the replacement task set is created and one of the target groups is associated with it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 128
          },
          "name": "afterInstall",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Function to use to run tasks after the second target group is associated with the replacement task set, but before traffic is shifted to the replacement task set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 143
          },
          "name": "beforeAllowTraffic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Function to use to run tasks before the replacement task set is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 121
          },
          "name": "beforeInstall",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnCodeDeployBlueGreenLifecycleEventHooks"
    },
    "@aws-cdk/core.CfnCodeDeployLambdaAliasUpdate": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "To perform an AWS CodeDeploy deployment when the version changes on an AWS::Lambda::Alias resource, use the CodeDeployLambdaAliasUpdate update policy."
      },
      "fqn": "@aws-cdk/core.CfnCodeDeployLambdaAliasUpdate",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 261
      },
      "name": "CfnCodeDeployLambdaAliasUpdate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the AWS CodeDeploy application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 265
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is where the traffic-shifting policy is set.",
            "stability": "stable",
            "summary": "The name of the AWS CodeDeploy deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 270
          },
          "name": "deploymentGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the Lambda function to run after traffic routing completes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 280
          },
          "name": "afterAllowTrafficHook",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the Lambda function to run before traffic routing starts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 275
          },
          "name": "beforeAllowTrafficHook",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnCodeDeployLambdaAliasUpdate"
    },
    "@aws-cdk/core.CfnCondition": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnElement",
      "docs": {
        "stability": "stable",
        "summary": "Represents a CloudFormation condition, for resources which must be conditionally created and the determination must be made at deploy time."
      },
      "fqn": "@aws-cdk/core.CfnCondition",
      "initializer": {
        "docs": {
          "remarks": "The condition must be constructed with a condition token,\nthat the condition is based on.",
          "stability": "stable",
          "summary": "Build a new condition."
        },
        "locationInModule": {
          "filename": "lib/cfn-condition.ts",
          "line": 28
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnConditionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.ICfnConditionExpression",
        "@aws-cdk/core.IResolvable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-condition.ts",
        "line": 18
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesizes the condition."
          },
          "locationInModule": {
            "filename": "lib/cfn-condition.ts",
            "line": 51
          },
          "name": "resolve",
          "overrides": "@aws-cdk/core.IResolvable",
          "parameters": [
            {
              "name": "_context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "CfnCondition",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The condition statement."
          },
          "locationInModule": {
            "filename": "lib/cfn-condition.ts",
            "line": 22
          },
          "name": "expression",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.ICfnConditionExpression"
          }
        }
      ],
      "symbolId": "lib/cfn-condition:CfnCondition"
    },
    "@aws-cdk/core.CfnConditionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnConditionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-condition.ts",
        "line": 5
      },
      "name": "CfnConditionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "The expression that the condition will evaluate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-condition.ts",
            "line": 11
          },
          "name": "expression",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.ICfnConditionExpression"
          }
        }
      ],
      "symbolId": "lib/cfn-condition:CfnConditionProps"
    },
    "@aws-cdk/core.CfnCreationPolicy": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "To signal a\nresource, you can use the cfn-signal helper script or SignalResource API. AWS CloudFormation publishes valid signals\nto the stack events so that you track the number of signals sent.\n\nThe creation policy is invoked only when AWS CloudFormation creates the associated resource. Currently, the only\nAWS CloudFormation resources that support creation policies are AWS::AutoScaling::AutoScalingGroup, AWS::EC2::Instance,\nAWS::CloudFormation::WaitCondition and AWS::AppStream::Fleet.\n\nUse the CreationPolicy attribute when you want to wait on resource configuration actions before stack creation proceeds.\nFor example, if you install and configure software applications on an EC2 instance, you might want those applications to\nbe running before proceeding. In such cases, you can add a CreationPolicy attribute to the instance, and then send a success\nsignal to the instance after the applications are installed and configured. For a detailed example, see Deploying Applications\non Amazon EC2 with AWS CloudFormation.",
        "stability": "stable",
        "summary": "Associate the CreationPolicy attribute with a resource to prevent its status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded."
      },
      "fqn": "@aws-cdk/core.CfnCreationPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 17
      },
      "name": "CfnCreationPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "For an Auto Scaling group replacement update, specifies how many instances must signal success for the update to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 22
          },
          "name": "autoScalingCreationPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnResourceAutoScalingCreationPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "When AWS CloudFormation creates the associated resource, configures the number of required success signals and the length of time that AWS CloudFormation waits for those signals."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 28
          },
          "name": "resourceSignal",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnResourceSignal"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "For an AppStream Fleet creation, specifies that the fleet is started after creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 33
          },
          "name": "startFleet",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnCreationPolicy"
    },
    "@aws-cdk/core.CfnCustomResource": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::CustomResource",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html"
        },
        "remarks": "In a CloudFormation template, you use the `AWS::CloudFormation::CustomResource` or `Custom:: *String*` resource type to specify custom resources.\n\nCustom resources provide a way for you to write custom provisioning logic in CloudFormation template and have CloudFormation run it during a stack operation, such as when you create, update or delete a stack. For more information, see [Custom resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html) .\n\n> If you use the [VPC endpoints](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html) feature, custom resources in the VPC must have access to CloudFormation -specific Amazon Simple Storage Service ( Amazon S3 ) buckets. Custom resources must send responses to a presigned Amazon S3 URL. If they can't send responses to Amazon S3 , CloudFormation won't receive a response and the stack operation fails. For more information, see [Setting up VPC endpoints for AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-vpce-bucketnames.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::CustomResource`."
      },
      "fqn": "@aws-cdk/core.CfnCustomResource",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::CustomResource`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 137
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnCustomResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 150
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 161
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCustomResource",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 98
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 155
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#cfn-customresource-servicetoken"
            },
            "remarks": "All other properties are defined by the service provider.\n\nThe service token that was given to the template developer by the service provider to access the service, such as an Amazon SNS topic ARN or Lambda function ARN. The service token must be from the same Region in which you are creating the stack.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "> Only one property is defined by AWS for a custom resource: `ServiceToken` ."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 128
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnCustomResource"
    },
    "@aws-cdk/core.CfnCustomResourceProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCustomResource`."
      },
      "fqn": "@aws-cdk/core.CfnCustomResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 20
      },
      "name": "CfnCustomResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#cfn-customresource-servicetoken"
            },
            "remarks": "All other properties are defined by the service provider.\n\nThe service token that was given to the template developer by the service provider to access the service, such as an Amazon SNS topic ARN or Lambda function ARN. The service token must be from the same Region in which you are creating the stack.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "> Only one property is defined by AWS for a custom resource: `ServiceToken` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 31
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnCustomResourceProps"
    },
    "@aws-cdk/core.CfnDeletionPolicy": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "You specify a DeletionPolicy attribute for each resource that you want to control. If a resource has no DeletionPolicy\nattribute, AWS CloudFormation deletes the resource by default. Note that this capability also applies to update operations\nthat lead to resources being removed.",
        "stability": "stable",
        "summary": "With the DeletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted."
      },
      "fqn": "@aws-cdk/core.CfnDeletionPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 78
      },
      "members": [
        {
          "docs": {
            "remarks": "You can add this\ndeletion policy to any resource type. By default, if you don't specify a DeletionPolicy, AWS CloudFormation deletes\nyour resources. However, be aware of the following considerations:",
            "stability": "stable",
            "summary": "AWS CloudFormation deletes the resource and all its content if applicable during stack deletion."
          },
          "name": "DELETE"
        },
        {
          "docs": {
            "remarks": "You can add this deletion policy to any resource type. Note that when AWS CloudFormation completes the stack deletion,\nthe stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur\napplicable charges until you delete those resources.",
            "stability": "stable",
            "summary": "AWS CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted."
          },
          "name": "RETAIN"
        },
        {
          "docs": {
            "remarks": "Note that when AWS CloudFormation completes the stack deletion, the stack will be in the\nDelete_Complete state; however, the snapshots that are created with this policy continue to exist and continue to\nincur applicable charges until you delete those snapshots.",
            "stability": "stable",
            "summary": "For resources that support snapshots (AWS::EC2::Volume, AWS::ElastiCache::CacheCluster, AWS::ElastiCache::ReplicationGroup, AWS::RDS::DBInstance, AWS::RDS::DBCluster, and AWS::Redshift::Cluster), AWS CloudFormation creates a snapshot for the resource before deleting it."
          },
          "name": "SNAPSHOT"
        }
      ],
      "name": "CfnDeletionPolicy",
      "symbolId": "lib/cfn-resource-policy:CfnDeletionPolicy"
    },
    "@aws-cdk/core.CfnDynamicReference": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.Intrinsic",
      "docs": {
        "remarks": "This is a Construct so that subclasses will (eventually) be able to attach\nmetadata to themselves without having to change call signatures.",
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html",
        "stability": "stable",
        "summary": "References a dynamically retrieved value."
      },
      "fqn": "@aws-cdk/core.CfnDynamicReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-dynamic-reference.ts",
          "line": 27
        },
        "parameters": [
          {
            "name": "service",
            "type": {
              "fqn": "@aws-cdk/core.CfnDynamicReferenceService"
            }
          },
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-dynamic-reference.ts",
        "line": 26
      },
      "name": "CfnDynamicReference",
      "symbolId": "lib/cfn-dynamic-reference:CfnDynamicReference"
    },
    "@aws-cdk/core.CfnDynamicReferenceProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Dynamic Reference."
      },
      "fqn": "@aws-cdk/core.CfnDynamicReferenceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-dynamic-reference.ts",
        "line": 6
      },
      "name": "CfnDynamicReferenceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The reference key of the dynamic reference."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-dynamic-reference.ts",
            "line": 15
          },
          "name": "referenceKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service to retrieve the dynamic reference from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-dynamic-reference.ts",
            "line": 10
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/core.CfnDynamicReferenceService"
          }
        }
      ],
      "symbolId": "lib/cfn-dynamic-reference:CfnDynamicReferenceProps"
    },
    "@aws-cdk/core.CfnDynamicReferenceService": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "The service to retrieve the dynamic reference from."
      },
      "fqn": "@aws-cdk/core.CfnDynamicReferenceService",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cfn-dynamic-reference.ts",
        "line": 35
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Plaintext value stored in AWS Systems Manager Parameter Store."
          },
          "name": "SSM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Secure string stored in AWS Systems Manager Parameter Store."
          },
          "name": "SSM_SECURE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Secret stored in AWS Secrets Manager."
          },
          "name": "SECRETS_MANAGER"
        }
      ],
      "name": "CfnDynamicReferenceService",
      "symbolId": "lib/cfn-dynamic-reference:CfnDynamicReferenceService"
    },
    "@aws-cdk/core.CfnElement": {
      "abstract": true,
      "assembly": "@aws-cdk/core",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "An element of a CloudFormation stack."
      },
      "fqn": "@aws-cdk/core.CfnElement",
      "initializer": {
        "docs": {
          "remarks": "Note that the root of the tree must be a Stack object (not just any Root).",
          "stability": "stable",
          "summary": "Creates an entity and binds it to a tree."
        },
        "locationInModule": {
          "filename": "lib/cfn-element.ts",
          "line": 62
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-element.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "remarks": "Uses duck-typing instead of `instanceof` to allow stack elements from different\nversions of this library to be included in the same stack.",
            "returns": "The construct as a stack element or undefined if it is not a stack element.",
            "stability": "stable",
            "summary": "Returns `true` if a construct is a stack element (i.e. part of the synthesized cloudformation template)."
          },
          "locationInModule": {
            "filename": "lib/cfn-element.ts",
            "line": 22
          },
          "name": "isCfnElement",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Overrides the auto-generated logical ID with a specific ID."
          },
          "locationInModule": {
            "filename": "lib/cfn-element.ts",
            "line": 85
          },
          "name": "overrideLogicalId",
          "parameters": [
            {
              "docs": {
                "summary": "The new logical ID to use for this stack element."
              },
              "name": "newLogicalId",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "CfnElement",
      "properties": [
        {
          "docs": {
            "returns": "the stack trace of the point where this Resource was created from, sourced\nfrom the +metadata+ entry typed +aws:cdk:logicalId+, and with the bottom-most\nnode +internal+ entries filtered.",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-element.ts",
            "line": 124
          },
          "name": "creationStack",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "The logical ID of the element\nis calculated from the path of the resource node in the construct tree.\n\nTo override this value, use `overrideLogicalId(newLogicalId)`.",
            "returns": "the logical ID as a stringified token. This value will only get\nresolved during synthesis.",
            "stability": "stable",
            "summary": "The logical ID for this CloudFormation stack element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-element.ts",
            "line": 35
          },
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "CfnElements must be defined within a stack scope (directly or indirectly).",
            "stability": "stable",
            "summary": "The stack in which this element is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-element.ts",
            "line": 40
          },
          "name": "stack",
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        }
      ],
      "symbolId": "lib/cfn-element:CfnElement"
    },
    "@aws-cdk/core.CfnHook": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnElement",
      "docs": {
        "stability": "stable",
        "summary": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/core.CfnHook",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new Hook object."
        },
        "locationInModule": {
          "filename": "lib/cfn-hook.ts",
          "line": 38
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnHookProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-hook.ts",
        "line": 26
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-hook.ts",
            "line": 57
          },
          "name": "renderProperties",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHook",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of the hook (for example, \"AWS::CodeDeploy::BlueGreen\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-hook.ts",
            "line": 31
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-hook:CfnHook"
    },
    "@aws-cdk/core.CfnHookDefaultVersion": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::HookDefaultVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html"
        },
        "remarks": "The `HookDefaultVersion` resource specifies the default version of the hook. The default version of the hook is used in CloudFormation operations for this AWS account and AWS Region .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::HookDefaultVersion`."
      },
      "fqn": "@aws-cdk/core.CfnHookDefaultVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::HookDefaultVersion`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 330
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnHookDefaultVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 265
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 345
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 358
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHookDefaultVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 269
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the activated extension, in this account and Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 294
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 350
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-typename"
            },
            "remarks": "You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The name of the hook."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 303
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-typeversionarn"
            },
            "remarks": "You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The version ID of the type configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 312
          },
          "name": "typeVersionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-versionid"
            },
            "remarks": "You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The version ID of the type specified."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 321
          },
          "name": "versionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnHookDefaultVersion"
    },
    "@aws-cdk/core.CfnHookDefaultVersionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnHookDefaultVersion`."
      },
      "fqn": "@aws-cdk/core.CfnHookDefaultVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 174
      },
      "name": "CfnHookDefaultVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-typename"
            },
            "remarks": "You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The name of the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 183
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-typeversionarn"
            },
            "remarks": "You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The version ID of the type configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 192
          },
          "name": "typeVersionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-versionid"
            },
            "remarks": "You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The version ID of the type specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 201
          },
          "name": "versionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnHookDefaultVersionProps"
    },
    "@aws-cdk/core.CfnHookProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of `CfnHook`."
      },
      "fqn": "@aws-cdk/core.CfnHookProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-hook.ts",
        "line": 8
      },
      "name": "CfnHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of the hook (for example, \"AWS::CodeDeploy::BlueGreen\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-hook.ts",
            "line": 13
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no properties",
            "stability": "stable",
            "summary": "The properties of the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-hook.ts",
            "line": 20
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-hook:CfnHookProps"
    },
    "@aws-cdk/core.CfnHookTypeConfig": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::HookTypeConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html"
        },
        "remarks": "The `HookTypeConfig` resource specifies the configuration of a hook.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::HookTypeConfig`."
      },
      "fqn": "@aws-cdk/core.CfnHookTypeConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::HookTypeConfig`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 549
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnHookTypeConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 475
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 566
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 580
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHookTypeConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 479
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ConfigurationArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the activated hook type configuration, in this account and Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 504
          },
          "name": "attrConfigurationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 571
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-configuration"
            },
            "remarks": "You must specify either `TypeName` and `Configuration` or `TypeARN` and `Configuration` .",
            "stability": "external",
            "summary": "Specifies the activated hook type configuration, in this AWS account and AWS Region ."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 513
          },
          "name": "configuration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-configurationalias"
            },
            "remarks": "Defaults to `default` alias. Hook types currently support default configuration alias.",
            "stability": "external",
            "summary": "Specifies the activated hook type configuration, in this AWS account and AWS Region ."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 522
          },
          "name": "configurationAlias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-typearn"
            },
            "remarks": "You must specify either `TypeName` and `Configuration` or `TypeARN` and `Configuration` .",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) for the hook to set `Configuration` for."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 531
          },
          "name": "typeArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-typename"
            },
            "remarks": "Specifies a three-part namespace for your hook, with a recommended pattern of `Organization::Service::Hook` .\n\nYou must specify either `TypeName` and `Configuration` or `TypeARN` and `Configuration` .",
            "stability": "external",
            "summary": "The unique name for your hook."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 540
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnHookTypeConfig"
    },
    "@aws-cdk/core.CfnHookTypeConfigProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnHookTypeConfig`."
      },
      "fqn": "@aws-cdk/core.CfnHookTypeConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 371
      },
      "name": "CfnHookTypeConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-configuration"
            },
            "remarks": "You must specify either `TypeName` and `Configuration` or `TypeARN` and `Configuration` .",
            "stability": "external",
            "summary": "Specifies the activated hook type configuration, in this AWS account and AWS Region ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 380
          },
          "name": "configuration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-configurationalias"
            },
            "remarks": "Defaults to `default` alias. Hook types currently support default configuration alias.",
            "stability": "external",
            "summary": "Specifies the activated hook type configuration, in this AWS account and AWS Region ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 389
          },
          "name": "configurationAlias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-typearn"
            },
            "remarks": "You must specify either `TypeName` and `Configuration` or `TypeARN` and `Configuration` .",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) for the hook to set `Configuration` for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 398
          },
          "name": "typeArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-typename"
            },
            "remarks": "Specifies a three-part namespace for your hook, with a recommended pattern of `Organization::Service::Hook` .\n\nYou must specify either `TypeName` and `Configuration` or `TypeARN` and `Configuration` .",
            "stability": "external",
            "summary": "The unique name for your hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 407
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnHookTypeConfigProps"
    },
    "@aws-cdk/core.CfnHookVersion": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::HookVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html"
        },
        "remarks": "The `HookVersion` resource publishes new or first hook version to the AWS CloudFormation registry.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::HookVersion`."
      },
      "fqn": "@aws-cdk/core.CfnHookVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::HookVersion`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 813
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnHookVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 704
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 835
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 849
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHookVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 708
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 733
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IsDefaultVersion"
            },
            "stability": "external",
            "summary": "Whether the specified hook version is set as the default version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 739
          },
          "name": "attrIsDefaultVersion",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TypeArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) assigned to this version of the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 745
          },
          "name": "attrTypeArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VersionId"
            },
            "stability": "external",
            "summary": "The ID of this version of the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 751
          },
          "name": "attrVersionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Visibility"
            },
            "remarks": "Valid values include:\n\n- `PRIVATE` : The resource is only visible and usable within the account in which it's registered. CloudFormation marks any resources you register as `PRIVATE` .\n- `PUBLIC` : The resource is publicly visible and usable within any Amazon account.",
            "stability": "external",
            "summary": "The scope at which the resource is visible and usable in CloudFormation operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 762
          },
          "name": "attrVisibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 840
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-schemahandlerpackage"
            },
            "remarks": "For information on generating a schema handler package for the resource you want to register, see [submit](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html) in the *CloudFormation CLI User Guide for Extension Development* .\n\n> The user registering the resource must be able to access the package in the S3 bucket. That's, the user must have [GetObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html) permissions for the schema handler package. For more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "A URL to the Amazon S3 bucket containing the hook project package that contains the necessary files for the hook you want to register."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 773
          },
          "name": "schemaHandlerPackage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-typename"
            },
            "remarks": "Specifies a three-part namespace for your hook, with a recommended pattern of `Organization::Service::Hook` .\n\n> The following organization namespaces are reserved and can't be used in your hook type names:\n>\n> - `Alexa`\n> - `AMZN`\n> - `Amazon`\n> - `ASK`\n> - `AWS`\n> - `Custom`\n> - `Dev`",
            "stability": "external",
            "summary": "The unique name for your hook."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 790
          },
          "name": "typeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-executionrolearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the task execution role that grants the hook permission."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 797
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-loggingconfig"
            },
            "stability": "external",
            "summary": "Contains logging configuration information for an extension."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 804
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnHookVersion.LoggingConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnHookVersion"
    },
    "@aws-cdk/core.CfnHookVersion.LoggingConfigProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-hookversion-loggingconfig.html"
        },
        "stability": "external",
        "summary": "The `LoggingConfig` property type specifies logging configuration information for an extension."
      },
      "fqn": "@aws-cdk/core.CfnHookVersion.LoggingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 863
      },
      "name": "LoggingConfigProperty",
      "namespace": "CfnHookVersion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-hookversion-loggingconfig.html#cfn-cloudformation-hookversion-loggingconfig-loggroupname"
            },
            "stability": "external",
            "summary": "The Amazon CloudWatch Logs group to which CloudFormation sends error logging information when invoking the extension's handlers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 869
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-hookversion-loggingconfig.html#cfn-cloudformation-hookversion-loggingconfig-logrolearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the role that CloudFormation should assume when sending log entries to CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 875
          },
          "name": "logRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnHookVersion.LoggingConfigProperty"
    },
    "@aws-cdk/core.CfnHookVersionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnHookVersion`."
      },
      "fqn": "@aws-cdk/core.CfnHookVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 593
      },
      "name": "CfnHookVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-schemahandlerpackage"
            },
            "remarks": "For information on generating a schema handler package for the resource you want to register, see [submit](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html) in the *CloudFormation CLI User Guide for Extension Development* .\n\n> The user registering the resource must be able to access the package in the S3 bucket. That's, the user must have [GetObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html) permissions for the schema handler package. For more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "A URL to the Amazon S3 bucket containing the hook project package that contains the necessary files for the hook you want to register."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 604
          },
          "name": "schemaHandlerPackage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-typename"
            },
            "remarks": "Specifies a three-part namespace for your hook, with a recommended pattern of `Organization::Service::Hook` .\n\n> The following organization namespaces are reserved and can't be used in your hook type names:\n>\n> - `Alexa`\n> - `AMZN`\n> - `Amazon`\n> - `ASK`\n> - `AWS`\n> - `Custom`\n> - `Dev`",
            "stability": "external",
            "summary": "The unique name for your hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 621
          },
          "name": "typeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-executionrolearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the task execution role that grants the hook permission."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 628
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-loggingconfig"
            },
            "stability": "external",
            "summary": "Contains logging configuration information for an extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 635
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnHookVersion.LoggingConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnHookVersionProps"
    },
    "@aws-cdk/core.CfnInclude": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnElement",
      "docs": {
        "deprecated": "use the CfnInclude class from the cloudformation-include module instead",
        "remarks": "All elements of the template will be merged into\nthe current stack, together with any elements created programmatically.",
        "stability": "deprecated",
        "summary": "Includes a CloudFormation template into a stack."
      },
      "fqn": "@aws-cdk/core.CfnInclude",
      "initializer": {
        "docs": {
          "remarks": "The template will be incorporated into the stack as-is with no changes at all.\nThis means that logical IDs of entities within this template may conflict with logical IDs of entities that are part of the\nstack.",
          "stability": "deprecated",
          "summary": "Creates an adopted template construct."
        },
        "locationInModule": {
          "filename": "lib/cfn-include.ts",
          "line": 36
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent construct of this template."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "The ID of this construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "Initialization properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnIncludeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-include.ts",
        "line": 22
      },
      "name": "CfnInclude",
      "properties": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "The included template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-include.ts",
            "line": 26
          },
          "name": "template",
          "type": {
            "primitive": "json"
          }
        }
      ],
      "symbolId": "lib/cfn-include:CfnInclude"
    },
    "@aws-cdk/core.CfnIncludeProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "deprecated": "use the CfnInclude class from the cloudformation-include module instead",
        "stability": "deprecated",
        "summary": "Construction properties for `CfnInclude`."
      },
      "fqn": "@aws-cdk/core.CfnIncludeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-include.ts",
        "line": 9
      },
      "name": "CfnIncludeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The CloudFormation template to include in the stack (as is)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-include.ts",
            "line": 13
          },
          "name": "template",
          "type": {
            "primitive": "json"
          }
        }
      ],
      "symbolId": "lib/cfn-include:CfnIncludeProps"
    },
    "@aws-cdk/core.CfnJson": {
      "assembly": "@aws-cdk/core",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "The main use case for this is to overcome a limitation in CloudFormation that\ndoes not allow using intrinsic functions as dictionary keys (because\ndictionary keys in JSON must be strings). Specifically this is common in IAM\nconditions such as `StringEquals: { lhs: \"rhs\" }` where you want \"lhs\" to be\na reference.\n\nThis object is resolvable, so it can be used as a value.\n\nThis construct is backed by a custom resource.",
        "stability": "stable",
        "summary": "Captures a synthesis-time JSON object a CloudFormation reference which resolves during deployment to the resolved values of the JSON object."
      },
      "fqn": "@aws-cdk/core.CfnJson",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-json.ts",
          "line": 46
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnJsonProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IResolvable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-json.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the Token's value at resolution time."
          },
          "locationInModule": {
            "filename": "lib/cfn-json.ts",
            "line": 73
          },
          "name": "resolve",
          "overrides": "@aws-cdk/core.IResolvable",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This is required in case someone JSON.stringifys an object which references this object. Otherwise, we'll get a cyclic JSON reference."
          },
          "locationInModule": {
            "filename": "lib/cfn-json.ts",
            "line": 69
          },
          "name": "toJSON",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "CfnJson",
      "properties": [
        {
          "docs": {
            "remarks": "This may return an array with a single informational element indicating how\nto get this property populated, if it was skipped for performance reasons.",
            "stability": "stable",
            "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-json.ts",
            "line": 33
          },
          "name": "creationStack",
          "overrides": "@aws-cdk/core.IResolvable",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Normally there is no need to use this property since `CfnJson` is an\nIResolvable, so it can be simply used as a value.",
            "stability": "stable",
            "summary": "An Fn::GetAtt to the JSON object passed through `value` and resolved during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-json.ts",
            "line": 42
          },
          "name": "value",
          "type": {
            "fqn": "@aws-cdk/core.Reference"
          }
        }
      ],
      "symbolId": "lib/cfn-json:CfnJson"
    },
    "@aws-cdk/core.CfnJsonProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnJsonProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-json.ts",
        "line": 10
      },
      "name": "CfnJsonProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be any JavaScript object, including tokens and\nreferences in keys or values.",
            "stability": "stable",
            "summary": "The value to resolve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-json.ts",
            "line": 15
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/cfn-json:CfnJsonProps"
    },
    "@aws-cdk/core.CfnMacro": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::Macro",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html"
        },
        "remarks": "The `AWS::CloudFormation::Macro` resource is a CloudFormation resource type that creates a CloudFormation macro to perform custom processing on CloudFormation templates. For more information, see [Using AWS CloudFormation macros to perform custom processing on templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::Macro`."
      },
      "fqn": "@aws-cdk/core.CfnMacro",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::Macro`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 1112
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnMacroProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1045
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1130
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1145
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnMacro",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1049
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1135
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-functionname"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the underlying AWS Lambda function that you want AWS CloudFormation to invoke when the macro is run."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1075
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-name"
            },
            "remarks": "The name of the macro must be unique across all macros in the account.",
            "stability": "external",
            "summary": "The name of the macro."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1082
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-description"
            },
            "stability": "external",
            "summary": "A description of the macro."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1089
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-loggroupname"
            },
            "stability": "external",
            "summary": "The CloudWatch Logs group to which AWS CloudFormation sends error logging information when invoking the macro's underlying AWS Lambda function."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1096
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-logrolearn"
            },
            "stability": "external",
            "summary": "The ARN of the role AWS CloudFormation should assume when sending log entries to CloudWatch Logs ."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1103
          },
          "name": "logRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnMacro"
    },
    "@aws-cdk/core.CfnMacroProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnMacro`."
      },
      "fqn": "@aws-cdk/core.CfnMacroProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 938
      },
      "name": "CfnMacroProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-functionname"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the underlying AWS Lambda function that you want AWS CloudFormation to invoke when the macro is run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 945
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-name"
            },
            "remarks": "The name of the macro must be unique across all macros in the account.",
            "stability": "external",
            "summary": "The name of the macro."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 952
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-description"
            },
            "stability": "external",
            "summary": "A description of the macro."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 959
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-loggroupname"
            },
            "stability": "external",
            "summary": "The CloudWatch Logs group to which AWS CloudFormation sends error logging information when invoking the macro's underlying AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 966
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-logrolearn"
            },
            "stability": "external",
            "summary": "The ARN of the role AWS CloudFormation should assume when sending log entries to CloudWatch Logs ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 973
          },
          "name": "logRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnMacroProps"
    },
    "@aws-cdk/core.CfnMapping": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnRefElement",
      "docs": {
        "stability": "stable",
        "summary": "Represents a CloudFormation mapping."
      },
      "fqn": "@aws-cdk/core.CfnMapping",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-mapping.ts",
          "line": 46
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnMappingProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-mapping.ts",
        "line": 40
      },
      "methods": [
        {
          "docs": {
            "returns": "A reference to a value in the map based on the two keys.",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-mapping.ts",
            "line": 68
          },
          "name": "findInMap",
          "parameters": [
            {
              "name": "key1",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "key2",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets a value in the map based on the two keys."
          },
          "locationInModule": {
            "filename": "lib/cfn-mapping.ts",
            "line": 55
          },
          "name": "setValue",
          "parameters": [
            {
              "name": "key1",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "key2",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "CfnMapping",
      "symbolId": "lib/cfn-mapping:CfnMapping"
    },
    "@aws-cdk/core.CfnMappingProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnMappingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-mapping.ts",
        "line": 11
      },
      "name": "CfnMappingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-mapping.ts",
            "line": 34
          },
          "name": "lazy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No mapping.",
            "remarks": "The key identifies a map of name-value pairs and must be unique within the mapping.\n\nFor example, if you want to set values based on a region, you can create a mapping\nthat uses the region name as a key and contains the values you want to specify for\neach specific region.",
            "stability": "stable",
            "summary": "Mapping of key to a set of corresponding set of named values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-mapping.ts",
            "line": 22
          },
          "name": "mapping",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-mapping:CfnMappingProps"
    },
    "@aws-cdk/core.CfnModuleDefaultVersion": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::ModuleDefaultVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html"
        },
        "remarks": "Specifies the default version of a module. The default version of the module will be used in CloudFormation operations for this account and Region.\n\nTo register a module version, use the `[AWS::CloudFormation::ModuleVersion](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html)` resource.\n\nFor more information using modules, see [Using modules to encapsulate and reuse resource configurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/modules.html) and [Registering extensions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register) in the *CloudFormation User Guide* . For information on developing modules, see [Developing modules](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/modules.html) in the *CloudFormation CLI User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::ModuleDefaultVersion`."
      },
      "fqn": "@aws-cdk/core.CfnModuleDefaultVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::ModuleDefaultVersion`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 1312
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnModuleDefaultVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1253
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1326
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1339
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnModuleDefaultVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1257
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1331
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-arn"
            },
            "remarks": "Conditional: You must specify either `Arn` , or `ModuleName` and `VersionId` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the module version to set as the default version."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1285
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-modulename"
            },
            "remarks": "Conditional: You must specify either `Arn` , or `ModuleName` and `VersionId` .",
            "stability": "external",
            "summary": "The name of the module."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1294
          },
          "name": "moduleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-versionid"
            },
            "remarks": "Conditional: You must specify either `Arn` , or `ModuleName` and `VersionId` .",
            "stability": "external",
            "summary": "The ID for the specific version of the module."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1303
          },
          "name": "versionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnModuleDefaultVersion"
    },
    "@aws-cdk/core.CfnModuleDefaultVersionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnModuleDefaultVersion`."
      },
      "fqn": "@aws-cdk/core.CfnModuleDefaultVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1158
      },
      "name": "CfnModuleDefaultVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-arn"
            },
            "remarks": "Conditional: You must specify either `Arn` , or `ModuleName` and `VersionId` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the module version to set as the default version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1167
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-modulename"
            },
            "remarks": "Conditional: You must specify either `Arn` , or `ModuleName` and `VersionId` .",
            "stability": "external",
            "summary": "The name of the module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1176
          },
          "name": "moduleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-versionid"
            },
            "remarks": "Conditional: You must specify either `Arn` , or `ModuleName` and `VersionId` .",
            "stability": "external",
            "summary": "The ID for the specific version of the module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1185
          },
          "name": "versionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnModuleDefaultVersionProps"
    },
    "@aws-cdk/core.CfnModuleVersion": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::ModuleVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html"
        },
        "remarks": "Registers the specified version of the module with the CloudFormation service. Registering a module makes it available for use in CloudFormation templates in your AWS account and Region.\n\nTo specify a module version as the default version, use the `[AWS::CloudFormation::ModuleDefaultVersion](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html)` resource.\n\nFor more information using modules, see [Using modules to encapsulate and reuse resource configurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/modules.html) and [Registering extensions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register) in the *CloudFormation User Guide* . For information on developing modules, see [Developing modules](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/modules.html) in the *CloudFormation CLI User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::ModuleVersion`."
      },
      "fqn": "@aws-cdk/core.CfnModuleVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::ModuleVersion`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 1536
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnModuleVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1435
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1559
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1571
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnModuleVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1439
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1464
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Description"
            },
            "stability": "external",
            "summary": "The description of the module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1470
          },
          "name": "attrDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DocumentationUrl"
            },
            "stability": "external",
            "summary": "The URL of a page providing detailed documentation for this module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1476
          },
          "name": "attrDocumentationUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IsDefaultVersion"
            },
            "stability": "external",
            "summary": "Whether the specified module version is set as the default version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1482
          },
          "name": "attrIsDefaultVersion",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Schema"
            },
            "stability": "external",
            "summary": "The schema that defines the module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1488
          },
          "name": "attrSchema",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TimeCreated"
            },
            "stability": "external",
            "summary": "When the specified module version was registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1494
          },
          "name": "attrTimeCreated",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VersionId"
            },
            "stability": "external",
            "summary": "The ID of this version of the module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1500
          },
          "name": "attrVersionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Visibility"
            },
            "remarks": "Valid values include:\n\n- `PRIVATE` : The module is only visible and usable within the account in which it's registered.\n- `PUBLIC` : The module is publicly visible and usable within any Amazon account.",
            "stability": "external",
            "summary": "The scope at which the module is visible and usable in CloudFormation operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1511
          },
          "name": "attrVisibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1564
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html#cfn-cloudformation-moduleversion-modulename"
            },
            "stability": "external",
            "summary": "The name of the module being registered."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1518
          },
          "name": "moduleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html#cfn-cloudformation-moduleversion-modulepackage"
            },
            "remarks": "> The user registering the module version must be able to access the module package in the S3 bucket. That's, the user needs to have [GetObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html) permissions for the package. For more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "A URL to the S3 bucket containing the package that contains the template fragment and schema files for the module version to register."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1527
          },
          "name": "modulePackage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnModuleVersion"
    },
    "@aws-cdk/core.CfnModuleVersionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnModuleVersion`."
      },
      "fqn": "@aws-cdk/core.CfnModuleVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1352
      },
      "name": "CfnModuleVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html#cfn-cloudformation-moduleversion-modulename"
            },
            "stability": "external",
            "summary": "The name of the module being registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1359
          },
          "name": "moduleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html#cfn-cloudformation-moduleversion-modulepackage"
            },
            "remarks": "> The user registering the module version must be able to access the module package in the S3 bucket. That's, the user needs to have [GetObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html) permissions for the package. For more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "A URL to the S3 bucket containing the package that contains the template fragment and schema files for the module version to register."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1368
          },
          "name": "modulePackage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnModuleVersionProps"
    },
    "@aws-cdk/core.CfnOutput": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnElement",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnOutput",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates an CfnOutput value for this stack."
        },
        "locationInModule": {
          "filename": "lib/cfn-output.ts",
          "line": 49
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "CfnOutput properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnOutputProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-output.ts",
        "line": 38
      },
      "name": "CfnOutput",
      "properties": [
        {
          "docs": {
            "remarks": "The returned value should not be used in the same stack, but in a\ndifferent one. It must be deployed to the same environment, as\nCloudFormation exports can only be imported in the same Region and\naccount.\n\nThe is no automatic registration of dependencies between stacks when using\nthis mechanism, so you should make sure to deploy them in the right order\nyourself.\n\nYou can use this mechanism to share values across Stacks in different\nStages. If you intend to share the value to another Stack inside the same\nStage, the automatic cross-stack referencing mechanism is more convenient.",
            "stability": "stable",
            "summary": "Return the `Fn.importValue` expression to import this value into another stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 141
          },
          "name": "importValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "The value of an output can include literals, parameter references, pseudo-parameters,\na mapping value, or intrinsic functions.",
            "stability": "stable",
            "summary": "The value of the property returned by the aws cloudformation describe-stacks command."
          },
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 87
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "default": "- No condition is associated with the output.",
            "remarks": "If the condition evaluates\nto `false`, this output value will not be included in the stack.",
            "stability": "stable",
            "summary": "A condition to associate with this output value."
          },
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 101
          },
          "name": "condition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCondition"
          }
        },
        {
          "docs": {
            "default": "- No description.",
            "remarks": "The description can be a maximum of 4 K in length.",
            "stability": "stable",
            "summary": "A String type that describes the output value."
          },
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 74
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- the output is not exported",
            "remarks": "To use the value in another stack, pass the value of\n`output.importValue` to it.",
            "stability": "stable",
            "summary": "The name used to export the value of this output across stacks."
          },
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 117
          },
          "name": "exportName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-output:CfnOutput"
    },
    "@aws-cdk/core.CfnOutputProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnOutputProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-output.ts",
        "line": 4
      },
      "name": "CfnOutputProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The value of an output can include literals, parameter references, pseudo-parameters,\na mapping value, or intrinsic functions.",
            "stability": "stable",
            "summary": "The value of the property returned by the aws cloudformation describe-stacks command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 18
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No condition is associated with the output.",
            "remarks": "If the condition evaluates\nto `false`, this output value will not be included in the stack.",
            "stability": "stable",
            "summary": "A condition to associate with this output value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 35
          },
          "name": "condition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCondition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "remarks": "The description can be a maximum of 4 K in length.",
            "stability": "stable",
            "summary": "A String type that describes the output value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 11
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the output is not exported",
            "remarks": "To import the value from another stack, use `Fn.importValue(exportName)`.",
            "stability": "stable",
            "summary": "The name used to export the value of this output across stacks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-output.ts",
            "line": 27
          },
          "name": "exportName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-output:CfnOutputProps"
    },
    "@aws-cdk/core.CfnParameter": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnElement",
      "docs": {
        "remarks": "Use the optional Parameters section to customize your templates.\nParameters enable you to input custom values to your template each time you create or\nupdate a stack.",
        "stability": "stable",
        "summary": "A CloudFormation parameter."
      },
      "fqn": "@aws-cdk/core.CfnParameter",
      "initializer": {
        "docs": {
          "remarks": "Note that the name (logical ID) of the parameter will derive from it's `coname` and location\nwithin the stack. Therefore, it is recommended that parameters are defined at the stack level.",
          "stability": "stable",
          "summary": "Creates a parameter construct."
        },
        "locationInModule": {
          "filename": "lib/cfn-parameter.ts",
          "line": 122
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The parameter properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnParameterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-parameter.ts",
        "line": 100
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 345
          },
          "name": "resolve",
          "parameters": [
            {
              "name": "_context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "CfnParameter",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The parameter value as a Token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 288
          },
          "name": "value",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parameter value, if it represents a string list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 305
          },
          "name": "valueAsList",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parameter value, if it represents a number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 315
          },
          "name": "valueAsNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The parameter value, if it represents a string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 295
          },
          "name": "valueAsString",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- No default value for parameter.",
            "remarks": "If you define constraints for the parameter, you must specify\na value that adheres to those constraints.",
            "stability": "stable",
            "summary": "A value of the appropriate type for the template to use if no value is specified when a stack is created."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 160
          },
          "name": "default",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this parameter is configured with \"NoEcho\" enabled."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 277
          },
          "name": "noEcho",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "default": "String",
            "stability": "stable",
            "summary": "The data type for the parameter (DataType)."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 144
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- No constraints on patterns allowed for parameter.",
            "stability": "stable",
            "summary": "A regular expression that represents the patterns to allow for String types."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 173
          },
          "name": "allowedPattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- No constraints on values allowed for parameter.",
            "stability": "stable",
            "summary": "An array containing the list of values allowed for the parameter."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 186
          },
          "name": "allowedValues",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "default": "- No description with customized error message when user specifies invalid values.",
            "remarks": "For example, without a constraint description, a parameter that has an allowed\npattern of [A-Za-z0-9]+ displays the following error message when the user specifies\nan invalid value:",
            "stability": "stable",
            "summary": "A string that explains a constraint when the constraint is violated."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 202
          },
          "name": "constraintDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- No description for the parameter.",
            "stability": "stable",
            "summary": "A string of up to 4000 characters that describes the parameter."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 215
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "An integer value that determines the largest number of characters you want to allow for String types."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 228
          },
          "name": "maxLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "A numeric value that determines the largest numeric value you want to allow for Number types."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 254
          },
          "name": "maxValue",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "An integer value that determines the smallest number of characters you want to allow for String types."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 241
          },
          "name": "minLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "A numeric value that determines the smallest numeric value you want to allow for Number types."
          },
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 266
          },
          "name": "minValue",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cfn-parameter:CfnParameter"
    },
    "@aws-cdk/core.CfnParameterProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnParameterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-parameter.ts",
        "line": 8
      },
      "name": "CfnParameterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No constraints on patterns allowed for parameter.",
            "stability": "stable",
            "summary": "A regular expression that represents the patterns to allow for String types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 30
          },
          "name": "allowedPattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No constraints on values allowed for parameter.",
            "stability": "stable",
            "summary": "An array containing the list of values allowed for the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 37
          },
          "name": "allowedValues",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description with customized error message when user specifies invalid values.",
            "remarks": "For example, without a constraint description, a parameter that has an allowed\npattern of [A-Za-z0-9]+ displays the following error message when the user specifies\nan invalid value:",
            "stability": "stable",
            "summary": "A string that explains a constraint when the constraint is violated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 47
          },
          "name": "constraintDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No default value for parameter.",
            "remarks": "If you define constraints for the parameter, you must specify\na value that adheres to those constraints.",
            "stability": "stable",
            "summary": "A value of the appropriate type for the template to use if no value is specified when a stack is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 23
          },
          "name": "default",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description for the parameter.",
            "stability": "stable",
            "summary": "A string of up to 4000 characters that describes the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 54
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "An integer value that determines the largest number of characters you want to allow for String types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 61
          },
          "name": "maxLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "A numeric value that determines the largest numeric value you want to allow for Number types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 68
          },
          "name": "maxValue",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "An integer value that determines the smallest number of characters you want to allow for String types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 75
          },
          "name": "minLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "A numeric value that determines the smallest numeric value you want to allow for Number types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 82
          },
          "name": "minValue",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Parameter values are not masked.",
            "remarks": "If you set the value to ``true``, the parameter value is masked with asterisks (``*****``).",
            "stability": "stable",
            "summary": "Whether to mask the parameter value when anyone makes a call that describes the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 90
          },
          "name": "noEcho",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "String",
            "stability": "stable",
            "summary": "The data type for the parameter (DataType)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-parameter.ts",
            "line": 14
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-parameter:CfnParameterProps"
    },
    "@aws-cdk/core.CfnPublicTypeVersion": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::PublicTypeVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html"
        },
        "remarks": "Tests and publishes a registered extension as a public, third-party extension.\n\nCloudFormation first tests the extension to make sure it meets all necessary requirements for being published in the CloudFormation registry. If it does, CloudFormation then publishes it to the registry as a public third-party extension in this Region. Public extensions are available for use by all CloudFormation users.\n\n- For resource types, testing includes passing all contracts tests defined for the type.\n- For modules, testing includes determining if the module's model meets all necessary requirements.\n\nFor more information, see [Testing your public extension prior to publishing](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-testing) in the *CloudFormation CLI User Guide* .\n\nIf you don't specify a version, CloudFormation uses the default version of the extension in your account and Region for testing.\n\nTo perform testing, CloudFormation assumes the execution role specified when the type was registered.\n\nAn extension must have a test status of `PASSED` before it can be published. For more information, see [Publishing extensions to make them available for public use](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-publish.html) in the *CloudFormation CLI User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::PublicTypeVersion`."
      },
      "fqn": "@aws-cdk/core.CfnPublicTypeVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::PublicTypeVersion`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 1837
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnPublicTypeVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1727
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1856
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1871
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPublicTypeVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1731
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicTypeArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) assigned to the public extension upon publication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1756
          },
          "name": "attrPublicTypeArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublisherId"
            },
            "stability": "external",
            "summary": "The publisher ID of the extension publisher."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1762
          },
          "name": "attrPublisherId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TypeVersionArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) assigned to this version of the extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1768
          },
          "name": "attrTypeVersionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1861
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-arn"
            },
            "remarks": "Conditional: You must specify `Arn` , or `TypeName` and `Type` .",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the extension."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1777
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-logdeliverybucket"
            },
            "remarks": "CloudFormation delivers the logs by the time contract testing has completed and the extension has been assigned a test type status of `PASSED` or `FAILED` .\n\nThe user initiating the stack operation must be able to access items in the specified S3 bucket. Specifically, the user needs the following permissions:\n\n- GetObject\n- PutObject\n\nFor more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "The S3 bucket to which CloudFormation delivers the contract test execution logs."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1793
          },
          "name": "logDeliveryBucket",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-publicversionnumber"
            },
            "remarks": "Use the following format, and adhere to semantic versioning when assigning a version number to your extension:\n\n`MAJOR.MINOR.PATCH`\n\nFor more information, see [Semantic Versioning 2.0.0](https://docs.aws.amazon.com/https://semver.org/) .\n\nIf you don't specify a version number, CloudFormation increments the version number by one minor version release.\n\nYou cannot specify a version number the first time you publish a type. AWS CloudFormation automatically sets the first version number to be `1.0.0` .",
            "stability": "external",
            "summary": "The version number to assign to this version of the extension."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1810
          },
          "name": "publicVersionNumber",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-type"
            },
            "remarks": "Conditional: You must specify `Arn` , or `TypeName` and `Type` .",
            "stability": "external",
            "summary": "The type of the extension to test."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1819
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-typename"
            },
            "remarks": "Conditional: You must specify `Arn` , or `TypeName` and `Type` .",
            "stability": "external",
            "summary": "The name of the extension to test."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1828
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnPublicTypeVersion"
    },
    "@aws-cdk/core.CfnPublicTypeVersionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPublicTypeVersion`."
      },
      "fqn": "@aws-cdk/core.CfnPublicTypeVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1584
      },
      "name": "CfnPublicTypeVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-arn"
            },
            "remarks": "Conditional: You must specify `Arn` , or `TypeName` and `Type` .",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1593
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-logdeliverybucket"
            },
            "remarks": "CloudFormation delivers the logs by the time contract testing has completed and the extension has been assigned a test type status of `PASSED` or `FAILED` .\n\nThe user initiating the stack operation must be able to access items in the specified S3 bucket. Specifically, the user needs the following permissions:\n\n- GetObject\n- PutObject\n\nFor more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "The S3 bucket to which CloudFormation delivers the contract test execution logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1609
          },
          "name": "logDeliveryBucket",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-publicversionnumber"
            },
            "remarks": "Use the following format, and adhere to semantic versioning when assigning a version number to your extension:\n\n`MAJOR.MINOR.PATCH`\n\nFor more information, see [Semantic Versioning 2.0.0](https://docs.aws.amazon.com/https://semver.org/) .\n\nIf you don't specify a version number, CloudFormation increments the version number by one minor version release.\n\nYou cannot specify a version number the first time you publish a type. AWS CloudFormation automatically sets the first version number to be `1.0.0` .",
            "stability": "external",
            "summary": "The version number to assign to this version of the extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1626
          },
          "name": "publicVersionNumber",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-type"
            },
            "remarks": "Conditional: You must specify `Arn` , or `TypeName` and `Type` .",
            "stability": "external",
            "summary": "The type of the extension to test."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1635
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-typename"
            },
            "remarks": "Conditional: You must specify `Arn` , or `TypeName` and `Type` .",
            "stability": "external",
            "summary": "The name of the extension to test."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1644
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnPublicTypeVersionProps"
    },
    "@aws-cdk/core.CfnPublisher": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::Publisher",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html"
        },
        "remarks": "Registers your account as a publisher of public extensions in the CloudFormation registry. Public extensions are available for use by all CloudFormation users.\n\nFor information on requirements for registering as a public extension publisher, see [Registering your account to publish CloudFormation extensions](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs) in the *CloudFormation CLI User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::Publisher`."
      },
      "fqn": "@aws-cdk/core.CfnPublisher",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::Publisher`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 2042
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnPublisherProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1966
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2060
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2072
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPublisher",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1970
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IdentityProvider"
            },
            "remarks": "Values include: `AWS_Marketplace` | `Bitbucket` | `GitHub` .",
            "stability": "external",
            "summary": "The type of account used as the identity provider when registering this publisher with CloudFormation ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1997
          },
          "name": "attrIdentityProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublisherId"
            },
            "remarks": "This publisher ID applies to your account in all AWS Regions .",
            "stability": "external",
            "summary": "The ID of the extension publisher."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2003
          },
          "name": "attrPublisherId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublisherProfile"
            },
            "stability": "external",
            "summary": "The URL to the publisher's profile with the identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2009
          },
          "name": "attrPublisherProfile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublisherStatus"
            },
            "stability": "external",
            "summary": "Whether the publisher is verified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2015
          },
          "name": "attrPublisherStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2065
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html#cfn-cloudformation-publisher-accepttermsandconditions"
            },
            "remarks": "The default is `false` .",
            "stability": "external",
            "summary": "Whether you accept the [Terms and Conditions](https://docs.aws.amazon.com/https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf) for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to register to publish public extensions to the CloudFormation registry."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2024
          },
          "name": "acceptTermsAndConditions",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html#cfn-cloudformation-publisher-connectionarn"
            },
            "remarks": "For more information, see [Registering your account to publish CloudFormation extensions](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs) in the *CloudFormation CLI User Guide* .",
            "stability": "external",
            "summary": "If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2033
          },
          "name": "connectionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnPublisher"
    },
    "@aws-cdk/core.CfnPublisherProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPublisher`."
      },
      "fqn": "@aws-cdk/core.CfnPublisherProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 1884
      },
      "name": "CfnPublisherProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html#cfn-cloudformation-publisher-accepttermsandconditions"
            },
            "remarks": "The default is `false` .",
            "stability": "external",
            "summary": "Whether you accept the [Terms and Conditions](https://docs.aws.amazon.com/https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf) for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to register to publish public extensions to the CloudFormation registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1893
          },
          "name": "acceptTermsAndConditions",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html#cfn-cloudformation-publisher-connectionarn"
            },
            "remarks": "For more information, see [Registering your account to publish CloudFormation extensions](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs) in the *CloudFormation CLI User Guide* .",
            "stability": "external",
            "summary": "If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 1902
          },
          "name": "connectionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnPublisherProps"
    },
    "@aws-cdk/core.CfnRefElement": {
      "abstract": true,
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnElement",
      "docs": {
        "remarks": "These constructs are things like Conditions and Parameters, can be\nreferenced by taking the `.ref` attribute.\n\nResource constructs do not inherit from CfnRefElement because they have their\nown, more specific types returned from the .ref attribute. Also, some\nresources aren't referencable at all (such as BucketPolicies or GatewayAttachments).",
        "stability": "stable",
        "summary": "Base class for referencable CloudFormation constructs which are not Resources."
      },
      "fqn": "@aws-cdk/core.CfnRefElement",
      "initializer": {
        "docs": {
          "remarks": "Note that the root of the tree must be a Stack object (not just any Root).",
          "stability": "stable",
          "summary": "Creates an entity and binds it to a tree."
        },
        "locationInModule": {
          "filename": "lib/cfn-element.ts",
          "line": 62
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-element.ts",
        "line": 189
      },
      "name": "CfnRefElement",
      "properties": [
        {
          "docs": {
            "remarks": "If, by any chance, the intrinsic reference of a resource is not a string, you could\ncoerce it to an IResolvable through `Lazy.any({ produce: resource.ref })`.",
            "stability": "stable",
            "summary": "Return a string that will be resolved to a CloudFormation `{ Ref }` for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-element.ts",
            "line": 196
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-element:CfnRefElement"
    },
    "@aws-cdk/core.CfnResource": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnRefElement",
      "docs": {
        "stability": "stable",
        "summary": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/core.CfnResource",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a resource construct."
        },
        "locationInModule": {
          "filename": "lib/cfn-resource.ts",
          "line": 87
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-resource.ts",
        "line": 37
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Check whether the given construct is a CfnResource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 41
          },
          "name": "isCfnResource",
          "parameters": [
            {
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Syntactic sugar for `addOverride(path, undefined)`."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 253
          },
          "name": "addDeletionOverride",
          "parameters": [
            {
              "docs": {
                "summary": "The path of the value to delete."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This can be used for resources across stacks (or nested stack) boundaries\nand the dependency will automatically be transferred to the relevant scope.",
            "stability": "stable",
            "summary": "Indicates that this resource depends on another resource and cannot be provisioned unless the other resource has been successfully provisioned."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 294
          },
          "name": "addDependency",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "use addDependency",
            "stability": "deprecated",
            "summary": "Indicates that this resource depends on another resource and cannot be provisioned unless the other resource has been successfully provisioned."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 283
          },
          "name": "addDependsOn",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html\n\nNote that this is a different set of metadata from CDK node metadata; this\nmetadata ends up in the stack template under the resource, whereas CDK\nnode metadata ends up in the Cloud Assembly.",
            "stability": "stable",
            "summary": "Add a value to the CloudFormation Resource Metadata."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 350
          },
          "name": "addMetadata",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "To add a\nproperty override, either use `addPropertyOverride` or prefix `path` with\n\"Properties.\" (i.e. `Properties.TopicName`).\n\nIf the override is nested, separate each nested level using a dot (.) in the path parameter.\nIf there is an array as part of the nesting, specify the index in the path.\n\nTo include a literal `.` in the property name, prefix with a `\\`. In most\nprogramming languages you will need to write this as `\"\\\\.\"` because the\n`\\` itself will need to be escaped.\n\nFor example,\n```typescript\ncfnResource.addOverride('Properties.GlobalSecondaryIndexes.0.Projection.NonKeyAttributes', ['myattribute']);\ncfnResource.addOverride('Properties.GlobalSecondaryIndexes.1.ProjectionType', 'INCLUDE');\n```\nwould add the overrides\n```json\n\"Properties\": {\n  \"GlobalSecondaryIndexes\": [\n    {\n      \"Projection\": {\n        \"NonKeyAttributes\": [ \"myattribute\" ]\n        ...\n      }\n      ...\n    },\n    {\n      \"ProjectionType\": \"INCLUDE\"\n      ...\n    },\n  ]\n  ...\n}\n```\n\nThe `value` argument to `addOverride` will not be processed or translated\nin any way. Pass raw JSON values in here with the correct capitalization\nfor CloudFormation. If you pass CDK classes or structs, they will be\nrendered with lowercased key names, and CloudFormation will reject the\ntemplate.",
            "stability": "stable",
            "summary": "Adds an override to the synthesized CloudFormation resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 228
          },
          "name": "addOverride",
          "parameters": [
            {
              "docs": {
                "remarks": "Any intermediate keys\nwill be created as needed.",
                "summary": "- The path of the property, you can use dot notation to override values in complex types."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Could be primitive or complex.",
                "summary": "- The value."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an override that deletes the value of a property from the resource definition."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 273
          },
          "name": "addPropertyDeletionOverride",
          "parameters": [
            {
              "docs": {
                "summary": "The path to the property."
              },
              "name": "propertyPath",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Syntactic sugar for `addOverride(\"Properties.<...>\", value)`.",
            "stability": "stable",
            "summary": "Adds an override to a resource property."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 265
          },
          "name": "addPropertyOverride",
          "parameters": [
            {
              "docs": {
                "summary": "The path of the property."
              },
              "name": "propertyPath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The value."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`). In some\ncases, a snapshot can be taken of the resource prior to deletion\n(`RemovalPolicy.SNAPSHOT`). A list of resources that support this policy\ncan be found in the following link:",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html#aws-attribute-deletionpolicy-options",
            "stability": "stable",
            "summary": "Sets the deletion policy of the resource based on the removal policy specified."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 121
          },
          "name": "applyRemovalPolicy",
          "parameters": [
            {
              "name": "policy",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.RemovalPolicy"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.RemovalPolicyOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility\nin case there is no generated attribute.",
            "stability": "stable",
            "summary": "Returns a token for an runtime attribute of this resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 176
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "typeHint",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.ResolutionTypeHint"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Reference"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html\n\nNote that this is a different set of metadata from CDK node metadata; this\nmetadata ends up in the stack template under the resource, whereas CDK\nnode metadata ends up in the Cloud Assembly.",
            "stability": "stable",
            "summary": "Retrieve a value value from the CloudFormation Resource Metadata."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 366
          },
          "name": "getMetadata",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "remarks": "This assembles dependencies on resources across stacks (including nested stacks)\nautomatically.",
            "stability": "stable",
            "summary": "Retrieves an array of resources this resource depends on."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 324
          },
          "name": "obtainDependencies",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "union": {
                    "types": [
                      {
                        "fqn": "@aws-cdk/core.Stack"
                      },
                      {
                        "fqn": "@aws-cdk/core.CfnResource"
                      }
                    ]
                  }
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get a shallow copy of dependencies between this resource and other resources in the same stack."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 395
          },
          "name": "obtainResourceDependencies",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/core.CfnResource"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "This can be used for resources across stacks (including nested stacks)\nand the dependency will automatically be removed from the relevant scope.",
            "stability": "stable",
            "summary": "Indicates that this resource no longer depends on another resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 309
          },
          "name": "removeDependency",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 497
          },
          "name": "renderProperties",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Replaces one dependency with another."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 333
          },
          "name": "replaceDependency",
          "parameters": [
            {
              "docs": {
                "summary": "The dependency to replace."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            },
            {
              "docs": {
                "summary": "The new dependency to add."
              },
              "name": "newTarget",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "`true` if the resource should be included or `false` is the resource\nshould be omitted.",
            "stability": "stable",
            "summary": "Can be overridden by subclasses to determine if this resource will be rendered into the cloudformation template."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 535
          },
          "name": "shouldSynthesize",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "returns": "a string representation of this resource",
            "stability": "stable",
            "summary": "Returns a string representation of this construct."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 373
          },
          "name": "toString",
          "overrides": "constructs.Construct",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 524
          },
          "name": "validateProperties",
          "parameters": [
            {
              "name": "_properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "CfnResource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Options for this resource, such as condition, update policy etc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 56
          },
          "name": "cfnOptions",
          "type": {
            "fqn": "@aws-cdk/core.ICfnResourceOptions"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 487
          },
          "name": "cfnProperties",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 61
          },
          "name": "cfnResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "use `updatedProperties`\n\nReturn properties modified after initiation\n\nResources that expose mutable properties should override this function to\ncollect and return the properties object for this resource.",
            "stability": "deprecated",
            "summary": "Deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 510
          },
          "name": "updatedProperites",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "remarks": "Resources that expose mutable properties should override this function to\ncollect and return the properties object for this resource.",
            "stability": "stable",
            "summary": "Return properties modified after initiation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 520
          },
          "name": "updatedProperties",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-resource:CfnResource"
    },
    "@aws-cdk/core.CfnResourceAutoScalingCreationPolicy": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "For an Auto Scaling group replacement update, specifies how many instances must signal success for the update to succeed."
      },
      "fqn": "@aws-cdk/core.CfnResourceAutoScalingCreationPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 40
      },
      "name": "CfnResourceAutoScalingCreationPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can specify a value from 0 to 100. AWS CloudFormation rounds to the nearest tenth of a percent.\nFor example, if you update five instances with a minimum successful percentage of 50, three instances must signal success.\nIf an instance doesn't send a signal within the time specified by the Timeout property, AWS CloudFormation assumes that the\ninstance wasn't created.",
            "stability": "stable",
            "summary": "Specifies the percentage of instances in an Auto Scaling replacement update that must signal success for the update to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 48
          },
          "name": "minSuccessfulInstancesPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnResourceAutoScalingCreationPolicy"
    },
    "@aws-cdk/core.CfnResourceDefaultVersion": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::ResourceDefaultVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html"
        },
        "remarks": "Specifies the default version of a resource. The default version of a resource will be used in CloudFormation operations.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::ResourceDefaultVersion`."
      },
      "fqn": "@aws-cdk/core.CfnResourceDefaultVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::ResourceDefaultVersion`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 2241
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnResourceDefaultVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2176
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2256
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2269
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResourceDefaultVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2180
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2205
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2261
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-typename"
            },
            "remarks": "Conditional: You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The name of the resource."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2214
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-typeversionarn"
            },
            "remarks": "Conditional: You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resource version."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2223
          },
          "name": "typeVersionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-versionid"
            },
            "remarks": "The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the resource version when it's registered.\n\nConditional: You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The ID of a specific version of the resource."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2232
          },
          "name": "versionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnResourceDefaultVersion"
    },
    "@aws-cdk/core.CfnResourceDefaultVersionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResourceDefaultVersion`."
      },
      "fqn": "@aws-cdk/core.CfnResourceDefaultVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2085
      },
      "name": "CfnResourceDefaultVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-typename"
            },
            "remarks": "Conditional: You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The name of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2094
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-typeversionarn"
            },
            "remarks": "Conditional: You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resource version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2103
          },
          "name": "typeVersionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-versionid"
            },
            "remarks": "The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the resource version when it's registered.\n\nConditional: You must specify either `TypeVersionArn` , or `TypeName` and `VersionId` .",
            "stability": "external",
            "summary": "The ID of a specific version of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2112
          },
          "name": "versionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnResourceDefaultVersionProps"
    },
    "@aws-cdk/core.CfnResourceProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource.ts",
        "line": 20
      },
      "name": "CfnResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "CloudFormation resource type (e.g. `AWS::S3::Bucket`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 24
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No resource properties.",
            "stability": "stable",
            "summary": "Resource properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 31
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-resource:CfnResourceProps"
    },
    "@aws-cdk/core.CfnResourceSignal": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "When AWS CloudFormation creates the associated resource, configures the number of required success signals and the length of time that AWS CloudFormation waits for those signals."
      },
      "fqn": "@aws-cdk/core.CfnResourceSignal",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 55
      },
      "name": "CfnResourceSignal",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If the resource receives a failure signal or doesn't receive the specified number of signals before the timeout period\nexpires, the resource creation fails and AWS CloudFormation rolls the stack back.",
            "stability": "stable",
            "summary": "The number of success signals AWS CloudFormation must receive before it sets the resource status as CREATE_COMPLETE."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 62
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The timeout period starts after AWS CloudFormation starts creating the resource, and the timeout expires no sooner\nthan the time you specify but can occur shortly thereafter. The maximum time that you can specify is 12 hours.",
            "stability": "stable",
            "summary": "The length of time that AWS CloudFormation waits for the number of signals that was specified in the Count property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 69
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnResourceSignal"
    },
    "@aws-cdk/core.CfnResourceVersion": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::ResourceVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html"
        },
        "remarks": "Registers a resource version with the CloudFormation service. Registering a resource version makes it available for use in CloudFormation templates in your AWS account , and includes:\n\n- Validating the resource schema.\n- Determining which handlers, if any, have been specified for the resource.\n- Making the resource available for use in your account.\n\nFor more information on how to develop resources and ready them for registration, see [Creating Resource Providers](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html) in the *CloudFormation CLI User Guide* .\n\nYou can have a maximum of 50 resource versions registered at a time. This maximum is per account and per Region.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::ResourceVersion`."
      },
      "fqn": "@aws-cdk/core.CfnResourceVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::ResourceVersion`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 2528
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnResourceVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2402
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2551
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2565
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResourceVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2406
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resource version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2431
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IsDefaultVersion"
            },
            "stability": "external",
            "summary": "Whether the resource version is set as the default version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2437
          },
          "name": "attrIsDefaultVersion",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ProvisioningType"
            },
            "remarks": "CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.\n\nValid values include:\n\n- `FULLY_MUTABLE` : The resource type includes an update handler to process updates to the type during stack update operations.\n- `IMMUTABLE` : The resource type doesn't include an update handler, so the type can't be updated and must instead be replaced during stack update operations.\n- `NON_PROVISIONABLE` : The resource type doesn't include all the following handlers, and therefore can't actually be provisioned.\n\n- create\n- read\n- delete",
            "stability": "external",
            "summary": "The provisioning behavior of the resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2453
          },
          "name": "attrProvisioningType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TypeArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2459
          },
          "name": "attrTypeArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VersionId"
            },
            "remarks": "The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the resource version when it is registered.",
            "stability": "external",
            "summary": "The ID of a specific version of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2465
          },
          "name": "attrVersionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Visibility"
            },
            "remarks": "Valid values include:\n\n- `PRIVATE` : The resource is only visible and usable within the account in which it's registered. CloudFormation marks any resources you register as `PRIVATE` .\n- `PUBLIC` : The resource is publicly visible and usable within any Amazon account.",
            "stability": "external",
            "summary": "The scope at which the resource is visible and usable in CloudFormation operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2476
          },
          "name": "attrVisibility",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2556
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-schemahandlerpackage"
            },
            "remarks": "For information on generating a schema handler package for the resource you want to register, see [submit](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html) in the *CloudFormation CLI User Guide* .\n\n> The user registering the resource must be able to access the package in the S3 bucket. That is, the user needs to have [GetObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html) permissions for the schema handler package. For more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "A URL to the S3 bucket containing the resource project package that contains the necessary files for the resource you want to register."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2487
          },
          "name": "schemaHandlerPackage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-typename"
            },
            "remarks": "We recommend that resource names adhere to the following pattern: *company_or_organization* :: *service* :: *type* .\n\n> The following organization namespaces are reserved and can't be used in your resource names:\n>\n> - `Alexa`\n> - `AMZN`\n> - `Amazon`\n> - `AWS`\n> - `Custom`\n> - `Dev`",
            "stability": "external",
            "summary": "The name of the resource being registered."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2505
          },
          "name": "typeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-executionrolearn"
            },
            "remarks": "If your resource calls AWS APIs in any of its handlers, you must create an *[IAM execution role](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html)* that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. When CloudFormation needs to invoke the resource type handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the resource type handler, thereby supplying your resource type with the appropriate credentials.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role for CloudFormation to assume when invoking the resource."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2512
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-loggingconfig"
            },
            "stability": "external",
            "summary": "Logging configuration information for a resource."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2519
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnResourceVersion.LoggingConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnResourceVersion"
    },
    "@aws-cdk/core.CfnResourceVersion.LoggingConfigProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-resourceversion-loggingconfig.html"
        },
        "stability": "external",
        "summary": "Logging configuration information for a resource."
      },
      "fqn": "@aws-cdk/core.CfnResourceVersion.LoggingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2579
      },
      "name": "LoggingConfigProperty",
      "namespace": "CfnResourceVersion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-resourceversion-loggingconfig.html#cfn-cloudformation-resourceversion-loggingconfig-loggroupname"
            },
            "stability": "external",
            "summary": "The Amazon CloudWatch logs group to which CloudFormation sends error logging information when invoking the type's handlers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2585
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-resourceversion-loggingconfig.html#cfn-cloudformation-resourceversion-loggingconfig-logrolearn"
            },
            "stability": "external",
            "summary": "The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2591
          },
          "name": "logRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnResourceVersion.LoggingConfigProperty"
    },
    "@aws-cdk/core.CfnResourceVersionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResourceVersion`."
      },
      "fqn": "@aws-cdk/core.CfnResourceVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2282
      },
      "name": "CfnResourceVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-schemahandlerpackage"
            },
            "remarks": "For information on generating a schema handler package for the resource you want to register, see [submit](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html) in the *CloudFormation CLI User Guide* .\n\n> The user registering the resource must be able to access the package in the S3 bucket. That is, the user needs to have [GetObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html) permissions for the schema handler package. For more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html) in the *AWS Identity and Access Management User Guide* .",
            "stability": "external",
            "summary": "A URL to the S3 bucket containing the resource project package that contains the necessary files for the resource you want to register."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2293
          },
          "name": "schemaHandlerPackage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-typename"
            },
            "remarks": "We recommend that resource names adhere to the following pattern: *company_or_organization* :: *service* :: *type* .\n\n> The following organization namespaces are reserved and can't be used in your resource names:\n>\n> - `Alexa`\n> - `AMZN`\n> - `Amazon`\n> - `AWS`\n> - `Custom`\n> - `Dev`",
            "stability": "external",
            "summary": "The name of the resource being registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2311
          },
          "name": "typeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-executionrolearn"
            },
            "remarks": "If your resource calls AWS APIs in any of its handlers, you must create an *[IAM execution role](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html)* that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. When CloudFormation needs to invoke the resource type handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the resource type handler, thereby supplying your resource type with the appropriate credentials.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role for CloudFormation to assume when invoking the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2318
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-loggingconfig"
            },
            "stability": "external",
            "summary": "Logging configuration information for a resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2325
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnResourceVersion.LoggingConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnResourceVersionProps"
    },
    "@aws-cdk/core.CfnRule": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnRefElement",
      "docs": {
        "custom": {
          "link": "https://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html"
        },
        "remarks": "Rules\nare useful for preventing end users from inadvertently specifying an incorrect value.\nFor example, you can add a rule to verify whether end users specified a valid subnet in a\ngiven VPC or used m1.small instance types for test environments. AWS CloudFormation uses\nrules to validate parameter values before it creates the resources for the product.\n\nA rule can include a RuleCondition property and must include an Assertions property.\nFor each rule, you can define only one rule condition; you can define one or more asserts within the Assertions property.\nYou define a rule condition and assertions by using rule-specific intrinsic functions.",
        "stability": "stable",
        "summary": "The Rules that define template constraints in an AWS Service Catalog portfolio describe when end users can use the template and which values they can specify for parameters that are declared in the AWS CloudFormation template used to create the product they are attempting to use."
      },
      "fqn": "@aws-cdk/core.CfnRule",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates and adds a rule."
        },
        "locationInModule": {
          "filename": "lib/cfn-rule.ts",
          "line": 68
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parent construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The rule props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnRuleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-rule.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an assertion to the rule."
          },
          "locationInModule": {
            "filename": "lib/cfn-rule.ts",
            "line": 80
          },
          "name": "addAssertion",
          "parameters": [
            {
              "docs": {
                "summary": "The expression to evaluation."
              },
              "name": "condition",
              "type": {
                "fqn": "@aws-cdk/core.ICfnConditionExpression"
              }
            },
            {
              "docs": {
                "summary": "The description of the assertion."
              },
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "CfnRule",
      "symbolId": "lib/cfn-rule:CfnRule"
    },
    "@aws-cdk/core.CfnRuleAssertion": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A rule assertion."
      },
      "fqn": "@aws-cdk/core.CfnRuleAssertion",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-rule.ts",
        "line": 109
      },
      "name": "CfnRuleAssertion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The assertion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-rule.ts",
            "line": 113
          },
          "name": "assert",
          "type": {
            "fqn": "@aws-cdk/core.ICfnConditionExpression"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The assertion description."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-rule.ts",
            "line": 118
          },
          "name": "assertDescription",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-rule:CfnRuleAssertion"
    },
    "@aws-cdk/core.CfnRuleProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "For each rule, you can define only one rule condition; you can define one or more asserts within the Assertions property.\nYou define a rule condition and assertions by using rule-specific intrinsic functions.\n\nYou can use the following rule-specific intrinsic functions to define rule conditions and assertions:\n\n Fn::And\n Fn::Contains\n Fn::EachMemberEquals\n Fn::EachMemberIn\n Fn::Equals\n Fn::If\n Fn::Not\n Fn::Or\n Fn::RefAll\n Fn::ValueOf\n Fn::ValueOfAll\n\nhttps://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html",
        "stability": "stable",
        "summary": "A rule can include a RuleCondition property and must include an Assertions property."
      },
      "fqn": "@aws-cdk/core.CfnRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-rule.ts",
        "line": 27
      },
      "name": "CfnRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No assertions for the rule.",
            "stability": "stable",
            "summary": "Assertions which define the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-rule.ts",
            "line": 41
          },
          "name": "assertions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnRuleAssertion"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Rule's assertions will always take effect.",
            "remarks": "If the function in the rule condition evaluates to true, expressions in each assert are evaluated and applied.",
            "stability": "stable",
            "summary": "If the rule condition evaluates to false, the rule doesn't take effect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-rule.ts",
            "line": 34
          },
          "name": "ruleCondition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.ICfnConditionExpression"
          }
        }
      ],
      "symbolId": "lib/cfn-rule:CfnRuleProps"
    },
    "@aws-cdk/core.CfnStack": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::Stack",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html"
        },
        "remarks": "The `AWS::CloudFormation::Stack` resource nests a stack as a resource in a top-level template.\n\nYou can add output values from a nested stack within the containing template. You use the [GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html) function with the nested stack's logical name and the name of the output value in the nested stack in the format `Outputs. *NestedStackOutputName*` .\n\n> We strongly recommend that updates to nested stacks are run from the parent stack.\n\nWhen you apply template changes to update a top-level stack, CloudFormation updates the top-level stack and initiates an update to its nested stacks. CloudFormation updates the resources of modified nested stacks, but doesn't update the resources of unmodified nested stacks. For more information, see [CloudFormation stack updates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) .\n\n> You must acknowledge IAM capabilities for nested stacks that contain IAM resources. Also, verify that you have cancel update stack permissions, which is required if an update rolls back. For more information about IAM and CloudFormation , see [Controlling access with AWS Identity and Access Management](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::Stack`."
      },
      "fqn": "@aws-cdk/core.CfnStack",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::Stack`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 2855
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnStackProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2778
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2877
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2892
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStack",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2782
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2882
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-tags"
            },
            "remarks": "AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.",
            "stability": "external",
            "summary": "Key-value pairs to associate with this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2837
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-templateurl"
            },
            "remarks": "The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see [Template anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) .\n\nWhether an update causes interruptions depends on the resources that are being updated. An update never causes a nested stack to be replaced.",
            "stability": "external",
            "summary": "Location of file containing the template body."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2810
          },
          "name": "templateUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-notificationarns"
            },
            "remarks": "You can find your Amazon SNS topic ARNs using the Amazon SNS console or your Command Line Interface (CLI).",
            "stability": "external",
            "summary": "The Amazon Simple Notification Service (Amazon SNS) topic ARNs to publish stack related events."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2817
          },
          "name": "notificationArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-parameters"
            },
            "remarks": "Each parameter has a name corresponding to a parameter defined in the embedded template and a value representing the value that you want to set for the parameter.\n\n> If you use the `Ref` function to pass a parameter value to a nested stack, comma-delimited list parameters must be of type `String` . In other words, you can't pass values that are of type `CommaDelimitedList` to nested stacks.\n\nConditional. Required if the nested stack requires input parameters.\n\nWhether an update causes interruptions depends on the resources that are being updated. An update never causes a nested stack to be replaced.",
            "stability": "external",
            "summary": "The set value pairs that represent the parameters passed to CloudFormation when this nested stack is created."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2830
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-timeoutinminutes"
            },
            "remarks": "The default is no timeout. When CloudFormation detects that the nested stack has reached the `CREATE_COMPLETE` state, it marks the nested stack resource as `CREATE_COMPLETE` in the parent stack and resumes creating the parent stack. If the timeout period expires before the nested stack reaches `CREATE_COMPLETE` , CloudFormation marks the nested stack as failed and rolls back both the nested stack and parent stack.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "The length of time, in minutes, that CloudFormation waits for the nested stack to reach the `CREATE_COMPLETE` state."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2846
          },
          "name": "timeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStack"
    },
    "@aws-cdk/core.CfnStackProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnStack`."
      },
      "fqn": "@aws-cdk/core.CfnStackProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2654
      },
      "name": "CfnStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-templateurl"
            },
            "remarks": "The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see [Template anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) .\n\nWhether an update causes interruptions depends on the resources that are being updated. An update never causes a nested stack to be replaced.",
            "stability": "external",
            "summary": "Location of file containing the template body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2663
          },
          "name": "templateUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-notificationarns"
            },
            "remarks": "You can find your Amazon SNS topic ARNs using the Amazon SNS console or your Command Line Interface (CLI).",
            "stability": "external",
            "summary": "The Amazon Simple Notification Service (Amazon SNS) topic ARNs to publish stack related events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2670
          },
          "name": "notificationArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-parameters"
            },
            "remarks": "Each parameter has a name corresponding to a parameter defined in the embedded template and a value representing the value that you want to set for the parameter.\n\n> If you use the `Ref` function to pass a parameter value to a nested stack, comma-delimited list parameters must be of type `String` . In other words, you can't pass values that are of type `CommaDelimitedList` to nested stacks.\n\nConditional. Required if the nested stack requires input parameters.\n\nWhether an update causes interruptions depends on the resources that are being updated. An update never causes a nested stack to be replaced.",
            "stability": "external",
            "summary": "The set value pairs that represent the parameters passed to CloudFormation when this nested stack is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2683
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-tags"
            },
            "remarks": "AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.",
            "stability": "external",
            "summary": "Key-value pairs to associate with this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2690
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-timeoutinminutes"
            },
            "remarks": "The default is no timeout. When CloudFormation detects that the nested stack has reached the `CREATE_COMPLETE` state, it marks the nested stack resource as `CREATE_COMPLETE` in the parent stack and resumes creating the parent stack. If the timeout period expires before the nested stack reaches `CREATE_COMPLETE` , CloudFormation marks the nested stack as failed and rolls back both the nested stack and parent stack.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "The length of time, in minutes, that CloudFormation waits for the nested stack to reach the `CREATE_COMPLETE` state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2699
          },
          "name": "timeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackProps"
    },
    "@aws-cdk/core.CfnStackSet": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::StackSet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html"
        },
        "remarks": "The `AWS::CloudFormation::StackSet` enables you to provision stacks into AWS accounts and across Regions by using a single CloudFormation template. In the stack set, you specify the template to use, in addition to any parameters and capabilities that the template requires.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::StackSet`."
      },
      "fqn": "@aws-cdk/core.CfnStackSet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::StackSet`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 3367
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CfnStackSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3168
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3396
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3421
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStackSet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3172
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StackSetId"
            },
            "stability": "external",
            "summary": "The ID of the stack that you're creating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3197
          },
          "name": "attrStackSetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3401
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-tags"
            },
            "remarks": "AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.",
            "stability": "external",
            "summary": "The key-value pairs to associate with this stack set and the stacks created from it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3332
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-managedexecution"
            },
            "remarks": "When active, StackSets performs non-conflicting operations concurrently and queues conflicting operations. After conflicting operations finish, StackSets starts queued operations in request order.\n\n> If there are already running or queued operations, StackSets queues all incoming operations even if they are non-conflicting.\n>\n> You can't modify your stack set's execution configuration while there are running or queued operations for that stack set.\n\nWhen inactive (default), StackSets performs one operation at a time in request order.",
            "stability": "external",
            "summary": "Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3304
          },
          "name": "managedExecution",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-permissionmodel"
            },
            "remarks": "- With `SELF_MANAGED` permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see [Grant Self-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html) .\n- With `SERVICE_MANAGED` permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations . For more information, see [Grant Service-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html) .",
            "stability": "external",
            "summary": "Describes how the IAM roles required for stack set operations are created."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3207
          },
          "name": "permissionModel",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stacksetname"
            },
            "remarks": "The name must be unique in the Region where you create your stack set.\n\n*Maximum* : `128`\n\n*Pattern* : `^[a-zA-Z][a-zA-Z0-9-]{0,127}$`\n\n> The `StackSetName` property is required.",
            "stability": "external",
            "summary": "The name to associate with the stack set."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3220
          },
          "name": "stackSetName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-administrationrolearn"
            },
            "remarks": "Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.\n\nUse customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see [Prerequisites: Granting Permissions for Stack Set Operations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html) in the *AWS CloudFormation User Guide* .\n\n*Minimum* : `20`\n\n*Maximum* : `2048`",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the IAM role to use to create this stack set."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3233
          },
          "name": "administrationRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-autodeployment"
            },
            "stability": "external",
            "summary": "[ `Service-managed` permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU)."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3240
          },
          "name": "autoDeployment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnStackSet.AutoDeploymentProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-callas"
            },
            "remarks": "By default, `SELF` is specified. Use `SELF` for stack sets with self-managed permissions.\n\n- To create a stack set with service-managed permissions while signed in to the management account, specify `SELF` .\n- To create a stack set with service-managed permissions while signed in to a delegated administrator account, specify `DELEGATED_ADMIN` .\n\nYour AWS account must be registered as a delegated admin in the management account. For more information, see [Register a delegated administrator](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html) in the *AWS CloudFormation User Guide* .\n\nStack sets with service-managed permissions are created in the management account, including stack sets that are created by delegated administrators.\n\n*Valid Values* : `SELF` | `DELEGATED_ADMIN`",
            "stability": "external",
            "summary": "[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3258
          },
          "name": "callAs",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-capabilities"
            },
            "remarks": "Some stack set templates might include resources that can affect permissions in your AWS account —for example, by creating new AWS Identity and Access Management ( IAM ) users. For more information, see [Acknowledging IAM Resources in AWS CloudFormation Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities) .",
            "stability": "external",
            "summary": "The capabilities that are allowed in the stack set."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3265
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-description"
            },
            "remarks": "*Minimum* : `1`\n\n*Maximum* : `1024`",
            "stability": "external",
            "summary": "A description of the stack set."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3276
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-executionrolename"
            },
            "remarks": "If you don't specify an execution role, AWS CloudFormation uses the `AWSCloudFormationStackSetExecutionRole` role for the stack set operation.\n\n*Minimum* : `1`\n\n*Maximum* : `64`\n\n*Pattern* : `[a-zA-Z_0-9+=,.@-]+`",
            "stability": "external",
            "summary": "The name of the IAM execution role to use to create the stack set."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3289
          },
          "name": "executionRoleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-operationpreferences"
            },
            "stability": "external",
            "summary": "The user-specified preferences for how AWS CloudFormation performs a stack set operation."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3311
          },
          "name": "operationPreferences",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnStackSet.OperationPreferencesProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-parameters"
            },
            "stability": "external",
            "summary": "The input parameters for the stack set template."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3318
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnStackSet.ParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stackinstancesgroup"
            },
            "stability": "external",
            "summary": "A group of stack instances with parameters in some specific accounts and Regions."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3325
          },
          "name": "stackInstancesGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnStackSet.StackInstancesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templatebody"
            },
            "remarks": "You must include either `TemplateURL` or `TemplateBody` in a StackSet, but you can't use both. Dynamic references in the `TemplateBody` may not work correctly in all cases. It's recommended to pass templates containing dynamic references through `TemplateUrl` instead.\n\n*Minimum* : `1`\n\n*Maximum* : `51200`",
            "stability": "external",
            "summary": "The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3345
          },
          "name": "templateBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templateurl"
            },
            "remarks": "The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket.\n\nYou must include either `TemplateURL` or `TemplateBody` in a StackSet, but you can't use both.\n\n*Minimum* : `1`\n\n*Maximum* : `1024`",
            "stability": "external",
            "summary": "Location of file containing the template body."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3358
          },
          "name": "templateUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSet"
    },
    "@aws-cdk/core.CfnStackSet.AutoDeploymentProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-autodeployment.html"
        },
        "stability": "external",
        "summary": "[ `Service-managed` permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organizational unit (OU)."
      },
      "fqn": "@aws-cdk/core.CfnStackSet.AutoDeploymentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3435
      },
      "name": "AutoDeploymentProperty",
      "namespace": "CfnStackSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-autodeployment.html#cfn-cloudformation-stackset-autodeployment-enabled"
            },
            "remarks": "If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.",
            "stability": "external",
            "summary": "If set to `true` , StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3441
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-autodeployment.html#cfn-cloudformation-stackset-autodeployment-retainstacksonaccountremoval"
            },
            "remarks": "If set to `false` , stack resources are deleted. Specify only if `Enabled` is set to `True` .",
            "stability": "external",
            "summary": "If set to `true` , stack resources are retained when an account is removed from a target organization or OU."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3447
          },
          "name": "retainStacksOnAccountRemoval",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSet.AutoDeploymentProperty"
    },
    "@aws-cdk/core.CfnStackSet.DeploymentTargetsProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-deploymenttargets.html"
        },
        "stability": "external",
        "summary": "The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions."
      },
      "fqn": "@aws-cdk/core.CfnStackSet.DeploymentTargetsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3511
      },
      "name": "DeploymentTargetsProperty",
      "namespace": "CfnStackSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-deploymenttargets.html#cfn-cloudformation-stackset-deploymenttargets-accountfiltertype"
            },
            "remarks": "The following is a list of possible values for the `AccountFilterType` operation.\n\n- `INTERSECTION` : StackSets deploys to the accounts specified in `Accounts` parameter.\n- `DIFFERENCE` : StackSets excludes the accounts specified in `Accounts` parameter. This enables user to avoid certain accounts within an OU such as suspended accounts.\n- `UNION` : StackSets includes additional accounts deployment targets.\n\nThis is the default value if `AccountFilterType` is not provided. This enables user to update an entire OU and individual accounts from a different OU in one request, which used to be two separate requests.\n- `NONE` : Deploys to all the accounts in specified organizational units (OU).",
            "stability": "external",
            "summary": "Limit deployment targets to individual accounts or include additional accounts with provided OUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3526
          },
          "name": "accountFilterType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-deploymenttargets.html#cfn-cloudformation-stackset-deploymenttargets-accounts"
            },
            "remarks": "*Pattern* : `^[0-9]{12}$`",
            "stability": "external",
            "summary": "The names of one or more AWS accounts for which you want to deploy stack set updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3534
          },
          "name": "accounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-deploymenttargets.html#cfn-cloudformation-stackset-deploymenttargets-organizationalunitids"
            },
            "remarks": "*Pattern* : `^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$`",
            "stability": "external",
            "summary": "The organization root ID or organizational unit (OU) IDs to which StackSets deploys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3542
          },
          "name": "organizationalUnitIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSet.DeploymentTargetsProperty"
    },
    "@aws-cdk/core.CfnStackSet.ManagedExecutionProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-managedexecution.html"
        },
        "stability": "external",
        "summary": "Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations."
      },
      "fqn": "@aws-cdk/core.CfnStackSet.ManagedExecutionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3609
      },
      "name": "ManagedExecutionProperty",
      "namespace": "CfnStackSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-managedexecution.html#cfn-cloudformation-stackset-managedexecution-active"
            },
            "remarks": "After conflicting operations finish, StackSets starts queued operations in request order.\n\n> If there are already running or queued operations, StackSets queues all incoming operations even if they are non-conflicting.\n>\n> You can't modify your stack set's execution configuration while there are running or queued operations for that stack set.\n\nWhen `false` (default), StackSets performs one operation at a time in request order.",
            "stability": "external",
            "summary": "When `true` , StackSets performs non-conflicting operations concurrently and queues conflicting operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3621
          },
          "name": "active",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSet.ManagedExecutionProperty"
    },
    "@aws-cdk/core.CfnStackSet.OperationPreferencesProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-operationpreferences.html"
        },
        "remarks": "For more information on maximum concurrent accounts and failure tolerance, see [Stack set operation options](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options) .",
        "stability": "external",
        "summary": "The user-specified preferences for how AWS CloudFormation performs a stack set operation."
      },
      "fqn": "@aws-cdk/core.CfnStackSet.OperationPreferencesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3682
      },
      "name": "OperationPreferencesProperty",
      "namespace": "CfnStackSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-operationpreferences.html#cfn-cloudformation-stackset-operationpreferences-failuretolerancecount"
            },
            "remarks": "If the operation is stopped in a Region, AWS CloudFormation doesn't attempt the operation in any subsequent Regions.\n\nConditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage` (but not both).",
            "stability": "external",
            "summary": "The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3690
          },
          "name": "failureToleranceCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-operationpreferences.html#cfn-cloudformation-stackset-operationpreferences-failuretolerancepercentage"
            },
            "remarks": "If the operation is stopped in a Region, AWS CloudFormation doesn't attempt the operation in any subsequent Regions.\n\nWhen calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds *down* to the next whole number.\n\nConditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage` , but not both.",
            "stability": "external",
            "summary": "The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3700
          },
          "name": "failureTolerancePercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-operationpreferences.html#cfn-cloudformation-stackset-operationpreferences-maxconcurrentcount"
            },
            "remarks": "This is dependent on the value of `FailureToleranceCount` . `MaxConcurrentCount` is at most one more than the `FailureToleranceCount` .\n\nNote that this setting lets you specify the *maximum* for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.\n\nConditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage` , but not both.",
            "stability": "external",
            "summary": "The maximum number of accounts in which to perform this operation at one time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3710
          },
          "name": "maxConcurrentCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-operationpreferences.html#cfn-cloudformation-stackset-operationpreferences-maxconcurrentpercentage"
            },
            "remarks": "When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.\n\nNote that this setting lets you specify the *maximum* for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.\n\nConditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage` , but not both.",
            "stability": "external",
            "summary": "The maximum percentage of accounts in which to perform this operation at one time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3722
          },
          "name": "maxConcurrentPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-operationpreferences.html#cfn-cloudformation-stackset-operationpreferences-regionconcurrencytype"
            },
            "remarks": "*Allowed values* : `SEQUENTIAL` | `PARALLEL`",
            "stability": "external",
            "summary": "The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3730
          },
          "name": "regionConcurrencyType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-operationpreferences.html#cfn-cloudformation-stackset-operationpreferences-regionorder"
            },
            "stability": "external",
            "summary": "The order of the Regions where you want to perform the stack operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3736
          },
          "name": "regionOrder",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSet.OperationPreferencesProperty"
    },
    "@aws-cdk/core.CfnStackSet.ParameterProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-parameter.html"
        },
        "stability": "external",
        "summary": "The Parameter data type."
      },
      "fqn": "@aws-cdk/core.CfnStackSet.ParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3812
      },
      "name": "ParameterProperty",
      "namespace": "CfnStackSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-parameter.html#cfn-cloudformation-stackset-parameter-parameterkey"
            },
            "remarks": "If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that's specified in your template.",
            "stability": "external",
            "summary": "The key associated with the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3818
          },
          "name": "parameterKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-parameter.html#cfn-cloudformation-stackset-parameter-parametervalue"
            },
            "stability": "external",
            "summary": "The input value associated with the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3824
          },
          "name": "parameterValue",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSet.ParameterProperty"
    },
    "@aws-cdk/core.CfnStackSet.StackInstancesProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-stackinstances.html"
        },
        "stability": "external",
        "summary": "Stack instances in some specific accounts and Regions."
      },
      "fqn": "@aws-cdk/core.CfnStackSet.StackInstancesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3890
      },
      "name": "StackInstancesProperty",
      "namespace": "CfnStackSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-stackinstances.html#cfn-cloudformation-stackset-stackinstances-deploymenttargets"
            },
            "stability": "external",
            "summary": "The AWS `OrganizationalUnitIds` or `Accounts` for which to create stack instances in the specified Regions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3896
          },
          "name": "deploymentTargets",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnStackSet.DeploymentTargetsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-stackinstances.html#cfn-cloudformation-stackset-stackinstances-regions"
            },
            "stability": "external",
            "summary": "The names of one or more Regions where you want to create stack instances using the specified AWS accounts ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3908
          },
          "name": "regions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-stackset-stackinstances.html#cfn-cloudformation-stackset-stackinstances-parameteroverrides"
            },
            "stability": "external",
            "summary": "A list of stack set parameters whose values you want to override in the selected stack instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3902
          },
          "name": "parameterOverrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnStackSet.ParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSet.StackInstancesProperty"
    },
    "@aws-cdk/core.CfnStackSetProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnStackSet`."
      },
      "fqn": "@aws-cdk/core.CfnStackSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 2905
      },
      "name": "CfnStackSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-permissionmodel"
            },
            "remarks": "- With `SELF_MANAGED` permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see [Grant Self-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html) .\n- With `SERVICE_MANAGED` permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations . For more information, see [Grant Service-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html) .",
            "stability": "external",
            "summary": "Describes how the IAM roles required for stack set operations are created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2915
          },
          "name": "permissionModel",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stacksetname"
            },
            "remarks": "The name must be unique in the Region where you create your stack set.\n\n*Maximum* : `128`\n\n*Pattern* : `^[a-zA-Z][a-zA-Z0-9-]{0,127}$`\n\n> The `StackSetName` property is required.",
            "stability": "external",
            "summary": "The name to associate with the stack set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2928
          },
          "name": "stackSetName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-administrationrolearn"
            },
            "remarks": "Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.\n\nUse customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see [Prerequisites: Granting Permissions for Stack Set Operations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html) in the *AWS CloudFormation User Guide* .\n\n*Minimum* : `20`\n\n*Maximum* : `2048`",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the IAM role to use to create this stack set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2941
          },
          "name": "administrationRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-autodeployment"
            },
            "stability": "external",
            "summary": "[ `Service-managed` permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2948
          },
          "name": "autoDeployment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnStackSet.AutoDeploymentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-callas"
            },
            "remarks": "By default, `SELF` is specified. Use `SELF` for stack sets with self-managed permissions.\n\n- To create a stack set with service-managed permissions while signed in to the management account, specify `SELF` .\n- To create a stack set with service-managed permissions while signed in to a delegated administrator account, specify `DELEGATED_ADMIN` .\n\nYour AWS account must be registered as a delegated admin in the management account. For more information, see [Register a delegated administrator](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html) in the *AWS CloudFormation User Guide* .\n\nStack sets with service-managed permissions are created in the management account, including stack sets that are created by delegated administrators.\n\n*Valid Values* : `SELF` | `DELEGATED_ADMIN`",
            "stability": "external",
            "summary": "[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2966
          },
          "name": "callAs",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-capabilities"
            },
            "remarks": "Some stack set templates might include resources that can affect permissions in your AWS account —for example, by creating new AWS Identity and Access Management ( IAM ) users. For more information, see [Acknowledging IAM Resources in AWS CloudFormation Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities) .",
            "stability": "external",
            "summary": "The capabilities that are allowed in the stack set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2973
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-description"
            },
            "remarks": "*Minimum* : `1`\n\n*Maximum* : `1024`",
            "stability": "external",
            "summary": "A description of the stack set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2984
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-executionrolename"
            },
            "remarks": "If you don't specify an execution role, AWS CloudFormation uses the `AWSCloudFormationStackSetExecutionRole` role for the stack set operation.\n\n*Minimum* : `1`\n\n*Maximum* : `64`\n\n*Pattern* : `[a-zA-Z_0-9+=,.@-]+`",
            "stability": "external",
            "summary": "The name of the IAM execution role to use to create the stack set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 2997
          },
          "name": "executionRoleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-managedexecution"
            },
            "remarks": "When active, StackSets performs non-conflicting operations concurrently and queues conflicting operations. After conflicting operations finish, StackSets starts queued operations in request order.\n\n> If there are already running or queued operations, StackSets queues all incoming operations even if they are non-conflicting.\n>\n> You can't modify your stack set's execution configuration while there are running or queued operations for that stack set.\n\nWhen inactive (default), StackSets performs one operation at a time in request order.",
            "stability": "external",
            "summary": "Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3012
          },
          "name": "managedExecution",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-operationpreferences"
            },
            "stability": "external",
            "summary": "The user-specified preferences for how AWS CloudFormation performs a stack set operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3019
          },
          "name": "operationPreferences",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnStackSet.OperationPreferencesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-parameters"
            },
            "stability": "external",
            "summary": "The input parameters for the stack set template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3026
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnStackSet.ParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stackinstancesgroup"
            },
            "stability": "external",
            "summary": "A group of stack instances with parameters in some specific accounts and Regions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3033
          },
          "name": "stackInstancesGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnStackSet.StackInstancesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-tags"
            },
            "remarks": "AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.",
            "stability": "external",
            "summary": "The key-value pairs to associate with this stack set and the stacks created from it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3040
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templatebody"
            },
            "remarks": "You must include either `TemplateURL` or `TemplateBody` in a StackSet, but you can't use both. Dynamic references in the `TemplateBody` may not work correctly in all cases. It's recommended to pass templates containing dynamic references through `TemplateUrl` instead.\n\n*Minimum* : `1`\n\n*Maximum* : `51200`",
            "stability": "external",
            "summary": "The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3053
          },
          "name": "templateBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templateurl"
            },
            "remarks": "The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket.\n\nYou must include either `TemplateURL` or `TemplateBody` in a StackSet, but you can't use both.\n\n*Minimum* : `1`\n\n*Maximum* : `1024`",
            "stability": "external",
            "summary": "Location of file containing the template body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3066
          },
          "name": "templateUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnStackSetProps"
    },
    "@aws-cdk/core.CfnTag": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html"
        },
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.CfnTag",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-tag.ts",
        "line": 4
      },
      "name": "CfnTag",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-tag.ts",
            "line": 8
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-tag.ts",
            "line": 13
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-tag:CfnTag"
    },
    "@aws-cdk/core.CfnTrafficRoute": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A traffic route, representing where the traffic is being directed to."
      },
      "fqn": "@aws-cdk/core.CfnTrafficRoute",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 173
      },
      "name": "CfnTrafficRoute",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The logical id of the target resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 183
          },
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Today, the only allowed value is 'AWS::ElasticLoadBalancingV2::Listener'.",
            "stability": "stable",
            "summary": "The resource type of the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 178
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnTrafficRoute"
    },
    "@aws-cdk/core.CfnTrafficRouting": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Type of the `CfnCodeDeployBlueGreenEcsAttributes.trafficRouting` property."
      },
      "fqn": "@aws-cdk/core.CfnTrafficRouting",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 189
      },
      "name": "CfnTrafficRouting",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The listener to be used by your load balancer to direct traffic to your target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 193
          },
          "name": "prodTrafficRoute",
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRoute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The logical IDs of the blue and green, respectively, AWS::ElasticLoadBalancingV2::TargetGroup target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 204
          },
          "name": "targetGroups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The listener to be used by your load balancer to direct traffic to your target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 198
          },
          "name": "testTrafficRoute",
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRoute"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnTrafficRouting"
    },
    "@aws-cdk/core.CfnTrafficRoutingConfig": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "The type of the `CfnCodeDeployBlueGreenHookProps.trafficRoutingConfig` property.",
        "stability": "stable",
        "summary": "Traffic routing configuration settings."
      },
      "fqn": "@aws-cdk/core.CfnTrafficRoutingConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 75
      },
      "name": "CfnTrafficRoutingConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of traffic shifting used by the blue-green deployment configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 79
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRoutingType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "The configuration for traffic routing when `type` is `CfnTrafficRoutingType.TIME_BASED_CANARY`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 87
          },
          "name": "timeBasedCanary",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRoutingTimeBasedCanary"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "The configuration for traffic routing when `type` is `CfnTrafficRoutingType.TIME_BASED_LINEAR`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 95
          },
          "name": "timeBasedLinear",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnTrafficRoutingTimeBasedLinear"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnTrafficRoutingConfig"
    },
    "@aws-cdk/core.CfnTrafficRoutingTimeBasedCanary": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The traffic routing configuration if `CfnTrafficRoutingConfig.type` is `CfnTrafficRoutingType.TIME_BASED_CANARY`."
      },
      "fqn": "@aws-cdk/core.CfnTrafficRoutingTimeBasedCanary",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 33
      },
      "name": "CfnTrafficRoutingTimeBasedCanary",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "5",
            "stability": "stable",
            "summary": "The number of minutes between the first and second traffic shifts of a time-based canary deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 47
          },
          "name": "bakeTimeMins",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "15",
            "remarks": "The step percentage must be 14% or greater.",
            "stability": "stable",
            "summary": "The percentage of traffic to shift in the first increment of a time-based canary deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 40
          },
          "name": "stepPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnTrafficRoutingTimeBasedCanary"
    },
    "@aws-cdk/core.CfnTrafficRoutingTimeBasedLinear": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The traffic routing configuration if `CfnTrafficRoutingConfig.type` is `CfnTrafficRoutingType.TIME_BASED_LINEAR`."
      },
      "fqn": "@aws-cdk/core.CfnTrafficRoutingTimeBasedLinear",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 54
      },
      "name": "CfnTrafficRoutingTimeBasedLinear",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "5",
            "stability": "stable",
            "summary": "The number of minutes between the first and second traffic shifts of a time-based linear deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 68
          },
          "name": "bakeTimeMins",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "15",
            "remarks": "The step percentage must be 14% or greater.",
            "stability": "stable",
            "summary": "The percentage of traffic that is shifted at the start of each increment of a time-based linear deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
            "line": 61
          },
          "name": "stepPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnTrafficRoutingTimeBasedLinear"
    },
    "@aws-cdk/core.CfnTrafficRoutingType": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "The type of the `CfnTrafficRoutingConfig.type` property.",
        "stability": "stable",
        "summary": "The possible types of traffic shifting for the blue-green deployment configuration."
      },
      "fqn": "@aws-cdk/core.CfnTrafficRoutingType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cfn-codedeploy-blue-green-hook.ts",
        "line": 11
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Switch from blue to green at once."
          },
          "name": "ALL_AT_ONCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specifies a configuration that shifts traffic from blue to green in two increments."
          },
          "name": "TIME_BASED_CANARY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specifies a configuration that shifts traffic from blue to green in equal increments, with an equal number of minutes between each increment."
          },
          "name": "TIME_BASED_LINEAR"
        }
      ],
      "name": "CfnTrafficRoutingType",
      "symbolId": "lib/cfn-codedeploy-blue-green-hook:CfnTrafficRoutingType"
    },
    "@aws-cdk/core.CfnTypeActivation": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::TypeActivation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html"
        },
        "remarks": "Activates a public third-party extension, making it available for use in stack templates. For more information, see [Using public extensions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-public.html) in the *AWS CloudFormation User Guide* .\n\nOnce you have activated a public third-party extension in your account and Region, use [SetTypeConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html) to specify configuration properties for the extension. For more information, see [Configuring extensions at the account level](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration) in the *CloudFormation User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::TypeActivation`."
      },
      "fqn": "@aws-cdk/core.CfnTypeActivation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::TypeActivation`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 4275
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnTypeActivationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 4150
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4297
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4317
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTypeActivation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4154
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the activated extension, in this account and Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4179
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4302
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-autoupdate"
            },
            "remarks": "Major versions released by the publisher must be manually updated.\n\nThe default is `true` .",
            "stability": "external",
            "summary": "Whether to automatically update the extension in this account and Region when a new *minor* version is published by the extension publisher."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4188
          },
          "name": "autoUpdate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-executionrolearn"
            },
            "stability": "external",
            "summary": "The name of the IAM execution role to use to activate the extension."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4195
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-loggingconfig"
            },
            "stability": "external",
            "summary": "Specifies logging configuration information for an extension."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4202
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnTypeActivation.LoggingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-majorversion"
            },
            "remarks": "The default is the latest major version. CloudFormation uses the latest available *minor* version of the major version selected.\n\nYou can specify `MajorVersion` or `VersionBump` , but not both.",
            "stability": "external",
            "summary": "The major version of this extension you want to activate, if multiple major versions are available."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4211
          },
          "name": "majorVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publictypearn"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the public extension."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4220
          },
          "name": "publicTypeArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publisherid"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The ID of the extension publisher."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4229
          },
          "name": "publisherId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-type"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The extension type."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4238
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typename"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The name of the extension."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4247
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typenamealias"
            },
            "remarks": "If you specify an alias for the extension, CloudFormation treats the alias as the extension type name within this account and Region. You must use the alias to refer to the extension in your templates, API calls, and CloudFormation console.\n\nAn extension alias must be unique within a given account and Region. You can activate the same public resource multiple times in the same account and Region, using different type name aliases.",
            "stability": "external",
            "summary": "An alias to assign to the public extension, in this account and Region."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4256
          },
          "name": "typeNameAlias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-versionbump"
            },
            "remarks": "You can also use this parameter to update the value of `AutoUpdate` .\n\n- `MAJOR` : CloudFormation updates the extension to the newest major version, if one is available.\n- `MINOR` : CloudFormation updates the extension to the newest minor version, if one is available.",
            "stability": "external",
            "summary": "Manually updates a previously-activated type to a new major or minor version, if available."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4266
          },
          "name": "versionBump",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnTypeActivation"
    },
    "@aws-cdk/core.CfnTypeActivation.LoggingConfigProperty": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-typeactivation-loggingconfig.html"
        },
        "stability": "external",
        "summary": "Contains logging configuration information for an extension."
      },
      "fqn": "@aws-cdk/core.CfnTypeActivation.LoggingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 4331
      },
      "name": "LoggingConfigProperty",
      "namespace": "CfnTypeActivation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-typeactivation-loggingconfig.html#cfn-cloudformation-typeactivation-loggingconfig-loggroupname"
            },
            "stability": "external",
            "summary": "The Amazon CloudWatch Logs group to which CloudFormation sends error logging information when invoking the extension's handlers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4337
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-typeactivation-loggingconfig.html#cfn-cloudformation-typeactivation-loggingconfig-logrolearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the role that CloudFormation should assume when sending log entries to CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4343
          },
          "name": "logRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnTypeActivation.LoggingConfigProperty"
    },
    "@aws-cdk/core.CfnTypeActivationProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTypeActivation`."
      },
      "fqn": "@aws-cdk/core.CfnTypeActivationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 3976
      },
      "name": "CfnTypeActivationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-autoupdate"
            },
            "remarks": "Major versions released by the publisher must be manually updated.\n\nThe default is `true` .",
            "stability": "external",
            "summary": "Whether to automatically update the extension in this account and Region when a new *minor* version is published by the extension publisher."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3985
          },
          "name": "autoUpdate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-executionrolearn"
            },
            "stability": "external",
            "summary": "The name of the IAM execution role to use to activate the extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3992
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-loggingconfig"
            },
            "stability": "external",
            "summary": "Specifies logging configuration information for an extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 3999
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/core.CfnTypeActivation.LoggingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-majorversion"
            },
            "remarks": "The default is the latest major version. CloudFormation uses the latest available *minor* version of the major version selected.\n\nYou can specify `MajorVersion` or `VersionBump` , but not both.",
            "stability": "external",
            "summary": "The major version of this extension you want to activate, if multiple major versions are available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4008
          },
          "name": "majorVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publictypearn"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the public extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4017
          },
          "name": "publicTypeArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publisherid"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The ID of the extension publisher."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4026
          },
          "name": "publisherId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-type"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The extension type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4035
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typename"
            },
            "remarks": "Conditional: You must specify `PublicTypeArn` , or `TypeName` , `Type` , and `PublisherId` .",
            "stability": "external",
            "summary": "The name of the extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4044
          },
          "name": "typeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typenamealias"
            },
            "remarks": "If you specify an alias for the extension, CloudFormation treats the alias as the extension type name within this account and Region. You must use the alias to refer to the extension in your templates, API calls, and CloudFormation console.\n\nAn extension alias must be unique within a given account and Region. You can activate the same public resource multiple times in the same account and Region, using different type name aliases.",
            "stability": "external",
            "summary": "An alias to assign to the public extension, in this account and Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4053
          },
          "name": "typeNameAlias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-versionbump"
            },
            "remarks": "You can also use this parameter to update the value of `AutoUpdate` .\n\n- `MAJOR` : CloudFormation updates the extension to the newest major version, if one is available.\n- `MINOR` : CloudFormation updates the extension to the newest minor version, if one is available.",
            "stability": "external",
            "summary": "Manually updates a previously-activated type to a new major or minor version, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4063
          },
          "name": "versionBump",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnTypeActivationProps"
    },
    "@aws-cdk/core.CfnUpdatePolicy": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "AWS CloudFormation invokes one of three update policies depending on the type of change you make or whether a\nscheduled action is associated with the Auto Scaling group.",
        "stability": "stable",
        "summary": "Use the UpdatePolicy attribute to specify how AWS CloudFormation handles updates to the AWS::AutoScaling::AutoScalingGroup resource."
      },
      "fqn": "@aws-cdk/core.CfnUpdatePolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource-policy.ts",
        "line": 109
      },
      "name": "CfnUpdatePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "During replacement,\nAWS CloudFormation retains the old group until it finishes creating the new one. If the update fails, AWS CloudFormation\ncan roll back to the old Auto Scaling group and delete the new Auto Scaling group.",
            "stability": "stable",
            "summary": "Specifies whether an Auto Scaling group and the instances it contains are replaced during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 116
          },
          "name": "autoScalingReplacingUpdate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnAutoScalingReplacingUpdate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Rolling updates enable you to specify whether AWS CloudFormation updates instances that are in an Auto Scaling\ngroup in batches or all at once.",
            "stability": "stable",
            "summary": "To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group, use the AutoScalingRollingUpdate policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 123
          },
          "name": "autoScalingRollingUpdate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnAutoScalingRollingUpdate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "To specify how AWS CloudFormation handles updates for the MinSize, MaxSize, and DesiredCapacity properties when the AWS::AutoScaling::AutoScalingGroup resource has an associated scheduled action, use the AutoScalingScheduledAction policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 130
          },
          "name": "autoScalingScheduledAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnAutoScalingScheduledAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "To perform an AWS CodeDeploy deployment when the version changes on an AWS::Lambda::Alias resource, use the CodeDeployLambdaAliasUpdate update policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 136
          },
          "name": "codeDeployLambdaAliasUpdate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCodeDeployLambdaAliasUpdate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "To upgrade an Amazon ES domain to a new version of Elasticsearch rather than replacing the entire AWS::Elasticsearch::Domain resource, use the EnableVersionUpgrade update policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 148
          },
          "name": "enableVersionUpgrade",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "To modify a replication group's shards by adding or removing shards, rather than replacing the entire AWS::ElastiCache::ReplicationGroup resource, use the UseOnlineResharding update policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-resource-policy.ts",
            "line": 142
          },
          "name": "useOnlineResharding",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cfn-resource-policy:CfnUpdatePolicy"
    },
    "@aws-cdk/core.CfnWaitCondition": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::WaitCondition",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html"
        },
        "remarks": "> For Amazon EC2 and Auto Scaling resources, we recommend that you use a `CreationPolicy` attribute instead of wait conditions. Add a CreationPolicy attribute to those resources, and use the cfn-signal helper script to signal when an instance creation process has completed successfully.\n\nYou can use a wait condition for situations like the following:\n\n- To coordinate stack resource creation with configuration actions that are external to the stack creation.\n- To track the status of a configuration process.\n\nFor these situations, we recommend that you associate a [CreationPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html) attribute with the wait condition so that you don't have to use a wait condition handle. For more information and an example, see [Creating wait conditions in a template](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-waitcondition.html) . If you use a CreationPolicy with a wait condition, don't specify any of the wait condition's properties.\n\n> If you use the [VPC endpoints](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html) feature, resources in the VPC that respond to wait conditions must have access to CloudFormation , specific Amazon Simple Storage Service ( Amazon S3 ) buckets. Resources must send wait condition responses to a presigned Amazon S3 URL. If they can't send responses to Amazon S3 , CloudFormation won't receive a response and the stack operation fails. For more information, see [Setting up VPC endpoints for AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-vpce-bucketnames.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::WaitCondition`."
      },
      "fqn": "@aws-cdk/core.CfnWaitCondition",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::WaitCondition`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 4579
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CfnWaitConditionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 4508
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4594
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4607
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnWaitCondition",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4512
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Data"
            },
            "remarks": "For more information about wait condition signals, see [Wait condition signal JSON format](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-waitcondition.html#using-cfn-waitcondition-signaljson) .\n\nExample return value for a wait condition with 2 signals:\n\n`{ \"Signal1\" : \"Step 1 complete.\" , \"Signal2\" : \"Step 2 complete.\" }`",
            "stability": "external",
            "summary": "A JSON object that contains the `UniqueId` and `Data` values from the wait condition signal(s) for the specified wait condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4541
          },
          "name": "attrData",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4599
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-count"
            },
            "remarks": "When the wait condition receives the requisite number of success signals, CloudFormation resumes the creation of the stack. If the wait condition doesn't receive the specified number of success signals before the Timeout period expires, CloudFormation assumes that the wait condition has failed and rolls the stack back.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "The number of success signals that CloudFormation must receive before it continues the stack creation process."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4550
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-handle"
            },
            "remarks": "Use the `Ref` intrinsic function to specify an [AWS::CloudFormation::WaitConditionHandle](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html) resource.\n\nAnytime you add a WaitCondition resource during a stack update, you must associate the wait condition with a new WaitConditionHandle resource. Don't reuse an old wait condition handle that has already been defined in the template. If you reuse a wait condition handle, the wait condition might evaluate old signals from a previous create or update stack command.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "A reference to the wait condition handle used to signal this wait condition."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4561
          },
          "name": "handle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-timeout"
            },
            "remarks": "`Timeout` is a minimum-bound property, meaning the timeout occurs no sooner than the time you specify, but can occur shortly thereafter. The maximum time that can be specified for this property is 12 hours (43200 seconds).\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "The length of time (in seconds) to wait for the number of signals that the `Count` property specifies."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4570
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnWaitCondition"
    },
    "@aws-cdk/core.CfnWaitConditionHandle": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFormation::WaitConditionHandle",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html"
        },
        "remarks": "> For Amazon EC2 and Auto Scaling resources, we recommend that you use a `CreationPolicy` attribute instead of wait conditions. Add a `CreationPolicy` attribute to those resources, and use the cfn-signal helper script to signal when an instance creation process has completed successfully.\n>\n> For more information, see [Deploying applications on Amazon EC2 with AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/deploying.applications.html) .\n\nThe `AWS::CloudFormation::WaitConditionHandle` type has no properties. When you reference the `WaitConditionHandle` resource by using the Ref function, AWS CloudFormation returns a presigned URL. You pass this URL to applications or scripts that are running on your Amazon EC2 instances to send signals to that URL. An associated `AWS::CloudFormation::WaitCondition` resource checks the URL for the required number of success signals or for a failure signal.\n\n> Anytime you add a `WaitCondition` resource during a stack update or update a resource with a wait condition, you must associate the wait condition with a new `WaitConditionHandle` resource. Don't reuse an old wait condition handle that has already been defined in the template. If you reuse a wait condition handle, the wait condition might evaluate old signals from a previous create or update stack command. > Updates aren't supported for this resource.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFormation::WaitConditionHandle`."
      },
      "fqn": "@aws-cdk/core.CfnWaitConditionHandle",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFormation::WaitConditionHandle`."
        },
        "locationInModule": {
          "filename": "lib/cloudformation.generated.ts",
          "line": 4655
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 4628
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4665
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        }
      ],
      "name": "CfnWaitConditionHandle",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4632
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnWaitConditionHandle"
    },
    "@aws-cdk/core.CfnWaitConditionProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnWaitCondition`."
      },
      "fqn": "@aws-cdk/core.CfnWaitConditionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation.generated.ts",
        "line": 4406
      },
      "name": "CfnWaitConditionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-count"
            },
            "remarks": "When the wait condition receives the requisite number of success signals, CloudFormation resumes the creation of the stack. If the wait condition doesn't receive the specified number of success signals before the Timeout period expires, CloudFormation assumes that the wait condition has failed and rolls the stack back.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "The number of success signals that CloudFormation must receive before it continues the stack creation process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4415
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-handle"
            },
            "remarks": "Use the `Ref` intrinsic function to specify an [AWS::CloudFormation::WaitConditionHandle](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html) resource.\n\nAnytime you add a WaitCondition resource during a stack update, you must associate the wait condition with a new WaitConditionHandle resource. Don't reuse an old wait condition handle that has already been defined in the template. If you reuse a wait condition handle, the wait condition might evaluate old signals from a previous create or update stack command.\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "A reference to the wait condition handle used to signal this wait condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4426
          },
          "name": "handle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-timeout"
            },
            "remarks": "`Timeout` is a minimum-bound property, meaning the timeout occurs no sooner than the time you specify, but can occur shortly thereafter. The maximum time that can be specified for this property is 12 hours (43200 seconds).\n\nUpdates aren't supported.",
            "stability": "external",
            "summary": "The length of time (in seconds) to wait for the number of signals that the `Count` property specifies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation.generated.ts",
            "line": 4435
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudformation.generated:CfnWaitConditionProps"
    },
    "@aws-cdk/core.CliCredentialsStackSynthesizer": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.StackSynthesizer",
      "docs": {
        "remarks": "Instead of assuming the bootstrapped deployment roles, all stack operations will be performed\nusing the CLI's current credentials.\n\n- This synthesizer does not support deploying to accounts to which the CLI does not have\n  credentials. It also does not support deploying using **CDK Pipelines**. For either of those\n  features, use `DefaultStackSynthesizer`.\n- This synthesizer requires an S3 bucket and ECR repository with well-known names. To\n  not depend on those, use `LegacyStackSynthesizer`.\n\nBe aware that your CLI credentials must be valid for the duration of the\nentire deployment. If you are using session credentials, make sure the\nsession lifetime is long enough.\n\nBy default, expects the environment to have been bootstrapped with just the staging resources\nof the Bootstrap Stack V2 (also known as \"modern bootstrap stack\"). You can override\nthe default names using the synthesizer's construction properties.",
        "stability": "stable",
        "summary": "A synthesizer that uses conventional asset locations, but not conventional deployment roles."
      },
      "fqn": "@aws-cdk/core.CliCredentialsStackSynthesizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
          "line": 98
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.CliCredentialsStackSynthesizerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IReusableStackSynthesizer",
        "@aws-cdk/core.IBoundStackSynthesizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
        "line": 89
      },
      "methods": [
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a Docker Image Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 165
          },
          "name": "addDockerImageAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a File Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 155
          },
          "name": "addFileAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Must be called before any of the other methods are called.",
            "stability": "stable",
            "summary": "Bind to the stack this environment is going to be used on."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 127
          },
          "name": "bind",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method may be called more than once on the same object.",
            "stability": "stable",
            "summary": "Produce a bound Stack Synthesizer for the given stack."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 148
          },
          "name": "reusableBind",
          "overrides": "@aws-cdk/core.IReusableStackSynthesizer",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IBoundStackSynthesizer"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the associated stack to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 178
          },
          "name": "synthesize",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ]
        }
      ],
      "name": "CliCredentialsStackSynthesizer",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The qualifier used to bootstrap this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 123
          },
          "name": "bootstrapQualifier",
          "optional": true,
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/cli-credentials-synthesizer:CliCredentialsStackSynthesizer"
    },
    "@aws-cdk/core.CliCredentialsStackSynthesizerProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the CliCredentialsStackSynthesizer."
      },
      "fqn": "@aws-cdk/core.CliCredentialsStackSynthesizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
        "line": 14
      },
      "name": "CliCredentialsStackSynthesizerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- DefaultStackSynthesizer.DEFAULT_FILE_ASSET_PREFIX",
            "stability": "stable",
            "summary": "bucketPrefix to use while storing S3 Assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 56
          },
          "name": "bucketPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- DefaultStackSynthesizer.DEFAULT_DOCKER_ASSET_PREFIX",
            "remarks": "This does not add any separators - the source hash will be appended to\nthis string directly.",
            "stability": "stable",
            "summary": "A prefix to use while tagging and uploading Docker images to ECR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 66
          },
          "name": "dockerTagPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_FILE_ASSETS_BUCKET_NAME",
            "remarks": "You must supply this if you have given a non-standard name to the staging bucket.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "Name of the S3 bucket to hold file assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 26
          },
          "name": "fileAssetsBucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_IMAGE_ASSETS_REPOSITORY_NAME",
            "remarks": "You must supply this if you have given a non-standard name to the ECR repository.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "Name of the ECR repository to hold Docker Image assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 39
          },
          "name": "imageAssetsRepositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Value of context key '@aws-cdk/core:bootstrapQualifier' if set, otherwise `DefaultStackSynthesizer.DEFAULT_QUALIFIER`",
            "remarks": "You can use this and leave the other naming properties empty if you have deployed\nthe bootstrap environment with standard names but only different qualifiers.",
            "stability": "stable",
            "summary": "Qualifier to disambiguate multiple environments in the same account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/cli-credentials-synthesizer.ts",
            "line": 49
          },
          "name": "qualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/cli-credentials-synthesizer:CliCredentialsStackSynthesizerProps"
    },
    "@aws-cdk/core.ContextProvider": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Instances of this class communicate with context provider plugins in the 'cdk\ntoolkit' via context variables (input), outputting specialized queries for\nmore context variables (output).\n\nContextProvider needs access to a Construct to hook into the context mechanism.",
        "stability": "stable",
        "summary": "Base class for the model side of context providers."
      },
      "fqn": "@aws-cdk/core.ContextProvider",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/context-provider.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "returns": "the context key or undefined if a key cannot be rendered (due to tokens used in any of the props)",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 67
          },
          "name": "getKey",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.GetContextKeyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.GetContextKeyResult"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 87
          },
          "name": "getValue",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.GetContextValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.GetContextValueResult"
            }
          },
          "static": true
        }
      ],
      "name": "ContextProvider",
      "symbolId": "lib/context-provider:ContextProvider"
    },
    "@aws-cdk/core.CopyOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options applied when copying directories."
      },
      "fqn": "@aws-cdk/core.CopyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fs/options.ts",
        "line": 81
      },
      "name": "CopyOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- nothing is excluded",
            "remarks": "See `ignoreMode` to set the matching behavior.\nHas no effect on Assets bundled using the `bundling` property.",
            "stability": "stable",
            "summary": "File paths matching the patterns will be excluded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 68
          },
          "name": "exclude",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SymlinkFollowMode.NEVER",
            "stability": "stable",
            "summary": "A strategy for how to handle symlinks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 87
          },
          "name": "follow",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SymlinkFollowMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "IgnoreMode.GLOB",
            "stability": "stable",
            "summary": "The ignore behavior to use for `exclude` patterns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 75
          },
          "name": "ignoreMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.IgnoreMode"
          }
        }
      ],
      "symbolId": "lib/fs/options:CopyOptions"
    },
    "@aws-cdk/core.CustomResource": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFormation::CustomResource"
        },
        "remarks": "This class is intended to be used by construct library authors. Application\nbuilder should not be able to tell whether or not a construct is backed by\na custom resource, and so the use of this class should be invisible.\n\nInstead, construct library authors declare a custom construct that hides the\nchoice of provider, and accepts a strongly-typed properties object with the\nproperties your provider accepts.\n\nYour custom resource provider (identified by the `serviceToken` property)\ncan be one of 4 constructs:\n\n- If you are authoring a construct library or application, we recommend you\n  use the `Provider` class in the `custom-resources` module.\n- If you are authoring a construct for the CDK's AWS Construct Library,\n  you should use the `CustomResourceProvider` construct in this package.\n- If you want full control over the provider, you can always directly use\n  a Lambda Function or SNS Topic by passing the ARN into `serviceToken`.",
        "stability": "stable",
        "summary": "Instantiation of a custom resource, whose implementation is provided a Provider."
      },
      "fqn": "@aws-cdk/core.CustomResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/custom-resource.ts",
          "line": 128
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CustomResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/custom-resource.ts",
        "line": 125
      },
      "methods": [
        {
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "returns": "a token for `Fn::GetAtt`. Use `Token.asXxx` to encode the returned `Reference` as a specific type or\nuse the convenience `getAttString` for string attributes.",
            "stability": "stable",
            "summary": "Returns the value of an attribute of the custom resource of an arbitrary type."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 164
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Reference"
            }
          }
        },
        {
          "docs": {
            "remarks": "Attributes are returned from the custom resource provider through the\n`Data` map where the key is the attribute name.",
            "returns": "a token for `Fn::GetAtt` encoded as a string.",
            "stability": "stable",
            "summary": "Returns the value of an attribute of the custom resource of type string."
          },
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 176
          },
          "name": "getAttString",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "CustomResource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The physical name of this custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 151
          },
          "name": "ref",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/custom-resource:CustomResource"
    },
    "@aws-cdk/core.CustomResourceProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to provide a Lambda-backed custom resource."
      },
      "fqn": "@aws-cdk/core.CustomResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/custom-resource.ts",
        "line": 10
      },
      "name": "CustomResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can implement a provider by listening to raw AWS CloudFormation events\nand specify the ARN of an SNS topic (`topic.topicArn`) or the ARN of an AWS\nLambda function (`lambda.functionArn`) or use the CDK's custom [resource\nprovider framework] which makes it easier to implement robust providers.\n\n[resource provider framework]:\nhttps://docs.aws.amazon.com/cdk/api/latest/docs/custom-resources-readme.html\n\nProvider framework:\n\n```ts\n// use the provider framework from aws-cdk/custom-resources:\nconst provider = new customresources.Provider(this, 'ResourceProvider', {\n  onEventHandler,\n  isCompleteHandler, // optional\n});\n\nnew CustomResource(this, 'MyResource', {\n  serviceToken: provider.serviceToken,\n});\n```\n\nAWS Lambda function (not recommended to use AWS Lambda Functions directly,\nsee the module README):\n\n```ts\n// invoke an AWS Lambda function when a lifecycle event occurs:\nnew CustomResource(this, 'MyResource', {\n  serviceToken: myFunction.functionArn,\n});\n```\n\nSNS topic (not recommended to use AWS Lambda Functions directly, see the\nmodule README):\n\n```ts\n// publish lifecycle events to an SNS topic:\nnew CustomResource(this, 'MyResource', {\n  serviceToken: myTopic.topicArn,\n});\n```",
            "stability": "stable",
            "summary": "The ARN of the provider which implements this custom resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 56
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Convert all property keys to pascal case."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 99
          },
          "name": "pascalCaseProperties",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No properties.",
            "stability": "stable",
            "summary": "Properties to pass to the Lambda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 63
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cdk.RemovalPolicy.Destroy",
            "stability": "stable",
            "summary": "The policy to apply when this resource is removed from the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 92
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS::CloudFormation::CustomResource",
            "remarks": "For example, you can use \"Custom::MyCustomResourceTypeName\".\n\nCustom resource type names must begin with \"Custom::\" and can include\nalphanumeric characters and the following characters: _@-. You can specify\na custom resource type name up to a maximum length of 60 characters. You\ncannot change the type during an update.\n\nUsing your own resource type names helps you quickly differentiate the\ntypes of custom resources in your stack. For example, if you had two custom\nresources that conduct two different ping tests, you could name their type\nas Custom::PingTester to make them easily identifiable as ping testers\n(instead of using AWS::CloudFormation::CustomResource).",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#aws-cfn-resource-type-name",
            "stability": "stable",
            "summary": "For custom resources, you can specify AWS::CloudFormation::CustomResource (the default) as the resource type, or you can specify your own resource type name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource.ts",
            "line": 85
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/custom-resource:CustomResourceProps"
    },
    "@aws-cdk/core.CustomResourceProvider": {
      "assembly": "@aws-cdk/core",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "This is a provider for `CustomResource` constructs, backed by an AWS Lambda\nFunction. It only supports NodeJS runtimes.\n\n> **Application builders do not need to use this provider type**. This is not\n> a generic custom resource provider class. It is specifically\n> intended to be used only by constructs in the AWS CDK Construct Library, and\n> only exists here because of reverse dependency issues (for example, it cannot\n> use `iam.PolicyStatement` objects, since the `iam` library already depends on\n> the CDK `core` library and we cannot have cyclic dependencies).\n\nIf you are not writing constructs for the AWS Construct Library, you should\nuse the `Provider` class in the `custom-resources` module instead, which has\na better API and supports all Lambda runtimes, not just Node.\n\nN.B.: When you are writing Custom Resource Providers, there are a number of\nlifecycle events you have to pay attention to. These are documented in the\nREADME of the `custom-resources` module. Be sure to give the documentation\nin that module a read, regardless of whether you end up using the Provider\nclass in there or this one.",
        "stability": "stable",
        "summary": "An AWS-Lambda backed custom resource provider, for CDK Construct Library constructs."
      },
      "fqn": "@aws-cdk/core.CustomResourceProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
          "line": 209
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/core.CustomResourceProviderProps"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
        "line": 141
      },
      "methods": [
        {
          "docs": {
            "returns": "the service token of the custom resource provider, which should be\nused when defining a `CustomResource`.",
            "stability": "stable",
            "summary": "Returns a stack-level singleton ARN (service token) for the custom resource provider."
          },
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 154
          },
          "name": "getOrCreate",
          "parameters": [
            {
              "docs": {
                "summary": "Construct scope."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "A globally unique id that will be used for the stack-level construct."
              },
              "name": "uniqueid",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Provider properties which will only be applied when the provider is first created."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/core.CustomResourceProviderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "the service token of the custom resource provider, which should be\nused when defining a `CustomResource`.",
            "stability": "stable",
            "summary": "Returns a stack-level singleton for the custom resource provider."
          },
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 169
          },
          "name": "getOrCreateProvider",
          "parameters": [
            {
              "docs": {
                "summary": "Construct scope."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "A globally unique id that will be used for the stack-level construct."
              },
              "name": "uniqueid",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Provider properties which will only be applied when the provider is first created."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/core.CustomResourceProviderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.CustomResourceProvider"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "declare const myProvider: CustomResourceProvider;\n\nmyProvider.addToRolePolicy({\n  Effect: 'Allow',\n  Action: 's3:GetObject',\n  Resource: '*',\n});",
            "remarks": "**Please note**: this is a direct IAM JSON policy blob, *not* a `iam.PolicyStatement`\nobject like you will see in the rest of the CDK.",
            "stability": "stable",
            "summary": "Add an IAM policy statement to the inline policy of the provider's lambda function's role."
          },
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 337
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "CustomResourceProvider",
      "properties": [
        {
          "docs": {
            "remarks": "Can be used to trigger updates\non code changes, even when the properties of a custom resource remain unchanged.",
            "stability": "stable",
            "summary": "The hash of the lambda code backing this provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 204
          },
          "name": "codeHash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the provider's AWS Lambda function role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 198
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "example": "declare const myProvider: CustomResourceProvider;\n\nnew CustomResource(this, 'MyCustomResource', {\n  serviceToken: myProvider.serviceToken,\n  properties: {\n    myPropertyOne: 'one',\n    myPropertyTwo: 'two',\n  },\n});",
            "stability": "stable",
            "summary": "The ARN of the provider's AWS Lambda function which should be used as the `serviceToken` when defining a custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 193
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/custom-resource-provider/custom-resource-provider:CustomResourceProvider"
    },
    "@aws-cdk/core.CustomResourceProviderProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Initialization properties for `CustomResourceProvider`."
      },
      "fqn": "@aws-cdk/core.CustomResourceProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
        "line": 24
      },
      "name": "CustomResourceProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The code will be\nbundled into a zip asset and wired to the provider's AWS Lambda function.",
            "stability": "stable",
            "summary": "A local file system directory with the provider's code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 29
          },
          "name": "codeDirectory",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AWS Lambda runtime and version to use for the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 34
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/core.CustomResourceProviderRuntime"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "A description of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 87
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables.",
            "stability": "stable",
            "summary": "Key-value pairs that are passed to Lambda as Environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 80
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Size.mebibytes(128)",
            "remarks": "Increasing the\nfunction's memory also increases its CPU allocation.",
            "stability": "stable",
            "summary": "The amount of memory that your function has access to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 73
          },
          "name": "memorySize",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional inline policy",
            "example": "const provider = CustomResourceProvider.getOrCreateProvider(this, 'Custom::MyCustomResourceType', {\n  codeDirectory: `${__dirname}/my-handler`,\n  runtime: CustomResourceProviderRuntime.NODEJS_14_X,\n  policyStatements: [\n    {\n      Effect: 'Allow',\n      Action: 's3:PutObject*',\n      Resource: '*',\n    }\n  ],\n});",
            "remarks": "**Please note**: these are direct IAM JSON policy blobs, *not* `iam.PolicyStatement`\nobjects like you will see in the rest of the CDK.",
            "stability": "stable",
            "summary": "A set of IAM policy statements to include in the inline policy of the provider's lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 58
          },
          "name": "policyStatements",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(15)",
            "stability": "stable",
            "summary": "AWS Lambda timeout for the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
            "line": 65
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/custom-resource-provider/custom-resource-provider:CustomResourceProviderProps"
    },
    "@aws-cdk/core.CustomResourceProviderRuntime": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "This also indicates\nwhich language is used for the handler.",
        "stability": "stable",
        "summary": "The lambda runtime to use for the resource provider."
      },
      "fqn": "@aws-cdk/core.CustomResourceProviderRuntime",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/custom-resource-provider/custom-resource-provider.ts",
        "line": 94
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Node.js 12.x."
          },
          "name": "NODEJS_12_X"
        },
        {
          "docs": {
            "deprecated": "Use `NODEJS_14_X`",
            "stability": "deprecated",
            "summary": "Node.js 12.x."
          },
          "name": "NODEJS_12"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Node.js 14.x."
          },
          "name": "NODEJS_14_X"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Node.js 16.x."
          },
          "name": "NODEJS_16_X"
        }
      ],
      "name": "CustomResourceProviderRuntime",
      "symbolId": "lib/custom-resource-provider/custom-resource-provider:CustomResourceProviderRuntime"
    },
    "@aws-cdk/core.DefaultStackSynthesizer": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.StackSynthesizer",
      "docs": {
        "remarks": "This synthesizer:\n\n- Supports cross-account deployments (the CLI can have credentials to one\n  account, and you can still deploy to another account by assuming roles with\n  well-known names in the other account).\n- Supports the **CDK Pipelines** library.\n\nRequires the environment to have been bootstrapped with Bootstrap Stack V2\n(also known as \"modern bootstrap stack\"). The synthesizer adds a version\ncheck to the template, to make sure the bootstrap stack is recent enough\nto support all features expected by this synthesizer.",
        "stability": "stable",
        "summary": "Uses conventionally named roles and asset storage locations."
      },
      "fqn": "@aws-cdk/core.DefaultStackSynthesizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stack-synthesizers/default-synthesizer.ts",
          "line": 304
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.DefaultStackSynthesizerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IReusableStackSynthesizer",
        "@aws-cdk/core.IBoundStackSynthesizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/default-synthesizer.ts",
        "line": 230
      },
      "methods": [
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a Docker Image Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 382
          },
          "name": "addDockerImageAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a File Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 368
          },
          "name": "addFileAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Must be called before any of the other methods are called.",
            "stability": "stable",
            "summary": "Bind to the stack this environment is going to be used on."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 346
          },
          "name": "bind",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method may be called more than once on the same object.",
            "stability": "stable",
            "summary": "Produce a bound Stack Synthesizer for the given stack."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 332
          },
          "name": "reusableBind",
          "overrides": "@aws-cdk/core.IReusableStackSynthesizer",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IBoundStackSynthesizer"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the associated stack to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 415
          },
          "name": "synthesize",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the stack template to the given session, passing the configured lookup role ARN."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 399
          },
          "name": "synthesizeStackTemplate",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "DefaultStackSynthesizer",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default bootstrap stack version SSM parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 288
          },
          "name": "DEFAULT_BOOTSTRAP_STACK_VERSION_SSM_PARAMETER",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default CloudFormation role ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 239
          },
          "name": "DEFAULT_CLOUDFORMATION_ROLE_ARN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default deploy role ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 244
          },
          "name": "DEFAULT_DEPLOY_ROLE_ARN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default Docker asset prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 283
          },
          "name": "DEFAULT_DOCKER_ASSET_PREFIX",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the CloudFormation Export with the asset key name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 274
          },
          "name": "DEFAULT_FILE_ASSET_KEY_ARN_EXPORT_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default file asset prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 279
          },
          "name": "DEFAULT_FILE_ASSET_PREFIX",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default asset publishing role ARN for file (S3) assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 249
          },
          "name": "DEFAULT_FILE_ASSET_PUBLISHING_ROLE_ARN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default file assets bucket name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 269
          },
          "name": "DEFAULT_FILE_ASSETS_BUCKET_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default asset publishing role ARN for image (ECR) assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 254
          },
          "name": "DEFAULT_IMAGE_ASSET_PUBLISHING_ROLE_ARN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default image assets repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 264
          },
          "name": "DEFAULT_IMAGE_ASSETS_REPOSITORY_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default lookup role ARN for missing values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 259
          },
          "name": "DEFAULT_LOOKUP_ROLE_ARN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Default ARN qualifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 234
          },
          "name": "DEFAULT_QUALIFIER",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the ARN of the CFN execution Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 465
          },
          "name": "cloudFormationExecutionRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the ARN of the deploy Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 455
          },
          "name": "deployRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The qualifier used to bootstrap this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 342
          },
          "name": "bootstrapQualifier",
          "optional": true,
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "Use `boundStack` instead.",
            "stability": "deprecated",
            "summary": "Return the currently bound stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 408
          },
          "name": "stack",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/default-synthesizer:DefaultStackSynthesizer"
    },
    "@aws-cdk/core.DefaultStackSynthesizerProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration properties for DefaultStackSynthesizer."
      },
      "fqn": "@aws-cdk/core.DefaultStackSynthesizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/default-synthesizer.ts",
        "line": 28
      },
      "name": "DefaultStackSynthesizerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_BOOTSTRAP_STACK_VERSION_SSM_PARAMETER",
            "remarks": "The placeholder `${Qualifier}` will be replaced with the value of qualifier.",
            "stability": "stable",
            "summary": "Bootstrap stack version SSM parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 212
          },
          "name": "bootstrapStackVersionSsmParameter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- DefaultStackSynthesizer.DEFAULT_FILE_ASSET_PREFIX",
            "stability": "stable",
            "summary": "bucketPrefix to use while storing S3 Assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 193
          },
          "name": "bucketPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_CLOUDFORMATION_ROLE_ARN",
            "remarks": "You must supply this if you have given a non-standard name to the execution role.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "The role CloudFormation will assume when deploying the Stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 152
          },
          "name": "cloudFormationExecutionRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_DEPLOY_ROLE_ARN",
            "remarks": "You must supply this if you have given a non-standard name to the publishing role.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "The role to assume to initiate a deployment in this environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 139
          },
          "name": "deployRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external ID",
            "stability": "stable",
            "summary": "External ID to use when assuming role for cloudformation deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 126
          },
          "name": "deployRoleExternalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- DefaultStackSynthesizer.DEFAULT_DOCKER_ASSET_PREFIX",
            "remarks": "This does not add any separators - the source hash will be appended to\nthis string directly.",
            "stability": "stable",
            "summary": "A prefix to use while tagging and uploading Docker images to ECR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 203
          },
          "name": "dockerTagPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_FILE_ASSET_KEY_ARN_EXPORT_NAME",
            "deprecated": "This property is not used anymore",
            "remarks": "You must supply this if you have given a non-standard name to the KMS key export\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "deprecated",
            "summary": "Name of the CloudFormation Export with the asset key name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 166
          },
          "name": "fileAssetKeyArnExportName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external ID",
            "stability": "stable",
            "summary": "External ID to use when assuming role for file asset publishing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 73
          },
          "name": "fileAssetPublishingExternalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_FILE_ASSET_PUBLISHING_ROLE_ARN",
            "remarks": "You must supply this if you have given a non-standard name to the publishing role.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "The role to use to publish file assets to the S3 bucket in this environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 66
          },
          "name": "fileAssetPublishingRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_FILE_ASSETS_BUCKET_NAME",
            "remarks": "You must supply this if you have given a non-standard name to the staging bucket.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "Name of the S3 bucket to hold file assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 40
          },
          "name": "fileAssetsBucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This generally should be left set to `true`, unless you explicitly\nwant to be able to deploy to an unbootstrapped environment.",
            "stability": "stable",
            "summary": "Whether to add a Rule to the stack template verifying the bootstrap stack version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 186
          },
          "name": "generateBootstrapVersionRule",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external ID",
            "stability": "stable",
            "summary": "External ID to use when assuming role for image asset publishing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 119
          },
          "name": "imageAssetPublishingExternalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_IMAGE_ASSET_PUBLISHING_ROLE_ARN",
            "remarks": "You must supply this if you have given a non-standard name to the publishing role.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "The role to use to publish image assets to the ECR repository in this environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 86
          },
          "name": "imageAssetPublishingRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultStackSynthesizer.DEFAULT_IMAGE_ASSETS_REPOSITORY_NAME",
            "remarks": "You must supply this if you have given a non-standard name to the ECR repository.\n\nThe placeholders `${Qualifier}`, `${AWS::AccountId}` and `${AWS::Region}` will\nbe replaced with the values of qualifier and the stack's account and region,\nrespectively.",
            "stability": "stable",
            "summary": "Name of the ECR repository to hold Docker Image assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 53
          },
          "name": "imageAssetsRepositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The role to use to look up values from the target AWS account during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 93
          },
          "name": "lookupRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external ID",
            "stability": "stable",
            "summary": "External ID to use when assuming lookup role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 100
          },
          "name": "lookupRoleExternalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Value of context key '@aws-cdk/core:bootstrapQualifier' if set, otherwise `DefaultStackSynthesizer.DEFAULT_QUALIFIER`",
            "remarks": "You can use this and leave the other naming properties empty if you have deployed\nthe bootstrap environment with standard names but only different qualifiers.",
            "stability": "stable",
            "summary": "Qualifier to disambiguate multiple environments in the same account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 176
          },
          "name": "qualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Use the lookup role when performing a `cdk diff`. If set to `false`, the\n`deploy role` credentials will be used to perform a `cdk diff`.\n\nRequires bootstrap stack version 8.",
            "stability": "stable",
            "summary": "Use the bootstrapped lookup role for (read-only) stack operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/default-synthesizer.ts",
            "line": 112
          },
          "name": "useLookupRoleForStackOperations",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/default-synthesizer:DefaultStackSynthesizerProps"
    },
    "@aws-cdk/core.DefaultTokenResolver": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Default resolver implementation."
      },
      "fqn": "@aws-cdk/core.DefaultTokenResolver",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resolvable.ts",
          "line": 145
        },
        "parameters": [
          {
            "name": "concat",
            "type": {
              "fqn": "@aws-cdk/core.IFragmentConcatenator"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.ITokenResolver"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 144
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Resolve a tokenized list."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 180
          },
          "name": "resolveList",
          "overrides": "@aws-cdk/core.ITokenResolver",
          "parameters": [
            {
              "name": "xs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Resolve string fragments to Tokens."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 176
          },
          "name": "resolveString",
          "overrides": "@aws-cdk/core.ITokenResolver",
          "parameters": [
            {
              "name": "fragments",
              "type": {
                "fqn": "@aws-cdk/core.TokenizedStringFragments"
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "remarks": "Resolve the Token, recurse into whatever it returns,\nthen finally post-process it.",
            "stability": "stable",
            "summary": "Default Token resolution."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 154
          },
          "name": "resolveToken",
          "overrides": "@aws-cdk/core.ITokenResolver",
          "parameters": [
            {
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.IResolvable"
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            },
            {
              "name": "postProcessor",
              "type": {
                "fqn": "@aws-cdk/core.IPostProcessor"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "DefaultTokenResolver",
      "symbolId": "lib/resolvable:DefaultTokenResolver"
    },
    "@aws-cdk/core.DockerBuildOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Docker build options."
      },
      "fqn": "@aws-cdk/core.DockerBuildOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 543
      },
      "name": "DockerBuildOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no build args",
            "stability": "stable",
            "summary": "Build args."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 549
          },
          "name": "buildArgs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "`Dockerfile`",
            "stability": "stable",
            "summary": "Name of the Dockerfile, must relative to the docker build path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 556
          },
          "name": "file",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no platform specified",
            "remarks": "Example value: `linux/amd64`",
            "stability": "stable",
            "summary": "Set platform if server is multi-platform capable. _Requires Docker Engine API v1.38+_."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 565
          },
          "name": "platform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Build all stages defined in the Dockerfile",
            "remarks": "Example value: `build-env`",
            "stability": "stable",
            "summary": "Set build target for multi-stage container builds. Any stage defined afterwards will be ignored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 574
          },
          "name": "targetStage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/bundling:DockerBuildOptions"
    },
    "@aws-cdk/core.DockerBuildSecret": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Docker BuildKit must be enabled to use build secrets.",
        "see": "https://docs.docker.com/build/buildkit/",
        "stability": "stable",
        "summary": "Methods to build Docker CLI arguments for builds using secrets."
      },
      "fqn": "@aws-cdk/core.DockerBuildSecret",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "returns": "The latter half required for `--secret`",
            "stability": "stable",
            "summary": "A Docker build secret from a file source."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 21
          },
          "name": "fromSrc",
          "parameters": [
            {
              "docs": {
                "summary": "The path to the source file, relative to the build directory."
              },
              "name": "src",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "DockerBuildSecret",
      "symbolId": "lib/bundling:DockerBuildSecret"
    },
    "@aws-cdk/core.DockerCacheOption": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring the Docker cache backend."
      },
      "fqn": "@aws-cdk/core.DockerCacheOption",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 366
      },
      "name": "DockerCacheOption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- unspecified",
            "example": "'registry'",
            "remarks": "Refer to https://docs.docker.com/build/cache/backends/ for full list of backends.",
            "stability": "stable",
            "summary": "The type of cache to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 374
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{} No options provided",
            "example": "{ ref: `12345678.dkr.ecr.us-west-2.amazonaws.com/cache:${branch}`, mode: \"max\" }",
            "remarks": "Refer to https://docs.docker.com/build/cache/backends/ for cache backend configuration.",
            "stability": "stable",
            "summary": "Any parameters to pass into the docker cache backend configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 382
          },
          "name": "params",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/assets:DockerCacheOption"
    },
    "@aws-cdk/core.DockerIgnoreStrategy": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.IgnoreStrategy",
      "docs": {
        "stability": "stable",
        "summary": "Ignores file paths based on the [`.dockerignore specification`](https://docs.docker.com/engine/reference/builder/#dockerignore-file)."
      },
      "fqn": "@aws-cdk/core.DockerIgnoreStrategy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/fs/ignore.ts",
          "line": 189
        },
        "parameters": [
          {
            "name": "absoluteRootPath",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "patterns",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fs/ignore.ts",
        "line": 185
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "params": "pattern the pattern to add"
            },
            "stability": "stable",
            "summary": "Adds another pattern."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 204
          },
          "name": "add",
          "overrides": "@aws-cdk/core.IgnoreStrategy",
          "parameters": [
            {
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "`true` if the file should be ignored",
            "stability": "stable",
            "summary": "Determines whether a given file path should be ignored or not."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 214
          },
          "name": "ignores",
          "overrides": "@aws-cdk/core.IgnoreStrategy",
          "parameters": [
            {
              "docs": {
                "summary": "absolute file path to be assessed against the pattern."
              },
              "name": "absoluteFilePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "DockerIgnoreStrategy",
      "symbolId": "lib/fs/ignore:DockerIgnoreStrategy"
    },
    "@aws-cdk/core.DockerImage": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.BundlingDockerImage",
      "docs": {
        "stability": "stable",
        "summary": "A Docker image."
      },
      "fqn": "@aws-cdk/core.DockerImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/bundling.ts",
          "line": 364
        },
        "parameters": [
          {
            "docs": {
              "summary": "The Docker image."
            },
            "name": "image",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "_imageHash",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 313
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Builds a Docker image."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 320
          },
          "name": "fromBuild",
          "parameters": [
            {
              "docs": {
                "summary": "The path to the directory containing the Docker file."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Docker build options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.DockerBuildOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference an image on DockerHub or another online registry."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 357
          },
          "name": "fromRegistry",
          "overrides": "@aws-cdk/core.BundlingDockerImage",
          "parameters": [
            {
              "docs": {
                "summary": "the image name."
              },
              "name": "image",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If `outputPath` is omitted the destination path is a temporary directory.",
            "returns": "the destination path",
            "stability": "stable",
            "summary": "Copies a file or directory out of the Docker image to the local filesystem."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 417
          },
          "name": "cp",
          "overrides": "@aws-cdk/core.BundlingDockerImage",
          "parameters": [
            {
              "docs": {
                "summary": "the path in the Docker image."
              },
              "name": "imagePath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the destination path for the copy operation."
              },
              "name": "outputPath",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Runs a Docker image."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 396
          },
          "name": "run",
          "overrides": "@aws-cdk/core.BundlingDockerImage",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.DockerRunOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "The overridden image name if set or image hash name in that order",
            "stability": "stable",
            "summary": "Provides a stable representation of this image for JSON serialization."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 381
          },
          "name": "toJSON",
          "overrides": "@aws-cdk/core.BundlingDockerImage",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "DockerImage",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 362
          },
          "name": "image",
          "overrides": "@aws-cdk/core.BundlingDockerImage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/bundling:DockerImage"
    },
    "@aws-cdk/core.DockerImageAssetLocation": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "This is where the image can be\nconsumed at runtime.",
        "stability": "stable",
        "summary": "The location of the published docker image."
      },
      "fqn": "@aws-cdk/core.DockerImageAssetLocation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 345
      },
      "name": "DockerImageAssetLocation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The URI of the image in Amazon ECR (including a tag)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 349
          },
          "name": "imageUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the ECR repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 354
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the hash of the asset, or the `dockerTagPrefix` concatenated with the asset hash if a `dockerTagPrefix` is specified in the stack synthesizer",
            "stability": "stable",
            "summary": "The tag of the image in Amazon ECR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 360
          },
          "name": "imageTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assets:DockerImageAssetLocation"
    },
    "@aws-cdk/core.DockerImageAssetSource": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.DockerImageAssetSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 136
      },
      "name": "DockerImageAssetSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This hash is used\nthroughout the system to identify this image and avoid duplicate work\nin case the source did not change.\n\nNOTE: this means that if you wish to update your docker image, you\nmust make a modification to the source (e.g. add some metadata to your Dockerfile).",
            "stability": "stable",
            "summary": "The hash of the contents of the docker build context."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 145
          },
          "name": "sourceHash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Exactly one of `directoryName` and `executable` is required",
            "stability": "stable",
            "summary": "The directory where the Dockerfile is stored, must be relative to the cloud assembly root."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 162
          },
          "name": "directoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build args are passed",
            "remarks": "Since Docker build arguments are resolved before deployment, keys and\nvalues cannot refer to unresolved tokens (such as `lambda.functionArn` or\n`queue.queueUrl`).\n\nOnly allowed when `directoryName` is specified.",
            "stability": "stable",
            "summary": "Build args to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 175
          },
          "name": "dockerBuildArgs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build secrets are passed",
            "remarks": "Since Docker build secrets are resolved before deployment, keys and\nvalues cannot refer to unresolved tokens (such as `lambda.functionArn` or\n`queue.queueUrl`).\n\nOnly allowed when `directoryName` is specified.",
            "stability": "stable",
            "summary": "Build secrets to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 188
          },
          "name": "dockerBuildSecrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no target",
            "remarks": "Only allowed when `directoryName` is specified.",
            "stability": "stable",
            "summary": "Docker target to build to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 197
          },
          "name": "dockerBuildTarget",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no cache from args are passed",
            "stability": "stable",
            "summary": "Cache from options to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 249
          },
          "name": "dockerCacheFrom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.DockerCacheOption"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no cache to args are passed",
            "stability": "stable",
            "summary": "Cache to options to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 255
          },
          "name": "dockerCacheTo",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.DockerCacheOption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no file",
            "remarks": "Only allowed when `directoryName` is specified.",
            "stability": "stable",
            "summary": "Path to the Dockerfile (relative to the directory)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 206
          },
          "name": "dockerFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build args are passed",
            "stability": "stable",
            "summary": "Outputs to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 243
          },
          "name": "dockerOutputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Exactly one of `directoryName` and `executable` is required",
            "remarks": "The command should produce the name of a local Docker image on `stdout`.",
            "stability": "stable",
            "summary": "An external command that will produce the packaged asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 154
          },
          "name": "executable",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no networking mode specified",
            "remarks": "Specify this property to build images on a specific networking mode.",
            "stability": "stable",
            "summary": "Networking mode for the RUN commands during build. _Requires Docker Engine API v1.25+_."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 227
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no platform specified (the current machine architecture will be used)",
            "remarks": "Specify this property to build images on a specific platform.",
            "stability": "stable",
            "summary": "Platform to build for. _Requires Docker Buildx_."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 236
          },
          "name": "platform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically derived from the asset's ID.",
            "deprecated": "repository name should be specified at the environment-level and not at the image level",
            "remarks": "Specify this property if you need to statically address the image, e.g.\nfrom a Kubernetes Pod. Note, this is only the repository name, without the\nregistry and the tag parts.",
            "stability": "deprecated",
            "summary": "ECR repository name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 218
          },
          "name": "repositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assets:DockerImageAssetSource"
    },
    "@aws-cdk/core.DockerRunOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Docker run options."
      },
      "fqn": "@aws-cdk/core.DockerRunOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 474
      },
      "name": "DockerRunOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- run the command defined in the image",
            "stability": "stable",
            "summary": "The command to run in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 487
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- run the entrypoint defined in the image",
            "stability": "stable",
            "summary": "The entrypoint to run in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 480
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no environment variables.",
            "stability": "stable",
            "summary": "The environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 508
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no networking options",
            "stability": "stable",
            "summary": "Docker [Networking options](https://docs.docker.com/engine/reference/commandline/run/#connect-a-container-to-a-network---network)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 537
          },
          "name": "network",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no security options",
            "stability": "stable",
            "summary": "[Security configuration](https://docs.docker.com/engine/reference/run/#security-configuration) when running the docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 530
          },
          "name": "securityOpt",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- root or image default",
            "stability": "stable",
            "summary": "The user to use when running the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 522
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no volumes are mounted",
            "stability": "stable",
            "summary": "Docker volumes to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 494
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.DockerVolume"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no containers are specified to mount volumes from",
            "see": "https://docs.docker.com/engine/reference/commandline/run/#mount-volumes-from-container---volumes-from",
            "stability": "stable",
            "summary": "Where to mount the specified volumes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 501
          },
          "name": "volumesFrom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- image default",
            "stability": "stable",
            "summary": "Working directory inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 515
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/bundling:DockerRunOptions"
    },
    "@aws-cdk/core.DockerVolume": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A Docker volume."
      },
      "fqn": "@aws-cdk/core.DockerVolume",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 433
      },
      "name": "DockerVolume",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path where the file or directory is mounted in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 442
          },
          "name": "containerPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path to the file or directory on the host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 437
          },
          "name": "hostPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DockerConsistency.DELEGATED",
            "remarks": "Only applicable for macOS",
            "see": "https://docs.docker.com/storage/bind-mounts/#configure-mount-consistency-for-macos",
            "stability": "stable",
            "summary": "Mount consistency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 450
          },
          "name": "consistency",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.DockerVolumeConsistency"
          }
        }
      ],
      "symbolId": "lib/bundling:DockerVolume"
    },
    "@aws-cdk/core.DockerVolumeConsistency": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Only valid on macOS due to the way file storage works on Mac",
        "stability": "stable",
        "summary": "Supported Docker volume consistency types."
      },
      "fqn": "@aws-cdk/core.DockerVolumeConsistency",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 456
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Read/write operations inside the Docker container are applied immediately on the mounted host machine volumes."
          },
          "name": "CONSISTENT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Read/write operations on mounted Docker volumes are first written inside the container and then synchronized to the host machine."
          },
          "name": "DELEGATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Read/write operations on mounted Docker volumes are first applied on the host machine and then synchronized to the container."
          },
          "name": "CACHED"
        }
      ],
      "name": "DockerVolumeConsistency",
      "symbolId": "lib/bundling:DockerVolumeConsistency"
    },
    "@aws-cdk/core.Duration": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "The amount can be specified either as a literal value (e.g: `10`) which\ncannot be negative, or as an unresolved number token.\n\nWhen the amount is passed as a token, unit conversion is not possible.",
        "stability": "stable",
        "summary": "Represents a length of time."
      },
      "fqn": "@aws-cdk/core.Duration",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/duration.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Days.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of days."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 58
          },
          "name": "days",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Days the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Hours.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of hours."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 48
          },
          "name": "hours",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Hours the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` ms.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of milliseconds."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 18
          },
          "name": "millis",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Milliseconds the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Minutes.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of minutes."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 38
          },
          "name": "minutes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Minutes the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "the parsed `Duration`.",
            "see": "https://www.iso.org/standard/70907.html",
            "stability": "stable",
            "summary": "Parse a period formatted according to the ISO 8601 standard."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 69
          },
          "name": "parse",
          "parameters": [
            {
              "docs": {
                "summary": "an ISO-formatted duration to be parsed."
              },
              "name": "duration",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Seconds.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of seconds."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 28
          },
          "name": "seconds",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Seconds the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns stringified number of duration."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 278
          },
          "name": "formatTokenToNumber",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Checks if duration is a token or a resolvable object."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 264
          },
          "name": "isUnresolved",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Substract two Durations together."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 115
          },
          "name": "minus",
          "parameters": [
            {
              "name": "rhs",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add two Durations together."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 106
          },
          "name": "plus",
          "parameters": [
            {
              "name": "rhs",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Duration"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Days.",
            "stability": "stable",
            "summary": "Return the total number of days in this Duration."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 162
          },
          "name": "toDays",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Hours.",
            "stability": "stable",
            "summary": "Return the total number of hours in this Duration."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 153
          },
          "name": "toHours",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Turn this duration into a human-readable string."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 203
          },
          "name": "toHumanString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "a string starting with 'P' describing the period",
            "see": "https://www.iso.org/standard/70907.html",
            "stability": "stable",
            "summary": "Return an ISO 8601 representation of this period."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 172
          },
          "name": "toIsoString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "deprecated": "Use `toIsoString()` instead.",
            "returns": "a string starting with 'P' describing the period",
            "see": "https://www.iso.org/standard/70907.html",
            "stability": "deprecated",
            "summary": "Return an ISO 8601 representation of this period."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 196
          },
          "name": "toISOString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Milliseconds.",
            "stability": "stable",
            "summary": "Return the total number of milliseconds in this Duration."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 126
          },
          "name": "toMilliseconds",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Minutes.",
            "stability": "stable",
            "summary": "Return the total number of minutes in this Duration."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 144
          },
          "name": "toMinutes",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Seconds.",
            "stability": "stable",
            "summary": "Return the total number of seconds in this Duration."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 135
          },
          "name": "toSeconds",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "remarks": "This is is never the right function to use when you want to use the `Duration`\nobject in a template. Use `toSeconds()`, `toMinutes()`, `toDays()`, etc. instead.",
            "stability": "stable",
            "summary": "Returns a string representation of this `Duration`."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 228
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns unit of the duration."
          },
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 271
          },
          "name": "unitLabel",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Duration",
      "symbolId": "lib/duration:Duration"
    },
    "@aws-cdk/core.EncodingOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to string encodings."
      },
      "fqn": "@aws-cdk/core.EncodingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/token.ts",
        "line": 312
      },
      "name": "EncodingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A hint for the Token's purpose when stringifying it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 316
          },
          "name": "displayHint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/token:EncodingOptions"
    },
    "@aws-cdk/core.Environment": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The deployment environment for a stack."
      },
      "fqn": "@aws-cdk/core.Environment",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/environment.ts",
        "line": 4
      },
      "name": "Environment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Aws.ACCOUNT_ID which means that the stack will be account-agnostic.",
            "remarks": "This can be either a concrete value such as `585191031104` or `Aws.ACCOUNT_ID` which\nindicates that account ID will only be determined during deployment (it\nwill resolve to the CloudFormation intrinsic `{\"Ref\":\"AWS::AccountId\"}`).\nNote that certain features, such as cross-stack references and\nenvironmental context providers require concrete region information and\nwill cause this stack to emit synthesis errors.",
            "stability": "stable",
            "summary": "The AWS account ID for this environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 17
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Aws.REGION which means that the stack will be region-agnostic.",
            "remarks": "This can be either a concrete value such as `eu-west-2` or `Aws.REGION`\nwhich indicates that account ID will only be determined during deployment\n(it will resolve to the CloudFormation intrinsic `{\"Ref\":\"AWS::Region\"}`).\nNote that certain features, such as cross-stack references and\nenvironmental context providers require concrete region information and\nwill cause this stack to emit synthesis errors.",
            "stability": "stable",
            "summary": "The AWS region for this environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 31
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/environment:Environment"
    },
    "@aws-cdk/core.Expiration": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "The amount can be specified either as a Date object, timestamp, Duration or string.",
        "stability": "stable",
        "summary": "Represents a date of expiration."
      },
      "fqn": "@aws-cdk/core.Expiration",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/expiration.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Expire once the specified duration has passed since deployment time."
          },
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 24
          },
          "name": "after",
          "parameters": [
            {
              "docs": {
                "summary": "the duration to wait before expiring."
              },
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Expiration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Expire at the specified date."
          },
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 12
          },
          "name": "atDate",
          "parameters": [
            {
              "docs": {
                "summary": "date to expire at."
              },
              "name": "d",
              "type": {
                "primitive": "date"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Expiration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Expire at the specified timestamp."
          },
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 18
          },
          "name": "atTimestamp",
          "parameters": [
            {
              "docs": {
                "summary": "timestamp in unix milliseconds."
              },
              "name": "t",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Expiration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Expire at specified date, represented as a string."
          },
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 31
          },
          "name": "fromString",
          "parameters": [
            {
              "docs": {
                "summary": "the string that represents date to expire at."
              },
              "name": "s",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Expiration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Check if Expiration expires after input."
          },
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 60
          },
          "name": "isAfter",
          "parameters": [
            {
              "docs": {
                "summary": "the duration to check against."
              },
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Check if Expiration expires before input."
          },
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 52
          },
          "name": "isBefore",
          "parameters": [
            {
              "docs": {
                "summary": "the duration to check against."
              },
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Expiration Value in a formatted Unix Epoch Time in seconds."
          },
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 45
          },
          "name": "toEpoch",
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        }
      ],
      "name": "Expiration",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Expiration value as a Date object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/expiration.ts",
            "line": 36
          },
          "name": "date",
          "type": {
            "primitive": "date"
          }
        }
      ],
      "symbolId": "lib/expiration:Expiration"
    },
    "@aws-cdk/core.ExportValueOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the `stack.exportValue()` method."
      },
      "fqn": "@aws-cdk/core.ExportValueOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack.ts",
        "line": 1690
      },
      "name": "ExportValueOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A name is automatically chosen",
            "stability": "stable",
            "summary": "The name of the export to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1696
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack:ExportValueOptions"
    },
    "@aws-cdk/core.FeatureFlags": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "The list of flags are available in the\n`@aws-cdk/cx-api` module.\n\nThe state of the flag for this application is stored as a CDK context variable.",
        "stability": "stable",
        "summary": "Features that are implemented behind a flag in order to preserve backwards compatibility for existing apps."
      },
      "fqn": "@aws-cdk/core.FeatureFlags",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/feature-flags.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Inspect feature flags on the construct node's context."
          },
          "locationInModule": {
            "filename": "lib/feature-flags.ts",
            "line": 15
          },
          "name": "of",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FeatureFlags"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If configured, the flag is present in\nthe construct node context. Falls back to the defaults defined in the `cx-api`\nmodule.",
            "stability": "stable",
            "summary": "Check whether a feature flag is enabled."
          },
          "locationInModule": {
            "filename": "lib/feature-flags.ts",
            "line": 26
          },
          "name": "isEnabled",
          "parameters": [
            {
              "name": "featureFlag",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "FeatureFlags",
      "symbolId": "lib/feature-flags:FeatureFlags"
    },
    "@aws-cdk/core.FileAssetLocation": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "This is where the asset\ncan be consumed at runtime.",
        "stability": "stable",
        "summary": "The location of the published file asset."
      },
      "fqn": "@aws-cdk/core.FileAssetLocation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 280
      },
      "name": "FileAssetLocation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 284
          },
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This value suitable for inclusion in a CloudFormation template, and\nmay be an encoded token.\n\nExample value: `https://s3-us-east-1.amazonaws.com/mybucket/myobject`",
            "stability": "stable",
            "summary": "The HTTP URL of this asset on Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 306
          },
          "name": "httpUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon S3 object key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 289
          },
          "name": "objectKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This value suitable for inclusion in a CloudFormation template, and\nmay be an encoded token.\n\nExample value: `s3://mybucket/myobject`",
            "stability": "stable",
            "summary": "The S3 URL of this asset on Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 316
          },
          "name": "s3ObjectUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Asset bucket is not encrypted, or decryption permissions are\ndefined by a Key Policy.",
            "remarks": "The CDK bootstrap stack comes with a key policy that does not require\nsetting this property, so you only need to set this property if you\nhave customized the bootstrap stack to require it.",
            "stability": "stable",
            "summary": "The ARN of the KMS key used to encrypt the file asset bucket, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 328
          },
          "name": "kmsKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This feature cannot be used",
            "remarks": "If there are placeholders in the S3 URL, they will be returned un-replaced\nand un-evaluated.",
            "stability": "stable",
            "summary": "Like `s3ObjectUrl`, but not suitable for CloudFormation consumption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 338
          },
          "name": "s3ObjectUrlWithPlaceholders",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- value specified in `httpUrl` is used.",
            "deprecated": "use `httpUrl`",
            "stability": "deprecated",
            "summary": "The HTTP URL of this asset on Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 296
          },
          "name": "s3Url",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assets:FileAssetLocation"
    },
    "@aws-cdk/core.FileAssetPackaging": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Packaging modes for file assets."
      },
      "fqn": "@aws-cdk/core.FileAssetPackaging",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 262
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The asset source path points to a directory, which should be archived using zip and and then uploaded to Amazon S3."
          },
          "name": "ZIP_DIRECTORY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The asset source path points to a single file, which should be uploaded to Amazon S3."
          },
          "name": "FILE"
        }
      ],
      "name": "FileAssetPackaging",
      "symbolId": "lib/assets:FileAssetPackaging"
    },
    "@aws-cdk/core.FileAssetSource": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the source for a file asset."
      },
      "fqn": "@aws-cdk/core.FileAssetSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 102
      },
      "name": "FileAssetSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This hash is used to uniquely identify this\nasset throughout the system. If this value doesn't change, the asset will\nnot be rebuilt or republished.",
            "stability": "stable",
            "summary": "A hash on the content source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 108
          },
          "name": "sourceHash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Exactly one of `directory` and `executable` is required",
            "remarks": "The command should produce the location of a ZIP file on `stdout`.",
            "stability": "stable",
            "summary": "An external command that will produce the packaged asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 117
          },
          "name": "executable",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Exactly one of `directory` and `executable` is required",
            "remarks": "This can be a path to a file or a directory, depending on the\npackaging type.",
            "stability": "stable",
            "summary": "The path, relative to the root of the cloud assembly, in which this asset source resides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 126
          },
          "name": "fileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Required if `fileName` is specified.",
            "stability": "stable",
            "summary": "Which type of packaging to perform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 133
          },
          "name": "packaging",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.FileAssetPackaging"
          }
        }
      ],
      "symbolId": "lib/assets:FileAssetSource"
    },
    "@aws-cdk/core.FileCopyOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options applied when copying directories into the staging location."
      },
      "fqn": "@aws-cdk/core.FileCopyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fs/options.ts",
        "line": 93
      },
      "name": "FileCopyOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- nothing is excluded",
            "remarks": "See `ignoreMode` to set the matching behavior.\nHas no effect on Assets bundled using the `bundling` property.",
            "stability": "stable",
            "summary": "File paths matching the patterns will be excluded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 68
          },
          "name": "exclude",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SymlinkFollowMode.NEVER",
            "stability": "stable",
            "summary": "A strategy for how to handle symlinks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 99
          },
          "name": "followSymlinks",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SymlinkFollowMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "IgnoreMode.GLOB",
            "stability": "stable",
            "summary": "The ignore behavior to use for `exclude` patterns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 75
          },
          "name": "ignoreMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.IgnoreMode"
          }
        }
      ],
      "symbolId": "lib/fs/options:FileCopyOptions"
    },
    "@aws-cdk/core.FileFingerprintOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options related to calculating source hash."
      },
      "fqn": "@aws-cdk/core.FileFingerprintOptions",
      "interfaces": [
        "@aws-cdk/core.FileCopyOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fs/options.ts",
        "line": 121
      },
      "name": "FileFingerprintOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- hash is only based on source content",
            "stability": "stable",
            "summary": "Extra information to encode into the fingerprint (e.g. build instructions and other inputs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 109
          },
          "name": "extraHash",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/fs/options:FileFingerprintOptions"
    },
    "@aws-cdk/core.FileSystem": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "File system utilities."
      },
      "fqn": "@aws-cdk/core.FileSystem",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fs/index.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Copies an entire directory structure."
          },
          "locationInModule": {
            "filename": "lib/fs/index.ts",
            "line": 22
          },
          "name": "copyDirectory",
          "parameters": [
            {
              "docs": {
                "summary": "Source directory."
              },
              "name": "srcDir",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Destination directory."
              },
              "name": "destDir",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.CopyOptions"
              }
            },
            {
              "docs": {
                "summary": "Root directory to calculate exclusions from."
              },
              "name": "rootDir",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "remarks": "The fingerprint will also include:\n1. An extra string if defined in `options.extra`.\n2. The set of exclude patterns, if defined in `options.exclude`\n3. The symlink follow mode value.",
            "stability": "stable",
            "summary": "Produces fingerprint based on the contents of a single file or an entire directory tree."
          },
          "locationInModule": {
            "filename": "lib/fs/index.ts",
            "line": 37
          },
          "name": "fingerprint",
          "parameters": [
            {
              "docs": {
                "summary": "The directory or file to fingerprint."
              },
              "name": "fileOrDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Fingerprinting options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.FingerprintOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Checks whether a directory is empty."
          },
          "locationInModule": {
            "filename": "lib/fs/index.ts",
            "line": 46
          },
          "name": "isEmpty",
          "parameters": [
            {
              "docs": {
                "summary": "The directory to check."
              },
              "name": "dir",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a unique temporary directory in the **system temp directory**."
          },
          "locationInModule": {
            "filename": "lib/fs/index.ts",
            "line": 67
          },
          "name": "mkdtemp",
          "parameters": [
            {
              "docs": {
                "remarks": "Six random characters\nwill be generated and appended behind this prefix.",
                "summary": "A prefix for the directory name."
              },
              "name": "prefix",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "FileSystem",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The real path of the system temp directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/index.ts",
            "line": 53
          },
          "name": "tmpdir",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/fs/index:FileSystem"
    },
    "@aws-cdk/core.FingerprintOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options related to calculating source hash."
      },
      "fqn": "@aws-cdk/core.FingerprintOptions",
      "interfaces": [
        "@aws-cdk/core.CopyOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fs/options.ts",
        "line": 115
      },
      "name": "FingerprintOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- hash is only based on source content",
            "stability": "stable",
            "summary": "Extra information to encode into the fingerprint (e.g. build instructions and other inputs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fs/options.ts",
            "line": 109
          },
          "name": "extraHash",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/fs/options:FingerprintOptions"
    },
    "@aws-cdk/core.Fn": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html",
        "stability": "stable",
        "summary": "CloudFormation intrinsic functions."
      },
      "fqn": "@aws-cdk/core.Fn",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-fn.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "remarks": "This function is typically used to pass encoded data to\nAmazon EC2 instances by way of the UserData property.",
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::Base64`` returns the Base64 representation of the input string."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 165
          },
          "name": "base64",
          "parameters": [
            {
              "docs": {
                "summary": "The string value you want to convert to Base64."
              },
              "name": "data",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::Cidr`` returns the specified Cidr address block."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 176
          },
          "name": "cidr",
          "parameters": [
            {
              "docs": {
                "summary": "The user-specified default Cidr address block."
              },
              "name": "ipBlock",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Count can be 1 to 256.",
                "summary": "The number of subnets' Cidr block wanted."
              },
              "name": "count",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "The digit covered in the subnet."
              },
              "name": "sizeMask",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "``Fn::And`` acts as\nan AND operator. The minimum number of conditions that you can include is\n1.",
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Returns true if all the specified conditions evaluate to true, or returns false if any one of the conditions evaluates to false."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 271
          },
          "name": "conditionAnd",
          "parameters": [
            {
              "docs": {
                "summary": "conditions to AND."
              },
              "name": "conditions",
              "type": {
                "fqn": "@aws-cdk/core.ICfnConditionExpression"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Returns true if a specified string matches at least one value in a list of strings."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 347
          },
          "name": "conditionContains",
          "parameters": [
            {
              "docs": {
                "summary": "A list of strings, such as \"A\", \"B\", \"C\"."
              },
              "name": "listOfStrings",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "A string, such as \"A\", that you want to compare against a list of strings."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Returns true if a specified string matches all values in a list."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 358
          },
          "name": "conditionEachMemberEquals",
          "parameters": [
            {
              "docs": {
                "summary": "A list of strings, such as \"A\", \"B\", \"C\"."
              },
              "name": "listOfStrings",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "A string, such as \"A\", that you want to compare against a list of strings."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Returns true if each member in a list of strings matches at least one value in a second list of strings."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 373
          },
          "name": "conditionEachMemberIn",
          "parameters": [
            {
              "docs": {
                "remarks": "AWS\nCloudFormation checks whether each member in the strings_to_check parameter\nis in the strings_to_match parameter.",
                "summary": "A list of strings, such as \"A\", \"B\", \"C\"."
              },
              "name": "stringsToCheck",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "remarks": "Each member\nin the strings_to_match parameter is compared against the members of the\nstrings_to_check parameter.",
                "summary": "A list of strings, such as \"A\", \"B\", \"C\"."
              },
              "name": "stringsToMatch",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Returns true if the two values are equal\nor false if they aren't.",
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Compares if two values are equal."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 288
          },
          "name": "conditionEquals",
          "parameters": [
            {
              "docs": {
                "summary": "A value of any type that you want to compare."
              },
              "name": "lhs",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "summary": "A value of any type that you want to compare."
              },
              "name": "rhs",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Currently, AWS\nCloudFormation supports the ``Fn::If`` intrinsic function in the metadata\nattribute, update policy attribute, and property values in the Resources\nsection and Outputs sections of a template. You can use the AWS::NoValue\npseudo parameter as a return value to remove the corresponding property.",
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Returns one value if the specified condition evaluates to true and another value if the specified condition evaluates to false."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 307
          },
          "name": "conditionIf",
          "parameters": [
            {
              "docs": {
                "remarks": "Use\nthe condition's name to reference it.",
                "summary": "A reference to a condition in the Conditions section."
              },
              "name": "conditionId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "A value to be returned if the specified condition evaluates to true."
              },
              "name": "valueIfTrue",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "summary": "A value to be returned if the specified condition evaluates to false."
              },
              "name": "valueIfFalse",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "``Fn::Not`` acts as a NOT operator.",
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Returns true for a condition that evaluates to false or returns false for a condition that evaluates to true."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 318
          },
          "name": "conditionNot",
          "parameters": [
            {
              "docs": {
                "summary": "A condition such as ``Fn::Equals`` that evaluates to true or false."
              },
              "name": "condition",
              "type": {
                "fqn": "@aws-cdk/core.ICfnConditionExpression"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "``Fn::Or`` acts\nas an OR operator. The minimum number of conditions that you can include is\n1.",
            "returns": "an FnCondition token",
            "stability": "stable",
            "summary": "Returns true if any one of the specified conditions evaluate to true, or returns false if all of the conditions evaluates to false."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 330
          },
          "name": "conditionOr",
          "parameters": [
            {
              "docs": {
                "summary": "conditions that evaluates to true or false."
              },
              "name": "conditions",
              "type": {
                "fqn": "@aws-cdk/core.ICfnConditionExpression"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ICfnRuleConditionExpression"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::FindInMap`` returns the value corresponding to keys in a two-level map that is declared in the Mappings section."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 238
          },
          "name": "findInMap",
          "parameters": [
            {
              "name": "mapName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "topLevelKey",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secondLevelKey",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "an IResolvable object",
            "stability": "stable",
            "summary": "The ``Fn::GetAtt`` intrinsic function returns the value of an attribute from a resource in the template."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 36
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "summary": "The logical name (also called logical ID) of the resource that contains the attribute that you want."
              },
              "name": "logicalNameOfResource",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "See the resource's reference page for details about the\nattributes available for that resource type.",
                "summary": "The name of the resource-specific attribute whose value you want."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Because customers have access to\ndifferent Availability Zones, the intrinsic function ``Fn::GetAZs`` enables\ntemplate authors to write templates that adapt to the calling user's\naccess. That way you don't have to hard-code a full list of Availability\nZones for a specified region.",
            "returns": "a token represented as a string array",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::GetAZs`` returns an array that lists Availability Zones for a specified region."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 202
          },
          "name": "getAzs",
          "parameters": [
            {
              "docs": {
                "remarks": "You can use the AWS::Region pseudo parameter to specify\nthe region in which the stack is created. Specifying an empty string is\nequivalent to specifying AWS::Region.",
                "summary": "The name of the region for which you want to get the Availability Zones."
              },
              "name": "region",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If you explicitly want a list with an unknown length, call `Fn.split(',',\nFn.importValue(exportName))`. See the documentation of `Fn.split` to read\nmore about the limitations of using lists of unknown length.\n\n`Fn.importListValue(exportName, assumedLength)` is the same as\n`Fn.split(',', Fn.importValue(exportName), assumedLength)`,\nbut easier to read and impossible to forget to pass `assumedLength`.",
            "stability": "stable",
            "summary": "Like `Fn.importValue`, but import a list with a known length."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 229
          },
          "name": "importListValue",
          "parameters": [
            {
              "name": "sharedValueToImport",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "assumedLength",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "delimiter",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "You typically use this function to create\ncross-stack references. In the following example template snippets, Stack A\nexports VPC security group values and Stack B imports them.",
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::ImportValue`` returns the value of an output exported by another stack."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 214
          },
          "name": "importValue",
          "parameters": [
            {
              "docs": {
                "summary": "The stack output value that you want to import."
              },
              "name": "sharedValueToImport",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If a delimiter is the empty\nstring, the set of values are concatenated with no delimiter.",
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::Join`` appends a set of values into a single value, separated by the specified delimiter."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 50
          },
          "name": "join",
          "parameters": [
            {
              "docs": {
                "remarks": "The\ndelimiter will occur between fragments only. It will not terminate the\nfinal value.",
                "summary": "The value you want to occur between fragments."
              },
              "name": "delimiter",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The list of values you want combined."
              },
              "name": "listOfValues",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The intrinsic function `Fn::Length` returns the number of elements within an array or an intrinsic function that returns an array."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 436
          },
          "name": "len",
          "parameters": [
            {
              "docs": {
                "summary": "The array you want to return the number of elements from."
              },
              "name": "array",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Given an url, parse the domain name."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 184
          },
          "name": "parseDomainName",
          "parameters": [
            {
              "docs": {
                "summary": "the url to parse."
              },
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Note that it doesn't validate the logicalName, it mainly serves parameter/resource reference defined in a ``CfnInclude`` template.",
            "stability": "stable",
            "summary": "The ``Ref`` intrinsic function returns the value of the specified parameter or resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 22
          },
          "name": "ref",
          "parameters": [
            {
              "docs": {
                "summary": "The logical name of a parameter/resource for which you want to retrieve its value."
              },
              "name": "logicalName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a token represented as a string array",
            "stability": "stable",
            "summary": "Returns all values for a specified parameter type."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 384
          },
          "name": "refAll",
          "parameters": [
            {
              "docs": {
                "remarks": "For more information, see\nParameters in the AWS CloudFormation User Guide.",
                "summary": "An AWS-specific parameter type, such as AWS::EC2::SecurityGroup::Id or AWS::EC2::VPC::Id."
              },
              "name": "parameterType",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::Select`` returns a single object from a list of objects by index."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 130
          },
          "name": "select",
          "parameters": [
            {
              "docs": {
                "remarks": "This must be a value from zero to N-1, where N represents the number of elements in the array.",
                "summary": "The index of the object to retrieve."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "remarks": "This list must not be null, nor can it have null entries.",
                "summary": "The list of objects to select from."
              },
              "name": "array",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Specify the location of splits with a delimiter such as ',' (a comma).\nRenders to the `Fn::Split` intrinsic function.\n\nLists with unknown lengths (default)\n-------------------------------------\n\nSince this function is used to work with deploy-time values, if `assumedLength`\nis not given the CDK cannot know the length of the resulting list at synthesis time.\nThis brings the following restrictions:\n\n- You must use `Fn.select(i, list)` to pick elements out of the list (you must not use\n  `list[i]`).\n- You cannot add elements to the list, remove elements from the list,\n  combine two such lists together, or take a slice of the list.\n- You cannot pass the list to constructs that do any of the above.\n\nThe only valid operation with such a tokenized list is to pass it unmodified to a\nCloudFormation Resource construct.\n\nLists with assumed lengths\n--------------------------\n\nPass `assumedLength` if you know the length of the list that will be\nproduced by splitting. The actual list length at deploy time may be\n*longer* than the number you pass, but not *shorter*.\n\nThe returned list will look like:\n\n```\n[Fn.select(0, split), Fn.select(1, split), Fn.select(2, split), ...]\n```\n\nThe restrictions from the section \"Lists with unknown lengths\" will now be lifted,\nat the expense of having to know and fix the length of the list.",
            "returns": "a token represented as a string array",
            "stability": "stable",
            "summary": "Split a string token into a token list of string values."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 101
          },
          "name": "split",
          "parameters": [
            {
              "docs": {
                "summary": "A string value that determines where the source string is divided."
              },
              "name": "delimiter",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The string value that you want to split."
              },
              "name": "source",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The length of the list that will be produced by splitting."
              },
              "name": "assumedLength",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "In your templates, you can use this function\nto construct commands or outputs that include values that aren't available\nuntil you create or update a stack.",
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "The intrinsic function ``Fn::Sub`` substitutes variables in an input string with values that you specify."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 154
          },
          "name": "sub",
          "parameters": [
            {
              "docs": {
                "remarks": "Write variables as ${MyVarName}.\nVariables can be template parameter names, resource logical IDs, resource\nattributes, or a variable in a key-value map. If you specify only template\nparameter names, resource logical IDs, and resource attributes, don't\nspecify a key-value map.",
                "summary": "A string with variables that AWS CloudFormation substitutes with their associated values at runtime."
              },
              "name": "body",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "The value that AWS CloudFormation substitutes for the associated\nvariable name at runtime.",
                "summary": "The name of a variable that you included in the String parameter."
              },
              "name": "variables",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The `Fn::ToJsonString` intrinsic function converts an object or array to its corresponding JSON string."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 422
          },
          "name": "toJsonString",
          "parameters": [
            {
              "docs": {
                "summary": "The object or array to stringify."
              },
              "name": "object",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a token representing the transform expression",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-transform.html",
            "stability": "stable",
            "summary": "Creates a token representing the ``Fn::Transform`` expression."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 259
          },
          "name": "transform",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the macro to perform the processing."
              },
              "name": "macroName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The parameters to be passed to the macro."
              },
              "name": "parameters",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a token represented as a string",
            "stability": "stable",
            "summary": "Returns an attribute value or list of values for a specific parameter and attribute."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 398
          },
          "name": "valueOf",
          "parameters": [
            {
              "docs": {
                "remarks": "The parameter must be declared in the Parameters\nsection of the template.",
                "summary": "The name of a parameter for which you want to retrieve attribute values."
              },
              "name": "parameterOrLogicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The name of an attribute from which you want to retrieve a value."
              },
              "name": "attribute",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a token represented as a string array",
            "stability": "stable",
            "summary": "Returns a list of all attribute values for a given parameter type and attribute."
          },
          "locationInModule": {
            "filename": "lib/cfn-fn.ts",
            "line": 412
          },
          "name": "valueOfAll",
          "parameters": [
            {
              "docs": {
                "remarks": "For more information, see\nParameters in the AWS CloudFormation User Guide.",
                "summary": "An AWS-specific parameter type, such as AWS::EC2::SecurityGroup::Id or AWS::EC2::VPC::Id."
              },
              "name": "parameterType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "For more information about attributes, see Supported Attributes.",
                "summary": "The name of an attribute from which you want to retrieve a value."
              },
              "name": "attribute",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        }
      ],
      "name": "Fn",
      "symbolId": "lib/cfn-fn:Fn"
    },
    "@aws-cdk/core.GetContextKeyOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.GetContextKeyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-provider.ts",
        "line": 10
      },
      "name": "GetContextKeyOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The context provider to query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 14
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to include the stack's account and region automatically."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 26
          },
          "name": "includeEnvironment",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Provider-specific properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 19
          },
          "name": "props",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/context-provider:GetContextKeyOptions"
    },
    "@aws-cdk/core.GetContextKeyResult": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.GetContextKeyResult",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-provider.ts",
        "line": 42
      },
      "name": "GetContextKeyResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 43
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 44
          },
          "name": "props",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/context-provider:GetContextKeyResult"
    },
    "@aws-cdk/core.GetContextValueOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.GetContextValueOptions",
      "interfaces": [
        "@aws-cdk/core.GetContextKeyOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-provider.ts",
        "line": 31
      },
      "name": "GetContextValueOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This should be a dummy value that should preferably\nfail during deployment since it represents an invalid state.",
            "stability": "stable",
            "summary": "The value to return if the context value was not found and a missing context is reported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 37
          },
          "name": "dummyValue",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/context-provider:GetContextValueOptions"
    },
    "@aws-cdk/core.GetContextValueResult": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.GetContextValueResult",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-provider.ts",
        "line": 49
      },
      "name": "GetContextValueResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-provider.ts",
            "line": 50
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/context-provider:GetContextValueResult"
    },
    "@aws-cdk/core.GitIgnoreStrategy": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.IgnoreStrategy",
      "docs": {
        "stability": "stable",
        "summary": "Ignores file paths based on the [`.gitignore specification`](https://git-scm.com/docs/gitignore)."
      },
      "fqn": "@aws-cdk/core.GitIgnoreStrategy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/fs/ignore.ts",
          "line": 146
        },
        "parameters": [
          {
            "name": "absoluteRootPath",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "patterns",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fs/ignore.ts",
        "line": 142
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "params": "pattern the pattern to add"
            },
            "stability": "stable",
            "summary": "Adds another pattern."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 161
          },
          "name": "add",
          "overrides": "@aws-cdk/core.IgnoreStrategy",
          "parameters": [
            {
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "`true` if the file should be ignored",
            "stability": "stable",
            "summary": "Determines whether a given file path should be ignored or not."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 171
          },
          "name": "ignores",
          "overrides": "@aws-cdk/core.IgnoreStrategy",
          "parameters": [
            {
              "docs": {
                "summary": "absolute file path to be assessed against the pattern."
              },
              "name": "absoluteFilePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "GitIgnoreStrategy",
      "symbolId": "lib/fs/ignore:GitIgnoreStrategy"
    },
    "@aws-cdk/core.GlobIgnoreStrategy": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.IgnoreStrategy",
      "docs": {
        "stability": "stable",
        "summary": "Ignores file paths based on simple glob patterns."
      },
      "fqn": "@aws-cdk/core.GlobIgnoreStrategy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/fs/ignore.ts",
          "line": 89
        },
        "parameters": [
          {
            "name": "absoluteRootPath",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "patterns",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fs/ignore.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "params": "pattern the pattern to add"
            },
            "stability": "stable",
            "summary": "Adds another pattern."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 104
          },
          "name": "add",
          "overrides": "@aws-cdk/core.IgnoreStrategy",
          "parameters": [
            {
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "`true` if the file should be ignored",
            "stability": "stable",
            "summary": "Determines whether a given file path should be ignored or not."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 114
          },
          "name": "ignores",
          "overrides": "@aws-cdk/core.IgnoreStrategy",
          "parameters": [
            {
              "docs": {
                "summary": "absolute file path to be assessed against the pattern."
              },
              "name": "absoluteFilePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "GlobIgnoreStrategy",
      "symbolId": "lib/fs/ignore:GlobIgnoreStrategy"
    },
    "@aws-cdk/core.IAnyProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for lazy untyped value producers."
      },
      "fqn": "@aws-cdk/core.IAnyProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 69
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 73
          },
          "name": "produce",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IAnyProducer",
      "symbolId": "lib/lazy:IAnyProducer"
    },
    "@aws-cdk/core.IAspect": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Represents an Aspect."
      },
      "fqn": "@aws-cdk/core.IAspect",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aspect.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/aspect.ts",
            "line": 12
          },
          "name": "visit",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "IAspect",
      "symbolId": "lib/aspect:IAspect"
    },
    "@aws-cdk/core.IAsset": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Common interface for all assets."
      },
      "fqn": "@aws-cdk/core.IAsset",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/assets.ts",
        "line": 6
      },
      "name": "IAsset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "As this is a plain string, it\ncan be used in construct IDs in order to enforce creation of a new resource when the content\nhash has changed.",
            "stability": "stable",
            "summary": "A hash of this asset, which is available at construction time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/assets.ts",
            "line": 12
          },
          "name": "assetHash",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/assets:IAsset"
    },
    "@aws-cdk/core.IBoundStackSynthesizer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Just a type alias with a very concrete contract.",
        "stability": "stable",
        "summary": "A Stack Synthesizer, obtained from `IReusableStackSynthesizer.`."
      },
      "fqn": "@aws-cdk/core.IBoundStackSynthesizer",
      "interfaces": [
        "@aws-cdk/core.IStackSynthesizer"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/types.ts",
        "line": 67
      },
      "name": "IBoundStackSynthesizer",
      "symbolId": "lib/stack-synthesizers/types:IBoundStackSynthesizer"
    },
    "@aws-cdk/core.ICfnConditionExpression": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "You can use intrinsic functions, such as ``Fn.conditionIf``,\n``Fn.conditionEquals``, and ``Fn.conditionNot``, to conditionally create\nstack resources. These conditions are evaluated based on input parameters\nthat you declare when you create or update a stack. After you define all your\nconditions, you can associate them with resources or resource properties in\nthe Resources and Outputs sections of a template.\n\nYou define all conditions in the Conditions section of a template except for\n``Fn.conditionIf`` conditions. You can use the ``Fn.conditionIf`` condition\nin the metadata attribute, update policy attribute, and property values in\nthe Resources section and Outputs sections of a template.\n\nYou might use conditions when you want to reuse a template that can create\nresources in different contexts, such as a test environment versus a\nproduction environment. In your template, you can add an EnvironmentType\ninput parameter, which accepts either prod or test as inputs. For the\nproduction environment, you might include Amazon EC2 instances with certain\ncapabilities; however, for the test environment, you want to use less\ncapabilities to save costs. With conditions, you can define which resources\nare created and how they're configured for each environment type.\n\nYou can use `toString` when you wish to embed a condition expression\nin a property value that accepts a `string`. For example:\n\n```ts\nnew sqs.Queue(this, 'MyQueue', {\n  queueName: Fn.conditionIf('Condition', 'Hello', 'World').toString()\n});\n```",
        "stability": "stable",
        "summary": "Represents a CloudFormation element that can be used within a Condition."
      },
      "fqn": "@aws-cdk/core.ICfnConditionExpression",
      "interfaces": [
        "@aws-cdk/core.IResolvable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-condition.ts",
        "line": 89
      },
      "name": "ICfnConditionExpression",
      "symbolId": "lib/cfn-condition:ICfnConditionExpression"
    },
    "@aws-cdk/core.ICfnResourceOptions": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.ICfnResourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-resource.ts",
        "line": 548
      },
      "name": "ICfnResourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This means that only if the condition evaluates to 'true' when the stack\nis deployed, the resource will be included. This is provided to allow CDK projects to produce legacy templates, but normally\nthere is no need to use it in CDK projects.",
            "stability": "stable",
            "summary": "A condition to associate with this resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 554
          },
          "name": "condition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCondition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To signal a\nresource, you can use the cfn-signal helper script or SignalResource API. AWS CloudFormation publishes valid signals\nto the stack events so that you track the number of signals sent.",
            "stability": "stable",
            "summary": "Associate the CreationPolicy attribute with a resource to prevent its status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 562
          },
          "name": "creationPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnCreationPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You specify a DeletionPolicy attribute for each resource that you want to control. If a resource has no DeletionPolicy\nattribute, AWS CloudFormation deletes the resource by default. Note that this capability also applies to update operations\nthat lead to resources being removed.",
            "stability": "stable",
            "summary": "With the DeletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 570
          },
          "name": "deletionPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnDeletionPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Used for informational purposes only, is not processed in any way\n(and stays with the CloudFormation template, is not passed to the underlying resource,\neven if it does have a 'description' property).",
            "stability": "stable",
            "summary": "The description of this resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 599
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is not the same as the construct metadata which can be added\nusing construct.addMetadata(), but would not appear in the CloudFormation template automatically.",
            "stability": "stable",
            "summary": "Metadata associated with the CloudFormation resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 605
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "AWS CloudFormation invokes one of three update policies depending on the type of change you make or whether a\nscheduled action is associated with the Auto Scaling group.",
            "stability": "stable",
            "summary": "Use the UpdatePolicy attribute to specify how AWS CloudFormation handles updates to the AWS::AutoScaling::AutoScalingGroup resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 577
          },
          "name": "updatePolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnUpdatePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Use the UpdateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 583
          },
          "name": "updateReplacePolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnDeletionPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Used only for custom CloudFormation resources.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html",
            "stability": "stable",
            "summary": "The version of this resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-resource.ts",
            "line": 591
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-resource:ICfnResourceOptions"
    },
    "@aws-cdk/core.ICfnRuleConditionExpression": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "These functions can only be used in ``Rules`` section of template.",
        "stability": "stable",
        "summary": "Interface to specify certain functions as Service Catalog rule-specific."
      },
      "fqn": "@aws-cdk/core.ICfnRuleConditionExpression",
      "interfaces": [
        "@aws-cdk/core.ICfnConditionExpression"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-condition.ts",
        "line": 95
      },
      "name": "ICfnRuleConditionExpression",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It is never used.",
            "stability": "stable",
            "summary": "This field is only needed to defeat TypeScript's structural typing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-condition.ts",
            "line": 100
          },
          "name": "disambiguator",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cfn-condition:ICfnRuleConditionExpression"
    },
    "@aws-cdk/core.IFragmentConcatenator": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Interface so it could potentially be exposed over jsii.",
        "stability": "stable",
        "summary": "Function used to concatenate symbols in the target document language."
      },
      "fqn": "@aws-cdk/core.IFragmentConcatenator",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 120
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Join the fragment on the left and on the right."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 124
          },
          "name": "join",
          "parameters": [
            {
              "name": "left",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "right",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IFragmentConcatenator",
      "symbolId": "lib/resolvable:IFragmentConcatenator"
    },
    "@aws-cdk/core.IInspectable": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for examining a construct and exposing metadata."
      },
      "fqn": "@aws-cdk/core.IInspectable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/tree.ts",
        "line": 26
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Examines construct."
          },
          "locationInModule": {
            "filename": "lib/tree.ts",
            "line": 32
          },
          "name": "inspect",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        }
      ],
      "name": "IInspectable",
      "symbolId": "lib/tree:IInspectable"
    },
    "@aws-cdk/core.IListProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for lazy list producers."
      },
      "fqn": "@aws-cdk/core.IListProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 29
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the list value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 33
          },
          "name": "produce",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "IListProducer",
      "symbolId": "lib/lazy:IListProducer"
    },
    "@aws-cdk/core.ILocalBundling": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Local bundling."
      },
      "fqn": "@aws-cdk/core.ILocalBundling",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bundling.ts",
        "line": 167
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If the local bundler exists, and bundling\nwas performed locally, return `true`. Otherwise, return `false`.",
            "stability": "stable",
            "summary": "This method is called before attempting docker bundling to allow the bundler to be executed locally."
          },
          "locationInModule": {
            "filename": "lib/bundling.ts",
            "line": 176
          },
          "name": "tryBundle",
          "parameters": [
            {
              "docs": {
                "summary": "the directory where the bundled asset should be output."
              },
              "name": "outputDir",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "bundling options for this asset."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.BundlingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "ILocalBundling",
      "symbolId": "lib/bundling:ILocalBundling"
    },
    "@aws-cdk/core.INumberProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for lazy number producers."
      },
      "fqn": "@aws-cdk/core.INumberProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 49
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the number value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 53
          },
          "name": "produce",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        }
      ],
      "name": "INumberProducer",
      "symbolId": "lib/lazy:INumberProducer"
    },
    "@aws-cdk/core.IPolicyValidationContextBeta1": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Context available to the validation plugin."
      },
      "fqn": "@aws-cdk/core.IPolicyValidationContextBeta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/validation/validation.ts",
        "line": 61
      },
      "name": "IPolicyValidationContextBeta1",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The absolute path of all templates to be processed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/validation.ts",
            "line": 65
          },
          "name": "templatePaths",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/validation/validation:IPolicyValidationContextBeta1"
    },
    "@aws-cdk/core.IPolicyValidationPluginBeta1": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "example": "class MyCustomValidatorPlugin implements IValidationPlugin {\n   public readonly name = 'my-custom-plugin';\n\n   public isReady(): boolean {\n     // check if the plugin tool is installed\n     return true;\n   }\n\n   public validate(context: IValidationContext): ValidationPluginReport {\n     const templatePaths = context.templatePaths;\n     // perform validation on the template\n     // if there are any failures report them\n     return {\n       pluginName: this.name,\n       success: false,\n       violations: [{\n         ruleName: 'rule-name',\n         description: 'description of the rule',\n         violatingResources: [{\n           resourceName: 'FailingResource',\n           templatePath: '/path/to/stack.template.json',\n         }],\n     });\n   }\n}",
        "stability": "stable",
        "summary": "Represents a validation plugin that will be executed during synthesis."
      },
      "fqn": "@aws-cdk/core.IPolicyValidationPluginBeta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/validation/validation.ts",
        "line": 33
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This is where the plugin will evaluate the CloudFormation\ntemplates for compliance and report and violations",
            "stability": "stable",
            "summary": "The method that will be called by the CDK framework to perform validations."
          },
          "locationInModule": {
            "filename": "lib/validation/validation.ts",
            "line": 55
          },
          "name": "validate",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IPolicyValidationContextBeta1"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.PolicyValidationPluginReportBeta1"
            }
          }
        }
      ],
      "name": "IPolicyValidationPluginBeta1",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the plugin that will be displayed in the validation report."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/validation.ts",
            "line": 38
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The version of the plugin, following the Semantic Versioning specification (see https://semver.org/). This version is used for analytics purposes, to measure the usage of different plugins and different versions. The value of this property should be kept in sync with the actual version of the software package. If the version is not provided or is not a valid semantic version, it will be reported as `0.0.0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/validation.ts",
            "line": 48
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/validation/validation:IPolicyValidationPluginBeta1"
    },
    "@aws-cdk/core.IPostProcessor": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "A Token that can post-process the complete resolved value, after resolve() has recursed over it."
      },
      "fqn": "@aws-cdk/core.IPostProcessor",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 85
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Process the completely resolved value, after full recursion/resolution has happened."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 89
          },
          "name": "postProcess",
          "parameters": [
            {
              "name": "input",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IPostProcessor",
      "symbolId": "lib/resolvable:IPostProcessor"
    },
    "@aws-cdk/core.IResolvable": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Tokens are special objects that participate in synthesis.",
        "stability": "stable",
        "summary": "Interface for values that can be resolvable later."
      },
      "fqn": "@aws-cdk/core.IResolvable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 54
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the Token's value at resolution time."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 72
          },
          "name": "resolve",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Returns a reversible string representation.",
            "stability": "stable",
            "summary": "Return a string representation of this resolvable object."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 79
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IResolvable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This may return an array with a single informational element indicating how\nto get this property populated, if it was skipped for performance reasons.",
            "stability": "stable",
            "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 62
          },
          "name": "creationStack",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type that this token will likely resolve to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 67
          },
          "name": "typeHint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.ResolutionTypeHint"
          }
        }
      ],
      "symbolId": "lib/resolvable:IResolvable"
    },
    "@aws-cdk/core.IResolveContext": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Current resolution context for tokens."
      },
      "fqn": "@aws-cdk/core.IResolveContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 10
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Use this postprocessor after the entire token structure has been resolved."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 34
          },
          "name": "registerPostProcessor",
          "parameters": [
            {
              "name": "postProcessor",
              "type": {
                "fqn": "@aws-cdk/core.IPostProcessor"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resolve an inner object."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 29
          },
          "name": "resolve",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.ResolveChangeContextOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IResolveContext",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path in the JSON document that is being constructed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 24
          },
          "name": "documentPath",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "True when we are still preparing, false if we're rendering the final output."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 19
          },
          "name": "preparing",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scope from which resolution has been initiated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 14
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.IConstruct"
          }
        }
      ],
      "symbolId": "lib/resolvable:IResolveContext"
    },
    "@aws-cdk/core.IResource": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for the Resource construct."
      },
      "fqn": "@aws-cdk/core.IResource",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 44
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
            "stability": "stable",
            "summary": "Apply the given removal policy to this resource."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 72
          },
          "name": "applyRemovalPolicy",
          "parameters": [
            {
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/core.RemovalPolicy"
              }
            }
          ]
        }
      ],
      "name": "IResource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
            "stability": "stable",
            "summary": "The environment this resource belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 59
          },
          "name": "env",
          "type": {
            "fqn": "@aws-cdk/core.ResourceEnvironment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The stack in which this resource is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 48
          },
          "name": "stack",
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        }
      ],
      "symbolId": "lib/resource:IResource"
    },
    "@aws-cdk/core.IReusableStackSynthesizer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Regular `IStackSynthesizer` instances can only be bound to a Stack once.\n`IReusableStackSynthesizer` instances.\n\nFor backwards compatibility reasons, this class inherits from\n`IStackSynthesizer`, but if an object implements `IReusableStackSynthesizer`,\nno other methods than `reusableBind()` will be called.",
        "stability": "stable",
        "summary": "Interface for Stack Synthesizers that can be used for more than one stack."
      },
      "fqn": "@aws-cdk/core.IReusableStackSynthesizer",
      "interfaces": [
        "@aws-cdk/core.IStackSynthesizer"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/types.ts",
        "line": 53
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This method may be called more than once on the same object.",
            "stability": "stable",
            "summary": "Produce a bound Stack Synthesizer for the given stack."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 59
          },
          "name": "reusableBind",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IBoundStackSynthesizer"
            }
          }
        }
      ],
      "name": "IReusableStackSynthesizer",
      "symbolId": "lib/stack-synthesizers/types:IReusableStackSynthesizer"
    },
    "@aws-cdk/core.IStableAnyProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for (stable) lazy untyped value producers."
      },
      "fqn": "@aws-cdk/core.IStableAnyProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 79
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 83
          },
          "name": "produce",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IStableAnyProducer",
      "symbolId": "lib/lazy:IStableAnyProducer"
    },
    "@aws-cdk/core.IStableListProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for (stable) lazy list producers."
      },
      "fqn": "@aws-cdk/core.IStableListProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 39
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the list value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 43
          },
          "name": "produce",
          "returns": {
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "IStableListProducer",
      "symbolId": "lib/lazy:IStableListProducer"
    },
    "@aws-cdk/core.IStableNumberProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for (stable) lazy number producers."
      },
      "fqn": "@aws-cdk/core.IStableNumberProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 59
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the number value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 63
          },
          "name": "produce",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        }
      ],
      "name": "IStableNumberProducer",
      "symbolId": "lib/lazy:IStableNumberProducer"
    },
    "@aws-cdk/core.IStableStringProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for (stable) lazy string producers."
      },
      "fqn": "@aws-cdk/core.IStableStringProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 19
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the string value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 23
          },
          "name": "produce",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IStableStringProducer",
      "symbolId": "lib/lazy:IStableStringProducer"
    },
    "@aws-cdk/core.IStackSynthesizer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Encodes information how a certain Stack should be deployed."
      },
      "fqn": "@aws-cdk/core.IStackSynthesizer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/types.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.",
            "stability": "stable",
            "summary": "Register a Docker Image Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 35
          },
          "name": "addDockerImageAsset",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.",
            "stability": "stable",
            "summary": "Register a File Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 28
          },
          "name": "addFileAsset",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be called before any of the other methods are called, and can only be called once.",
            "stability": "stable",
            "summary": "Bind to the stack this environment is going to be used on."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 21
          },
          "name": "bind",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the associated stack to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 40
          },
          "name": "synthesize",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ]
        }
      ],
      "name": "IStackSynthesizer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no qualifier",
            "stability": "stable",
            "summary": "The qualifier used to bootstrap this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 14
          },
          "name": "bootstrapQualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/types:IStackSynthesizer"
    },
    "@aws-cdk/core.IStringProducer": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface for lazy string producers."
      },
      "fqn": "@aws-cdk/core.IStringProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 9
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the string value."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 13
          },
          "name": "produce",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IStringProducer",
      "symbolId": "lib/lazy:IStringProducer"
    },
    "@aws-cdk/core.ISynthesisSession": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Passed into `Construct.synthesize()` methods.",
        "stability": "stable",
        "summary": "Represents a single session of synthesis."
      },
      "fqn": "@aws-cdk/core.ISynthesisSession",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/types.ts",
        "line": 73
      },
      "name": "ISynthesisSession",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Cloud assembly builder."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 82
          },
          "name": "assembly",
          "type": {
            "fqn": "@aws-cdk/cx-api.CloudAssemblyBuilder"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The output directory for this synthesis session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 77
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether the stack should be validated after synthesis to check for error metadata."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/types.ts",
            "line": 89
          },
          "name": "validateOnSynth",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/types:ISynthesisSession"
    },
    "@aws-cdk/core.ITaggable": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Interface to implement tags."
      },
      "fqn": "@aws-cdk/core.ITaggable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/tag-manager.ts",
        "line": 234
      },
      "name": "ITaggable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "TagManager to set, remove and format tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 238
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/tag-manager:ITaggable"
    },
    "@aws-cdk/core.ITemplateOptions": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "CloudFormation template options for a stack."
      },
      "fqn": "@aws-cdk/core.ITemplateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack.ts",
        "line": 1564
      },
      "name": "ITemplateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If provided, it will be included in the CloudFormation template's \"Description\" attribute.",
            "stability": "stable",
            "summary": "Gets or sets the description of this stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1569
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metadata associated with the CloudFormation template."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1591
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Gets or sets the AWSTemplateFormatVersion field of the CloudFormation template."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1574
          },
          "name": "templateFormatVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `transforms` instead.",
            "stability": "deprecated",
            "summary": "Gets or sets the top-level template transform for this stack (e.g. \"AWS::Serverless-2016-10-31\")."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1581
          },
          "name": "transform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Gets or sets the top-level template transform(s) for this stack (e.g. `[\"AWS::Serverless-2016-10-31\"]`)."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1586
          },
          "name": "transforms",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/stack:ITemplateOptions"
    },
    "@aws-cdk/core.ITokenMapper": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Interface so it can be exported via jsii.",
        "stability": "stable",
        "summary": "Interface to apply operation to tokens in a string."
      },
      "fqn": "@aws-cdk/core.ITokenMapper",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/string-fragments.ts",
        "line": 114
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Replace a single token."
          },
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 118
          },
          "name": "mapToken",
          "parameters": [
            {
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.IResolvable"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ITokenMapper",
      "symbolId": "lib/string-fragments:ITokenMapper"
    },
    "@aws-cdk/core.ITokenResolver": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "How to resolve tokens."
      },
      "fqn": "@aws-cdk/core.ITokenResolver",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 95
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resolve a tokenized list."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 111
          },
          "name": "resolveList",
          "parameters": [
            {
              "name": "l",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "(May use concatenation)",
            "stability": "stable",
            "summary": "Resolve a string with at least one stringified token in it."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 106
          },
          "name": "resolveString",
          "parameters": [
            {
              "name": "s",
              "type": {
                "fqn": "@aws-cdk/core.TokenizedStringFragments"
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resolve a single token."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 99
          },
          "name": "resolveToken",
          "parameters": [
            {
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.IResolvable"
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            },
            {
              "name": "postProcessor",
              "type": {
                "fqn": "@aws-cdk/core.IPostProcessor"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ITokenResolver",
      "symbolId": "lib/resolvable:ITokenResolver"
    },
    "@aws-cdk/core.IgnoreMode": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Determines the ignore behavior to use."
      },
      "fqn": "@aws-cdk/core.IgnoreMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/fs/options.ts",
        "line": 36
      },
      "members": [
        {
          "docs": {
            "remarks": "This is the default for file assets.\n\nIt is also the default for Docker image assets, unless the '@aws-cdk/aws-ecr-assets:dockerIgnoreSupport'\ncontext flag is set.",
            "stability": "stable",
            "summary": "Ignores file paths based on simple glob patterns."
          },
          "name": "GLOB"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Ignores file paths based on the [`.gitignore specification`](https://git-scm.com/docs/gitignore)."
          },
          "name": "GIT"
        },
        {
          "docs": {
            "remarks": "This is the default for Docker image assets if the '@aws-cdk/aws-ecr-assets:dockerIgnoreSupport'\ncontext flag is set.",
            "stability": "stable",
            "summary": "Ignores file paths based on the [`.dockerignore specification`](https://docs.docker.com/engine/reference/builder/#dockerignore-file)."
          },
          "name": "DOCKER"
        }
      ],
      "name": "IgnoreMode",
      "symbolId": "lib/fs/options:IgnoreMode"
    },
    "@aws-cdk/core.IgnoreStrategy": {
      "abstract": true,
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Represents file path ignoring behavior."
      },
      "fqn": "@aws-cdk/core.IgnoreStrategy",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fs/ignore.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "returns": "`DockerIgnorePattern` associated with the given patterns.",
            "stability": "stable",
            "summary": "Ignores file paths based on the [`.dockerignore specification`](https://docs.docker.com/engine/reference/builder/#dockerignore-file)."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 40
          },
          "name": "docker",
          "parameters": [
            {
              "docs": {
                "summary": "the absolute path to the root directory of the paths to be considered."
              },
              "name": "absoluteRootPath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "patterns",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerIgnoreStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "`IgnoreStrategy` based on the `CopyOptions`",
            "stability": "stable",
            "summary": "Creates an IgnoreStrategy based on the `ignoreMode` and `exclude` in a `CopyOptions`."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 51
          },
          "name": "fromCopyOptions",
          "parameters": [
            {
              "docs": {
                "summary": "the `CopyOptions` to create the `IgnoreStrategy` from."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.CopyOptions"
              }
            },
            {
              "docs": {
                "summary": "the absolute path to the root directory of the paths to be considered."
              },
              "name": "absoluteRootPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IgnoreStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "`GitIgnorePattern` associated with the given patterns.",
            "stability": "stable",
            "summary": "Ignores file paths based on the [`.gitignore specification`](https://git-scm.com/docs/gitignore)."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 29
          },
          "name": "git",
          "parameters": [
            {
              "docs": {
                "summary": "the absolute path to the root directory of the paths to be considered."
              },
              "name": "absoluteRootPath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "patterns",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.GitIgnoreStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "`GlobIgnorePattern` associated with the given patterns.",
            "stability": "stable",
            "summary": "Ignores file paths based on simple glob patterns."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 18
          },
          "name": "glob",
          "parameters": [
            {
              "docs": {
                "summary": "the absolute path to the root directory of the paths to be considered."
              },
              "name": "absoluteRootPath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "patterns",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.GlobIgnoreStrategy"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "params": "pattern the pattern to add"
            },
            "stability": "stable",
            "summary": "Adds another pattern."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 71
          },
          "name": "add",
          "parameters": [
            {
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "returns": "`true` if the file should be ignored",
            "stability": "stable",
            "summary": "Determines whether a given file path should be ignored or not."
          },
          "locationInModule": {
            "filename": "lib/fs/ignore.ts",
            "line": 79
          },
          "name": "ignores",
          "parameters": [
            {
              "docs": {
                "summary": "absolute file path to be assessed against the pattern."
              },
              "name": "absoluteFilePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "IgnoreStrategy",
      "symbolId": "lib/fs/ignore:IgnoreStrategy"
    },
    "@aws-cdk/core.Intrinsic": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "WARNING: this class should not be externally exposed, but is currently visible\nbecause of a limitation of jsii (https://github.com/aws/jsii/issues/524).\n\nThis class will disappear in a future release and should not be used.",
        "stability": "stable",
        "summary": "Token subclass that represents values intrinsic to the target document language."
      },
      "fqn": "@aws-cdk/core.Intrinsic",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/private/intrinsic.ts",
          "line": 49
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "primitive": "any"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.IntrinsicProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IResolvable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/private/intrinsic.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a throwable Error object that contains the token creation stack trace."
          },
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 108
          },
          "name": "newError",
          "parameters": [
            {
              "docs": {
                "summary": "Error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the Token's value at resolution time."
          },
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 59
          },
          "name": "resolve",
          "overrides": "@aws-cdk/core.IResolvable",
          "parameters": [
            {
              "name": "_context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "remarks": "Called automatically when JSON.stringify() is called on a Token.",
            "stability": "stable",
            "summary": "Turn this Token into JSON."
          },
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 90
          },
          "name": "toJSON",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method will be called implicitly by language runtimes if the object\nis embedded into a string. We treat it the same as an explicit\nstringification.",
            "stability": "stable",
            "summary": "Convert an instance of this Token to a string."
          },
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 70
          },
          "name": "toString",
          "overrides": "@aws-cdk/core.IResolvable",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method will be called implicitly by language runtimes if the object\nis embedded into a list. We treat it the same as an explicit\nstringification.",
            "stability": "stable",
            "summary": "Convert an instance of this Token to a string list."
          },
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 81
          },
          "name": "toStringList",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Intrinsic",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The captured stack trace which represents the location in which this token was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 40
          },
          "name": "creationStack",
          "overrides": "@aws-cdk/core.IResolvable",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Type that the Intrinsic is expected to evaluate to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 45
          },
          "name": "typeHint",
          "optional": true,
          "overrides": "@aws-cdk/core.IResolvable",
          "type": {
            "fqn": "@aws-cdk/core.ResolutionTypeHint"
          }
        }
      ],
      "symbolId": "lib/private/intrinsic:Intrinsic"
    },
    "@aws-cdk/core.IntrinsicProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Customization properties for an Intrinsic token."
      },
      "fqn": "@aws-cdk/core.IntrinsicProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/private/intrinsic.ts",
        "line": 10
      },
      "name": "IntrinsicProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Capture the stack trace of where this token is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 16
          },
          "name": "stackTrace",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ResolutionTypeHint.STRING",
            "stability": "stable",
            "summary": "Type that this token is expected to evaluate to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private/intrinsic.ts",
            "line": 24
          },
          "name": "typeHint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.ResolutionTypeHint"
          }
        }
      ],
      "symbolId": "lib/private/intrinsic:IntrinsicProps"
    },
    "@aws-cdk/core.JsonNull": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "An object which serializes to the JSON `null` literal, and which can safely be passed across languages where `undefined` and `null` are not different."
      },
      "fqn": "@aws-cdk/core.JsonNull",
      "interfaces": [
        "@aws-cdk/core.IResolvable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/token.ts",
        "line": 239
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the Token's value at resolution time."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 247
          },
          "name": "resolve",
          "overrides": "@aws-cdk/core.IResolvable",
          "parameters": [
            {
              "name": "_ctx",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Obtains the JSON representation of this object (`null`)."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 252
          },
          "name": "toJSON",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Obtains the string representation of this object (`'null'`)."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 257
          },
          "name": "toString",
          "overrides": "@aws-cdk/core.IResolvable",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "JsonNull",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The canonical instance of `JsonNull`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 241
          },
          "name": "INSTANCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.JsonNull"
          }
        },
        {
          "docs": {
            "remarks": "This may return an array with a single informational element indicating how\nto get this property populated, if it was skipped for performance reasons.",
            "stability": "stable",
            "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 243
          },
          "name": "creationStack",
          "overrides": "@aws-cdk/core.IResolvable",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/token:JsonNull"
    },
    "@aws-cdk/core.Lazy": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Can be used to return a string, list or numeric value whose actual value\nwill only be calculated later, during synthesis.",
        "stability": "stable",
        "summary": "Lazily produce a value."
      },
      "fqn": "@aws-cdk/core.Lazy",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 142
      },
      "methods": [
        {
          "docs": {
            "remarks": "Use this if you want to render an object to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.\n\nThe inner function will only be invoked one time and cannot depend on\nresolution context.",
            "stability": "stable",
            "summary": "Defer the one-time calculation of an arbitrarily typed value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 305
          },
          "name": "any",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IStableAnyProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyAnyValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `Lazy.any()` or `Lazy.uncachedAny()` instead.",
            "remarks": "Use this if you want to render an object to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.",
            "stability": "deprecated",
            "summary": "Defer the one-time calculation of an arbitrarily typed value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 292
          },
          "name": "anyValue",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IAnyProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyAnyValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use this if you want to render a list to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.\n\nIf you are simply looking to force a value to a `string[]` type and don't need\nthe calculation to be deferred, use `Token.asList()` instead.\n\nThe inner function will only be invoked once, and the resolved value\ncannot depend on the Stack the Token is used in.",
            "stability": "stable",
            "summary": "Defer the one-time calculation of a list value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 280
          },
          "name": "list",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IStableListProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyListValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `Lazy.list()` or `Lazy.uncachedList()` instead.",
            "remarks": "Use this if you want to render a list to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.\n\nIf you are simply looking to force a value to a `string[]` type and don't need\nthe calculation to be deferred, use `Token.asList()` instead.",
            "stability": "deprecated",
            "summary": "Defer the one-time calculation of a list value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 248
          },
          "name": "listValue",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IListProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyListValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use this if you want to render a number to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.\n\nIf you are simply looking to force a value to a `number` type and don't need\nthe calculation to be deferred, use `Token.asNumber()` instead.\n\nThe inner function will only be invoked once, and the resolved value\ncannot depend on the Stack the Token is used in.",
            "stability": "stable",
            "summary": "Defer the one-time calculation of a number value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 217
          },
          "name": "number",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IStableNumberProducer"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `Lazy.number()` or `Lazy.uncachedNumber()` instead.",
            "remarks": "Use this if you want to render a number to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.\n\nIf you are simply looking to force a value to a `number` type and don't need\nthe calculation to be deferred, use `Token.asNumber()` instead.",
            "stability": "deprecated",
            "summary": "Defer the one-time calculation of a number value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 201
          },
          "name": "numberValue",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.INumberProducer"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use this if you want to render a string to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.\n\nIf you are simply looking to force a value to a `string` type and don't need\nthe calculation to be deferred, use `Token.asString()` instead.\n\nThe inner function will only be invoked once, and the resolved value\ncannot depend on the Stack the Token is used in.",
            "stability": "stable",
            "summary": "Defer the one-time calculation of a string value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 170
          },
          "name": "string",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IStableStringProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyStringValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `Lazy.string()` or `Lazy.uncachedString()` instead.",
            "remarks": "Use this if you want to render a string to a template whose actual value depends on\nsome state mutation that may happen after the construct has been created.\n\nIf you are simply looking to force a value to a `string` type and don't need\nthe calculation to be deferred, use `Token.asString()` instead.",
            "stability": "deprecated",
            "summary": "Defer the calculation of a string value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 154
          },
          "name": "stringValue",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IStringProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyStringValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use of this function is not recommended; unless you know you need it for sure, you\nprobably don't. Use `Lazy.any()` instead.\n\nThe inner function may be invoked multiple times during synthesis. You\nshould only use this method if the returned value depends on variables\nthat may change during the Aspect application phase of synthesis, or if\nthe value depends on the Stack the value is being used in. Both of these\ncases are rare, and only ever occur for AWS Construct Library authors.",
            "stability": "stable",
            "summary": "Defer the calculation of an untyped value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 321
          },
          "name": "uncachedAny",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IAnyProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyAnyValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use of this function is not recommended; unless you know you need it for sure, you\nprobably don't. Use `Lazy.list()` instead.\n\nThe inner function may be invoked multiple times during synthesis. You\nshould only use this method if the returned value depends on variables\nthat may change during the Aspect application phase of synthesis, or if\nthe value depends on the Stack the value is being used in. Both of these\ncases are rare, and only ever occur for AWS Construct Library authors.",
            "stability": "stable",
            "summary": "Defer the calculation of a list value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 264
          },
          "name": "uncachedList",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IListProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyListValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use of this function is not recommended; unless you know you need it for sure, you\nprobably don't. Use `Lazy.number()` instead.\n\nThe inner function may be invoked multiple times during synthesis. You\nshould only use this method if the returned value depends on variables\nthat may change during the Aspect application phase of synthesis, or if\nthe value depends on the Stack the value is being used in. Both of these\ncases are rare, and only ever occur for AWS Construct Library authors.",
            "stability": "stable",
            "summary": "Defer the calculation of a number value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 233
          },
          "name": "uncachedNumber",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.INumberProducer"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use of this function is not recommended; unless you know you need it for sure, you\nprobably don't. Use `Lazy.string()` instead.\n\nThe inner function may be invoked multiple times during synthesis. You\nshould only use this method if the returned value depends on variables\nthat may change during the Aspect application phase of synthesis, or if\nthe value depends on the Stack the value is being used in. Both of these\ncases are rare, and only ever occur for AWS Construct Library authors.",
            "stability": "stable",
            "summary": "Defer the calculation of a string value to synthesis time."
          },
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 186
          },
          "name": "uncachedString",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "@aws-cdk/core.IStringProducer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.LazyStringValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "Lazy",
      "symbolId": "lib/lazy:Lazy"
    },
    "@aws-cdk/core.LazyAnyValueOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating lazy untyped tokens."
      },
      "fqn": "@aws-cdk/core.LazyAnyValueOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 120
      },
      "name": "LazyAnyValueOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No hint",
            "stability": "stable",
            "summary": "Use the given name as a display hint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 126
          },
          "name": "displayHint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "If the produced value is an array and it is empty, return 'undefined' instead."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 133
          },
          "name": "omitEmptyArray",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/lazy:LazyAnyValueOptions"
    },
    "@aws-cdk/core.LazyListValueOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating a lazy list token."
      },
      "fqn": "@aws-cdk/core.LazyListValueOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 101
      },
      "name": "LazyListValueOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No hint",
            "stability": "stable",
            "summary": "Use the given name as a display hint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 107
          },
          "name": "displayHint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "If the produced list is empty, return 'undefined' instead."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 114
          },
          "name": "omitEmpty",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/lazy:LazyListValueOptions"
    },
    "@aws-cdk/core.LazyStringValueOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating a lazy string token."
      },
      "fqn": "@aws-cdk/core.LazyStringValueOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lazy.ts",
        "line": 89
      },
      "name": "LazyStringValueOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No hint",
            "stability": "stable",
            "summary": "Use the given name as a display hint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lazy.ts",
            "line": 95
          },
          "name": "displayHint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lazy:LazyStringValueOptions"
    },
    "@aws-cdk/core.LegacyStackSynthesizer": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.StackSynthesizer",
      "docs": {
        "remarks": "This synthesizer will generate CloudFormation parameters for every referenced\nasset, and use the CLI's current credentials to deploy the stack.\n\n- It does not support cross-account deployment (the CLI must have credentials\n  to the account you are trying to deploy to).\n- It cannot be used with **CDK Pipelines**. To deploy using CDK Pipelines,\n  you must use the `DefaultStackSynthesizer`.\n- Each asset will take up a CloudFormation Parameter in your template. Keep in\n  mind that there is a maximum of 200 parameters in a CloudFormation template.\n  To use deterministic asset locations instead, use `CliCredentialsStackSynthesizer`.\n\nBe aware that your CLI credentials must be valid for the duration of the\nentire deployment. If you are using session credentials, make sure the\nsession lifetime is long enough.\n\nThis is the only StackSynthesizer that supports customizing asset behavior\nby overriding `Stack.addFileAsset()` and `Stack.addDockerImageAsset()`.",
        "stability": "stable",
        "summary": "Use the CDK classic way of referencing assets."
      },
      "fqn": "@aws-cdk/core.LegacyStackSynthesizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@aws-cdk/core.IReusableStackSynthesizer",
        "@aws-cdk/core.IBoundStackSynthesizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/legacy.ts",
        "line": 48
      },
      "methods": [
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a Docker Image Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/legacy.ts",
            "line": 88
          },
          "name": "addDockerImageAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a File Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/legacy.ts",
            "line": 62
          },
          "name": "addFileAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method may be called more than once on the same object.",
            "stability": "stable",
            "summary": "Produce a bound Stack Synthesizer for the given stack."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/legacy.ts",
            "line": 118
          },
          "name": "reusableBind",
          "overrides": "@aws-cdk/core.IReusableStackSynthesizer",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IBoundStackSynthesizer"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the associated stack to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/legacy.ts",
            "line": 106
          },
          "name": "synthesize",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ]
        }
      ],
      "name": "LegacyStackSynthesizer",
      "symbolId": "lib/stack-synthesizers/legacy:LegacyStackSynthesizer"
    },
    "@aws-cdk/core.Names": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "For example, those can be\nused to allocate unique physical names for resources.",
        "stability": "stable",
        "summary": "Functions for devising unique names for constructs."
      },
      "fqn": "@aws-cdk/core.Names",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/names.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "remarks": "The identifier includes a human readable portion rendered\nfrom the path components and a hash suffix.\n\nTODO (v2): replace with API to use `constructs.Node`.",
            "returns": "a unique id based on the construct path",
            "stability": "stable",
            "summary": "Returns a CloudFormation-compatible unique identifier for a construct based on its path."
          },
          "locationInModule": {
            "filename": "lib/names.ts",
            "line": 65
          },
          "name": "nodeUniqueId",
          "parameters": [
            {
              "docs": {
                "summary": "The construct node."
              },
              "name": "node",
              "type": {
                "fqn": "constructs.Node"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The identifier includes a human readable portion rendered\nfrom the path components and a hash suffix. uniqueId is not unique if multiple\ncopies of the stack are deployed. Prefer using uniqueResourceName().",
            "returns": "a unique id based on the construct path",
            "stability": "stable",
            "summary": "Returns a CloudFormation-compatible unique identifier for a construct based on its path."
          },
          "locationInModule": {
            "filename": "lib/names.ts",
            "line": 49
          },
          "name": "uniqueId",
          "parameters": [
            {
              "docs": {
                "summary": "The construct."
              },
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This function finds the stackName of the parent stack (non-nested)\nto the construct, and the ids of the components in the construct path.\n\nThe user can define allowed special characters, a separator between the elements,\nand the maximum length of the resource name. The name includes a human readable portion rendered\nfrom the path components, with or without user defined separators, and a hash suffix.\nIf the resource name is longer than the maximum length, it is trimmed in the middle.",
            "returns": "a unique resource name based on the construct path",
            "stability": "stable",
            "summary": "Returns a CloudFormation-compatible unique identifier for a construct based on its path."
          },
          "locationInModule": {
            "filename": "lib/names.ts",
            "line": 84
          },
          "name": "uniqueResourceName",
          "parameters": [
            {
              "docs": {
                "summary": "The construct."
              },
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            },
            {
              "docs": {
                "summary": "Options for defining the unique resource name."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.UniqueResourceNameOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "Names",
      "symbolId": "lib/names:Names"
    },
    "@aws-cdk/core.NestedStack": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.Stack",
      "docs": {
        "remarks": "When you apply template changes to update a top-level stack, CloudFormation\nupdates the top-level stack and initiates an update to its nested stacks.\nCloudFormation updates the resources of modified nested stacks, but does not\nupdate the resources of unmodified nested stacks.\n\nFurthermore, this stack will not be treated as an independent deployment\nartifact (won't be listed in \"cdk list\" or deployable through \"cdk deploy\"),\nbut rather only synthesized as a template and uploaded as an asset to S3.\n\nCross references of resource attributes between the parent stack and the\nnested stack will automatically be translated to stack parameters and\noutputs.",
        "stability": "stable",
        "summary": "A CloudFormation nested stack."
      },
      "fqn": "@aws-cdk/core.NestedStack",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nested-stack.ts",
          "line": 116
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.NestedStackProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nested-stack.ts",
        "line": 97
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Checks if `x` is an object of type `NestedStack`."
          },
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 102
          },
          "name": "isNestedStack",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Assign a value to one of the nested stack parameters."
          },
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 190
          },
          "name": "setParameter",
          "parameters": [
            {
              "docs": {
                "summary": "The parameter name (ID)."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The value to assign."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "NestedStack",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "This is a context aware attribute:\n- If this is referenced from the parent stack, it will return `{ \"Ref\": \"LogicalIdOfNestedStackResource\" }`.\n- If this is referenced from the context of the nested stack, it will return `{ \"Ref\": \"AWS::StackId\" }`\n\nExample value: `arn:aws:cloudformation:us-east-2:123456789012:stack/mystack-mynestedstack-sggfrhxhum7w/f449b250-b969-11e0-a185-5081d0136786`",
            "stability": "stable",
            "summary": "An attribute that represents the ID of the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 181
          },
          "name": "stackId",
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "This is a context aware attribute:\n- If this is referenced from the parent stack, it will return a token that parses the name from the stack ID.\n- If this is referenced from the context of the nested stack, it will return `{ \"Ref\": \"AWS::StackName\" }`\n\nExample value: `mystack-mynestedstack-sggfrhxhum7w`",
            "stability": "stable",
            "summary": "An attribute that represents the name of the nested stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 167
          },
          "name": "stackName",
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Example value: `MyStack.template.json`",
            "stability": "stable",
            "summary": "The name of the CloudFormation template file emitted to the output directory during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 106
          },
          "name": "templateFile",
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "`undefined` for top-level (non-nested) stacks.",
            "stability": "stable",
            "summary": "If this is a nested stack, this represents its `AWS::CloudFormation::Stack` resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 107
          },
          "name": "nestedStackResource",
          "optional": true,
          "overrides": "@aws-cdk/core.Stack",
          "type": {
            "fqn": "@aws-cdk/core.CfnResource"
          }
        }
      ],
      "symbolId": "lib/nested-stack:NestedStack"
    },
    "@aws-cdk/core.NestedStackProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Initialization props for the `NestedStack` construct."
      },
      "fqn": "@aws-cdk/core.NestedStackProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nested-stack.ts",
        "line": 24
      },
      "name": "NestedStackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "A description of the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 77
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- notifications are not sent for this stack.",
            "stability": "stable",
            "summary": "The Simple Notification Service (SNS) topics to publish stack related events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 59
          },
          "name": "notificationArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no user-defined parameters are passed to the nested stack",
            "remarks": "Each parameter has a name corresponding\nto a parameter defined in the embedded template and a value representing\nthe value that you want to set for the parameter.\n\nThe nested stack construct will automatically synthesize parameters in order\nto bind references from the parent stack(s) into the nested stack.",
            "stability": "stable",
            "summary": "The set value pairs that represent the parameters passed to CloudFormation when this nested stack is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 36
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.DESTROY",
            "remarks": "The default is `Destroy`, because all Removal Policies of resources inside the\nNested Stack should already have been set correctly. You normally should\nnot need to set this value.",
            "stability": "stable",
            "summary": "Policy to apply when the nested stack is removed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 70
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no timeout",
            "remarks": "When CloudFormation detects that the nested stack has reached the\nCREATE_COMPLETE state, it marks the nested stack resource as\nCREATE_COMPLETE in the parent stack and resumes creating the parent stack.\nIf the timeout period expires before the nested stack reaches\nCREATE_COMPLETE, CloudFormation marks the nested stack as failed and rolls\nback both the nested stack and parent stack.",
            "stability": "stable",
            "summary": "The length of time that CloudFormation waits for the nested stack to reach the CREATE_COMPLETE state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nested-stack.ts",
            "line": 51
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/nested-stack:NestedStackProps"
    },
    "@aws-cdk/core.NestedStackSynthesizer": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.StackSynthesizer",
      "docs": {
        "remarks": "Forwards all calls to the parent stack's synthesizer.\n\nThis synthesizer is automatically used for `NestedStack` constructs.\nApp builder do not need to use this class directly.",
        "stability": "stable",
        "summary": "Synthesizer for a nested stack."
      },
      "fqn": "@aws-cdk/core.NestedStackSynthesizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stack-synthesizers/nested.ts",
          "line": 14
        },
        "parameters": [
          {
            "name": "parentDeployment",
            "type": {
              "fqn": "@aws-cdk/core.IStackSynthesizer"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/nested.ts",
        "line": 13
      },
      "methods": [
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a Docker Image Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/nested.ts",
            "line": 28
          },
          "name": "addDockerImageAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a File Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/nested.ts",
            "line": 22
          },
          "name": "addFileAsset",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the associated stack to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/nested.ts",
            "line": 34
          },
          "name": "synthesize",
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ]
        }
      ],
      "name": "NestedStackSynthesizer",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The qualifier used to bootstrap this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/nested.ts",
            "line": 18
          },
          "name": "bootstrapQualifier",
          "optional": true,
          "overrides": "@aws-cdk/core.StackSynthesizer",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/nested:NestedStackSynthesizer"
    },
    "@aws-cdk/core.PermissionsBoundary": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "example": "// no permissions boundary for dev stage\nnew Stage(app, 'DevStage');\n\n// default boundary for prod stage\nconst prodStage = new Stage(app, 'ProdStage', {\n  permissionsBoundary: PermissionsBoundary.fromName('prod-pb'),\n});\n\n// overriding the pb applied for this stack\nnew Stack(prodStage, 'ProdStack1', {\n  permissionsBoundary: PermissionsBoundary.fromName('stack-pb'),\n});\n\n// will inherit the permissions boundary from the stage\nnew Stack(prodStage, 'ProdStack2');",
        "remarks": "A permissions boundary is typically applied at the `Stage` scope.\nThis allows setting different permissions boundaries per Stage. For\nexample, you may _not_ apply a boundary to the `Dev` stage which deploys\nto a personal dev account, but you _do_ apply the default boundary to the\n`Prod` stage.\n\nIt is possible to apply different permissions boundaries to different scopes\nwithin your app. In this case the most specifically applied one wins",
        "stability": "stable",
        "summary": "Apply a permissions boundary to all IAM Roles and Users within a specific scope."
      },
      "fqn": "@aws-cdk/core.PermissionsBoundary",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/permissions-boundary.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "example": "declare const app: App;\nnew Stage(app, 'ProdStage', {\n  permissionsBoundary: PermissionsBoundary.fromArn('arn:aws:iam::${AWS::AccountId}:policy/my-custom-permissions-boundary'),\n});",
            "remarks": "The arn can include placeholders for the partition, region, qualifier, and account\nThese placeholders will be replaced with the actual values if available. This requires\nthat the Stack has the environment specified, it does not work with environment\nagnostic stacks.\n\n- '${AWS::Partition}'\n- '${AWS::Region}'\n- '${AWS::AccountId}'\n- '${Qualifier}'",
            "stability": "stable",
            "summary": "Apply a permissions boundary with the given ARN to all IAM Roles and Users created within a scope."
          },
          "locationInModule": {
            "filename": "lib/permissions-boundary.ts",
            "line": 88
          },
          "name": "fromArn",
          "parameters": [
            {
              "docs": {
                "summary": "the ARN of the permissions boundary policy."
              },
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.PermissionsBoundary"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "declare const app: App;\nnew Stage(app, 'ProdStage', {\n  permissionsBoundary: PermissionsBoundary.fromName('my-custom-permissions-boundary'),\n});",
            "remarks": "The name can include placeholders for the partition, region, qualifier, and account\nThese placeholders will be replaced with the actual values if available. This requires\nthat the Stack has the environment specified, it does not work with environment\nagnostic stacks.\n\n- '${AWS::Partition}'\n- '${AWS::Region}'\n- '${AWS::AccountId}'\n- '${Qualifier}'",
            "stability": "stable",
            "summary": "Apply a permissions boundary with the given name to all IAM Roles and Users created within a scope."
          },
          "locationInModule": {
            "filename": "lib/permissions-boundary.ts",
            "line": 62
          },
          "name": "fromName",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the permissions boundary policy."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.PermissionsBoundary"
            }
          },
          "static": true
        }
      ],
      "name": "PermissionsBoundary",
      "symbolId": "lib/permissions-boundary:PermissionsBoundary"
    },
    "@aws-cdk/core.PermissionsBoundaryBindOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for binding a Permissions Boundary to a construct scope."
      },
      "fqn": "@aws-cdk/core.PermissionsBoundaryBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/permissions-boundary.ts",
        "line": 7
      },
      "name": "PermissionsBoundaryBindOptions",
      "symbolId": "lib/permissions-boundary:PermissionsBoundaryBindOptions"
    },
    "@aws-cdk/core.PhysicalName": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Includes special markers for automatic generation of physical names."
      },
      "fqn": "@aws-cdk/core.PhysicalName",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/physical-name.ts",
        "line": 7
      },
      "name": "PhysicalName",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "Otherwise, the name will be allocated during deployment by CloudFormation.\n\nIf you are certain that a resource will be referenced across environments,\nyou may also specify an explicit physical name for it. This option is\nmostly designed for reusable constructs which may or may not be referenced\nacross environments.",
            "stability": "stable",
            "summary": "Use this to automatically generate a physical name for an AWS resource only if the resource is referenced across environments (account/region)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/physical-name.ts",
            "line": 18
          },
          "name": "GENERATE_IF_NEEDED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/physical-name:PhysicalName"
    },
    "@aws-cdk/core.PolicyValidationPluginReportBeta1": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The report emitted by the plugin after evaluation."
      },
      "fqn": "@aws-cdk/core.PolicyValidationPluginReportBeta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/validation/report.ts",
        "line": 84
      },
      "name": "PolicyValidationPluginReportBeta1",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether or not the report was successful."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 93
          },
          "name": "success",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of violations in the report."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 88
          },
          "name": "violations",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.PolicyViolationBeta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no metadata",
            "stability": "stable",
            "summary": "Arbitrary information about the report."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 106
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no version",
            "stability": "stable",
            "summary": "The version of the plugin that created the report."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 99
          },
          "name": "pluginVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/validation/report:PolicyValidationPluginReportBeta1"
    },
    "@aws-cdk/core.PolicyValidationReportStatusBeta1": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "The final status of the validation report."
      },
      "fqn": "@aws-cdk/core.PolicyValidationReportStatusBeta1",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/validation/report.ts",
        "line": 69
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "No violations were found."
          },
          "name": "SUCCESS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "At least one violation was found."
          },
          "name": "FAILURE"
        }
      ],
      "name": "PolicyValidationReportStatusBeta1",
      "symbolId": "lib/validation/report:PolicyValidationReportStatusBeta1"
    },
    "@aws-cdk/core.PolicyViolatingResourceBeta1": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Resource violating a specific rule."
      },
      "fqn": "@aws-cdk/core.PolicyViolatingResourceBeta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/validation/report.ts",
        "line": 49
      },
      "name": "PolicyViolatingResourceBeta1",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The locations in the CloudFormation template that pose the violations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 58
          },
          "name": "locations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The logical ID of the resource in the CloudFormation template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 53
          },
          "name": "resourceLogicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path to the CloudFormation template that contains this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 63
          },
          "name": "templatePath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/validation/report:PolicyViolatingResourceBeta1"
    },
    "@aws-cdk/core.PolicyViolationBeta1": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Violation produced by the validation plugin."
      },
      "fqn": "@aws-cdk/core.PolicyViolationBeta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/validation/report.ts",
        "line": 4
      },
      "name": "PolicyViolationBeta1",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The description of the violation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 13
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 8
          },
          "name": "ruleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The resources violating this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 18
          },
          "name": "violatingResources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.PolicyViolatingResourceBeta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no fix is provided",
            "stability": "stable",
            "summary": "How to fix the violation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 25
          },
          "name": "fix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no rule metadata",
            "remarks": "This can be used to provide additional information that is\nplugin specific. The data provided here will be rendered as is.",
            "stability": "stable",
            "summary": "Additional metadata to include with the rule results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 43
          },
          "name": "ruleMetadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no severity",
            "remarks": "This is useful for helping the user discriminate between warnings,\nerrors, information, etc.",
            "stability": "stable",
            "summary": "The severity of the violation, only used for reporting purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/validation/report.ts",
            "line": 34
          },
          "name": "severity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/validation/report:PolicyViolationBeta1"
    },
    "@aws-cdk/core.Reference": {
      "abstract": true,
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.Intrinsic",
      "docs": {
        "remarks": "References are recorded.",
        "stability": "stable",
        "summary": "An intrinsic Token that represents a reference to a construct."
      },
      "fqn": "@aws-cdk/core.Reference",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/reference.ts",
          "line": 23
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "primitive": "any"
            }
          },
          {
            "name": "target",
            "type": {
              "fqn": "constructs.IConstruct"
            }
          },
          {
            "name": "displayName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "Type that the Intrinsic is expected to evaluate to."
            },
            "name": "typeHint",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResolutionTypeHint"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/reference.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Check whether this is actually a Reference."
          },
          "locationInModule": {
            "filename": "lib/reference.ts",
            "line": 16
          },
          "name": "isReference",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "Reference",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/reference.ts",
            "line": 21
          },
          "name": "displayName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/reference.ts",
            "line": 20
          },
          "name": "target",
          "type": {
            "fqn": "constructs.IConstruct"
          }
        }
      ],
      "symbolId": "lib/reference:Reference"
    },
    "@aws-cdk/core.RemovalPolicy": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "The removal policy controls what happens to the resource if it stops being\nmanaged by CloudFormation. This can happen in one of three situations:\n\n- The resource is removed from the template, so CloudFormation stops managing it;\n- A change to the resource is made that requires it to be replaced, so CloudFormation stops\n  managing it;\n- The stack is deleted, so CloudFormation stops managing all resources in it.\n\nThe Removal Policy applies to all above cases.\n\nMany stateful resources in the AWS Construct Library will accept a\n`removalPolicy` as a property, typically defaulting it to `RETAIN`.\n\nIf the AWS Construct Library resource does not accept a `removalPolicy`\nargument, you can always configure it by using the escape hatch mechanism,\nas shown in the following example:\n\n```ts\ndeclare const bucket: s3.Bucket;\n\nconst cfnBucket = bucket.node.findChild('Resource') as CfnResource;\ncfnBucket.applyRemovalPolicy(RemovalPolicy.DESTROY);\n```",
        "stability": "stable",
        "summary": "Possible values for a resource's Removal Policy."
      },
      "fqn": "@aws-cdk/core.RemovalPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/removal-policy.ts",
        "line": 28
      },
      "members": [
        {
          "docs": {
            "remarks": "It means that when the resource is\nremoved from the app, it will be physically destroyed.",
            "stability": "stable",
            "summary": "This is the default removal policy."
          },
          "name": "DESTROY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This uses the 'Retain' DeletionPolicy, which will cause the resource to be retained in the account, but orphaned from the stack."
          },
          "name": "RETAIN"
        },
        {
          "docs": {
            "remarks": "Only available for some stateful resources,\nlike databases, EC2 volumes, etc.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html#aws-attribute-deletionpolicy-options",
            "stability": "stable",
            "summary": "This retention policy deletes the resource, but saves a snapshot of its data before deleting, so that it can be re-created later."
          },
          "name": "SNAPSHOT"
        }
      ],
      "name": "RemovalPolicy",
      "symbolId": "lib/removal-policy:RemovalPolicy"
    },
    "@aws-cdk/core.RemovalPolicyOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.RemovalPolicyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/removal-policy.ts",
        "line": 53
      },
      "name": "RemovalPolicyOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Apply the same deletion policy to the resource's \"UpdateReplacePolicy\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/removal-policy.ts",
            "line": 66
          },
          "name": "applyToUpdateReplacePolicy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default value is resource specific. To determine the default value for a resource,\nplease consult that specific resource's documentation.",
            "stability": "stable",
            "summary": "The default policy to apply in case the removal policy is not defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/removal-policy.ts",
            "line": 60
          },
          "name": "default",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ],
      "symbolId": "lib/removal-policy:RemovalPolicyOptions"
    },
    "@aws-cdk/core.RemoveTag": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "The RemoveTag Aspect will handle removing tags from this node and children."
      },
      "fqn": "@aws-cdk/core.RemoveTag",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/tag-aspect.ts",
          "line": 171
        },
        "parameters": [
          {
            "docs": {
              "summary": "The string key for the tag."
            },
            "name": "key",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.TagProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/tag-aspect.ts",
        "line": 167
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 175
          },
          "name": "applyTag",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.ITaggable"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 74
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "RemoveTag",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The string key for the tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 65
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 67
          },
          "name": "props",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/core.TagProps"
          }
        }
      ],
      "symbolId": "lib/tag-aspect:RemoveTag"
    },
    "@aws-cdk/core.ResolutionTypeHint": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Type hints for resolved values."
      },
      "fqn": "@aws-cdk/core.ResolutionTypeHint",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/type-hints.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "This value is expected to resolve to a String."
          },
          "name": "STRING"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This value is expected to resolve to a Number."
          },
          "name": "NUMBER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This value is expected to resolve to a String List."
          },
          "name": "STRING_LIST"
        }
      ],
      "name": "ResolutionTypeHint",
      "symbolId": "lib/type-hints:ResolutionTypeHint"
    },
    "@aws-cdk/core.ResolveChangeContextOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options that can be changed while doing a recursive resolve."
      },
      "fqn": "@aws-cdk/core.ResolveChangeContextOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 40
      },
      "name": "ResolveChangeContextOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Unchanged",
            "stability": "stable",
            "summary": "Change the 'allowIntrinsicKeys' option."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 46
          },
          "name": "allowIntrinsicKeys",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/resolvable:ResolveChangeContextOptions"
    },
    "@aws-cdk/core.ResolveOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "NOT the same as the ResolveContext; ResolveContext is exposed to Token\nimplementors and resolution hooks, whereas this struct is just to bundle\na number of things that would otherwise be arguments to resolve() in a\nreadable way.",
        "stability": "stable",
        "summary": "Options to the resolve() operation."
      },
      "fqn": "@aws-cdk/core.ResolveOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/token.ts",
        "line": 284
      },
      "name": "ResolveOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The resolver to apply to any resolvable tokens found."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 293
          },
          "name": "resolver",
          "type": {
            "fqn": "@aws-cdk/core.ITokenResolver"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scope from which resolution is performed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 288
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.IConstruct"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the resolution is being executed during the prepare phase or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 299
          },
          "name": "preparing",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to remove undefined elements from arrays and objects when resolving."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 306
          },
          "name": "removeEmpty",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/token:ResolveOptions"
    },
    "@aws-cdk/core.Resource": {
      "abstract": true,
      "assembly": "@aws-cdk/core",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A construct which represents an AWS resource."
      },
      "fqn": "@aws-cdk/core.Resource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 156
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 122
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns true if the construct was created by CDK, and false otherwise."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 133
          },
          "name": "isOwnedResource",
          "parameters": [
            {
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Check whether the given construct is a Resource."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 126
          },
          "name": "isResource",
          "parameters": [
            {
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
            "stability": "stable",
            "summary": "Apply the given removal policy to this resource."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 231
          },
          "name": "applyRemovalPolicy",
          "overrides": "@aws-cdk/core.IResource",
          "parameters": [
            {
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/core.RemovalPolicy"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 239
          },
          "name": "generatePhysicalName",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
            "stability": "stable",
            "summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`)."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 288
          },
          "name": "getResourceArnAttribute",
          "parameters": [
            {
              "docs": {
                "remarks": "Commonly it will be called \"Arn\" (e.g. `resource.attrArn`), but sometimes\nit's the CFN resource's `ref`.",
                "summary": "The CFN attribute which resolves to the ARN of the resource."
              },
              "name": "arnAttr",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "You must\nreference `this.physicalName` somewhere within the ARN in order for\ncross-environment references to work.",
                "summary": "The format of the ARN of this resource."
              },
              "name": "arnComponents",
              "type": {
                "fqn": "@aws-cdk/core.ArnComponents"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
            "stability": "stable",
            "summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`)."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 254
          },
          "name": "getResourceNameAttribute",
          "parameters": [
            {
              "docs": {
                "remarks": "Commonly this is the resource's `ref`.",
                "summary": "The CFN attribute which resolves to the resource's name."
              },
              "name": "nameAttr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Resource",
      "properties": [
        {
          "docs": {
            "remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
            "stability": "stable",
            "summary": "The environment this resource belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 138
          },
          "name": "env",
          "overrides": "@aws-cdk/core.IResource",
          "type": {
            "fqn": "@aws-cdk/core.ResourceEnvironment"
          }
        },
        {
          "docs": {
            "remarks": "This value will resolve to one of the following:\n- a concrete value (e.g. `\"my-awesome-bucket\"`)\n- `undefined`, when a name should be generated by CloudFormation\n- a concrete name generated automatically during synthesis, in\n  cross-environment scenarios.",
            "stability": "stable",
            "summary": "Returns a string-encoded token that resolves to the physical name that should be passed to the CloudFormation resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 151
          },
          "name": "physicalName",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The stack in which this resource is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 137
          },
          "name": "stack",
          "overrides": "@aws-cdk/core.IResource",
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        }
      ],
      "symbolId": "lib/resource:Resource"
    },
    "@aws-cdk/core.ResourceEnvironment": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "Used as the return value for the `IResource.env` property.",
        "stability": "stable",
        "summary": "Represents the environment a given resource lives in."
      },
      "fqn": "@aws-cdk/core.ResourceEnvironment",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 21
      },
      "name": "ResourceEnvironment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Since this can be a Token\n(for example, when the account is CloudFormation's AWS::AccountId intrinsic),\nmake sure to use Token.compareStrings()\ninstead of just comparing the values for equality.",
            "stability": "stable",
            "summary": "The AWS account ID that this resource belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 29
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Since this can be a Token\n(for example, when the region is CloudFormation's AWS::Region intrinsic),\nmake sure to use Token.compareStrings()\ninstead of just comparing the values for equality.",
            "stability": "stable",
            "summary": "The AWS region that this resource belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 38
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/resource:ResourceEnvironment"
    },
    "@aws-cdk/core.ResourceProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for `Resource`."
      },
      "fqn": "@aws-cdk/core.ResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 78
      },
      "name": "ResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the resource is in the same account as the stack it belongs to",
            "stability": "stable",
            "summary": "The AWS account ID this resource belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 97
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- take environment from `account`, `region` parameters, or use Stack environment.",
            "remarks": "The ARN is parsed and the account and region are taken from the ARN.\nThis should be used for imported resources.\n\nCannot be supplied together with either `account` or `region`.",
            "stability": "stable",
            "summary": "ARN to deduce region and account from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 116
          },
          "name": "environmentFromArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The physical name will be allocated by CloudFormation at deployment time",
            "remarks": "- `undefined` implies that a physical name will be allocated by\n  CloudFormation during deployment.\n- a concrete value implies a specific physical name\n- `PhysicalName.GENERATE_IF_NEEDED` is a marker that indicates that a physical will only be generated\n  by the CDK if it is needed for cross-environment references. Otherwise, it will be allocated by CloudFormation.",
            "stability": "stable",
            "summary": "The value passed in by users to the physical name prop of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 90
          },
          "name": "physicalName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the resource is in the same region as the stack it belongs to",
            "stability": "stable",
            "summary": "The AWS region this resource belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 104
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/resource:ResourceProps"
    },
    "@aws-cdk/core.ReverseOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the 'reverse()' operation."
      },
      "fqn": "@aws-cdk/core.ReverseOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/token.ts",
        "line": 265
      },
      "name": "ReverseOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `false`, just return `undefined`.",
            "stability": "stable",
            "summary": "Fail if the given string is a concatenation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 273
          },
          "name": "failConcat",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/token:ReverseOptions"
    },
    "@aws-cdk/core.RoleOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for specifying a role."
      },
      "fqn": "@aws-cdk/core.RoleOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
        "line": 217
      },
      "name": "RoleOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN of the role to assume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 221
          },
          "name": "assumeRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external ID",
            "stability": "stable",
            "summary": "External ID to use when assuming the role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/asset-manifest-builder.ts",
            "line": 228
          },
          "name": "assumeRoleExternalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/asset-manifest-builder:RoleOptions"
    },
    "@aws-cdk/core.ScopedAws": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "These pseudo parameters are anchored to a stack somewhere in the construct\ntree, and their values will be exported automatically.",
        "stability": "stable",
        "summary": "Accessor for scoped pseudo parameters."
      },
      "fqn": "@aws-cdk/core.ScopedAws",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-pseudo.ts",
          "line": 41
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-pseudo.ts",
        "line": 40
      },
      "name": "ScopedAws",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 44
          },
          "name": "accountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 52
          },
          "name": "notificationArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 58
          },
          "name": "partition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 62
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 66
          },
          "name": "stackId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 70
          },
          "name": "stackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-pseudo.ts",
            "line": 48
          },
          "name": "urlSuffix",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-pseudo:ScopedAws"
    },
    "@aws-cdk/core.SecretValue": {
      "assembly": "@aws-cdk/core",
      "base": "@aws-cdk/core.Intrinsic",
      "docs": {
        "remarks": "Constructs that need secrets will declare parameters of type `SecretValue`.\n\nThe actual values of these secrets should not be committed to your\nrepository, or even end up in the synthesized CloudFormation template. Instead, you should\nstore them in an external system like AWS Secrets Manager or SSM Parameter\nStore, and you can reference them by calling `SecretValue.secretsManager()` or\n`SecretValue.ssmSecure()`.\n\nYou can use `SecretValue.unsafePlainText()` to construct a `SecretValue` from a\nliteral string, but doing so is highly discouraged.\n\nTo make sure secret values don't accidentally end up in readable parts\nof your infrastructure definition (such as the environment variables\nof an AWS Lambda Function, where everyone who can read the function\ndefinition has access to the secret), using secret values directly is not\nallowed. You must pass them to constructs that accept `SecretValue`\nproperties, which are guaranteed to use the value only in CloudFormation\nproperties that are write-only.\n\nIf you are sure that what you are doing is safe, you can call\n`secretValue.unsafeUnwrap()` to access the protected string of the secret\nvalue.\n\n(If you are writing something like an AWS Lambda Function and need to access\na secret inside it, make the API call to `GetSecretValue` directly inside\nyour Lamba's code, instead of using environment variables.)",
        "stability": "stable",
        "summary": "Work with secret values in the CDK."
      },
      "fqn": "@aws-cdk/core.SecretValue",
      "initializer": {
        "docs": {
          "remarks": "Do not use the constructor directly: use one of the factory functions on the class\ninstead.",
          "stability": "stable",
          "summary": "Construct a SecretValue (do not use!)."
        },
        "locationInModule": {
          "filename": "lib/secret-value.ts",
          "line": 189
        },
        "parameters": [
          {
            "name": "protectedValue",
            "type": {
              "primitive": "any"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.IntrinsicProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret-value.ts",
        "line": 41
      },
      "methods": [
        {
          "docs": {
            "remarks": "If possible, use `SecretValue.ssmSecure` or `SecretValue.secretsManager` directly.",
            "stability": "stable",
            "summary": "Obtain the secret value through a CloudFormation dynamic reference."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 149
          },
          "name": "cfnDynamicReference",
          "parameters": [
            {
              "docs": {
                "summary": "The dynamic reference to use."
              },
              "name": "ref",
              "type": {
                "fqn": "@aws-cdk/core.CfnDynamicReference"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Generally, this is not a recommended approach. AWS Secrets Manager is the\nrecommended way to reference secrets.",
            "stability": "stable",
            "summary": "Obtain the secret value through a CloudFormation parameter."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 161
          },
          "name": "cfnParameter",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFormation parameter to use."
              },
              "name": "param",
              "type": {
                "fqn": "@aws-cdk/core.CfnParameter"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Test whether an object is a SecretValue."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 45
          },
          "name": "isSecretValue",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `unsafePlainText()` instead.",
            "remarks": "Do not use this method for any secrets that you care about! The value\nwill be visible to anyone who has access to the CloudFormation template\n(via the AWS Console, SDKs, or CLI).\n\nThe only reasonable use case for using this method is when you are testing.",
            "stability": "deprecated",
            "summary": "Construct a literal secret value for use with secret-aware constructs."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 60
          },
          "name": "plainText",
          "parameters": [
            {
              "name": "secret",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use a resource's output as secret value."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 172
          },
          "name": "resourceAttribute",
          "parameters": [
            {
              "name": "attr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If you rotate the value in the Secret, you must also change at least one property\non the resource where you are using the secret, to force CloudFormation to re-read the secret.",
            "stability": "stable",
            "summary": "Creates a `SecretValue` with a value which is dynamically loaded from AWS Secrets Manager."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 97
          },
          "name": "secretsManager",
          "parameters": [
            {
              "docs": {
                "summary": "The ID or ARN of the secret."
              },
              "name": "secretId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SecretsManagerSecretOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This secret source in only supported in a limited set of resources and\nproperties. [Click here for the list of supported\nproperties](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html#template-parameters-dynamic-patterns-resources).",
            "stability": "stable",
            "summary": "Use a secret value stored from a Systems Manager (SSM) parameter."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 136
          },
          "name": "ssmSecure",
          "parameters": [
            {
              "docs": {
                "remarks": "The parameter name is case-sensitive.",
                "summary": "The name of the parameter in the Systems Manager Parameter Store."
              },
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "If you don't specify the exact version, AWS CloudFormation uses the\nlatest version of the parameter.",
                "summary": "An integer that specifies the version of the parameter to use."
              },
              "name": "version",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "declare const secret: SecretValue;\nconst jsonSecret = {\n  username: SecretValue.unsafePlainText('myUsername'),\n  password: secret,\n};",
            "remarks": "Do not use this method for any secrets that you care about! The value\nwill be visible to anyone who has access to the CloudFormation template\n(via the AWS Console, SDKs, or CLI).\n\nThe primary use case for using this method is when you are testing.\n\nThe other use case where this is appropriate is when constructing a JSON secret.\nFor example, a JSON secret might have multiple fields where only some are actual\nsecret values.",
            "stability": "stable",
            "summary": "Construct a literal secret value for use with secret-aware constructs."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 84
          },
          "name": "unsafePlainText",
          "parameters": [
            {
              "name": "secret",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If the feature flag is not set, resolve as normal. Otherwise, throw a descriptive\nerror that the usage guard is missing.",
            "stability": "stable",
            "summary": "Resolve the secret."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 220
          },
          "name": "resolve",
          "overrides": "@aws-cdk/core.Intrinsic",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "remarks": "Call this to indicate that you want to use the secret value held by this\nobject in an unchecked way. If you don't call this method, using the secret\nvalue directly in a string context or as a property value somewhere will\nproduce an error.\n\nThis method has 'unsafe' in the name on purpose! Make sure that the\nconstruct property you are using the returned value in is does not end up\nin a place in your AWS infrastructure where it could be read by anyone\nunexpected.\n\nWhen in doubt, don't call this method and only pass the object to constructs that\naccept `SecretValue` parameters.",
            "stability": "stable",
            "summary": "Disable usage protection on this secret."
          },
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 210
          },
          "name": "unsafeUnwrap",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "SecretValue",
      "symbolId": "lib/secret-value:SecretValue"
    },
    "@aws-cdk/core.SecretsManagerSecretOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for referencing a secret value from Secrets Manager."
      },
      "fqn": "@aws-cdk/core.SecretsManagerSecretOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret-value.ts",
        "line": 233
      },
      "name": "SecretsManagerSecretOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- returns all the content stored in the Secrets Manager secret.",
            "remarks": "This can only be used if the secret\nstores a JSON object.",
            "stability": "stable",
            "summary": "The key of a JSON field to retrieve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 258
          },
          "name": "jsonField",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AWSCURRENT",
            "remarks": "Can specify at most one of `versionId` and `versionStage`.",
            "stability": "stable",
            "summary": "Specifies the unique identifier of the version of the secret you want to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 250
          },
          "name": "versionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AWSCURRENT",
            "remarks": "Can specify at most one of `versionId` and `versionStage`.",
            "stability": "stable",
            "summary": "Specifies the secret version that you want to retrieve by the staging label attached to the version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-value.ts",
            "line": 241
          },
          "name": "versionStage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secret-value:SecretsManagerSecretOptions"
    },
    "@aws-cdk/core.Size": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "The amount can be specified either as a literal value (e.g: `10`) which\ncannot be negative, or as an unresolved number token.\n\nWhen the amount is passed as a token, unit conversion is not possible.",
        "stability": "stable",
        "summary": "Represents the amount of digital storage."
      },
      "fqn": "@aws-cdk/core.Size",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/size.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "returns": "a new `Size` instance",
            "stability": "stable",
            "summary": "Create a Storage representing an amount bytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 19
          },
          "name": "bytes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of bytes to be represented."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 GiB = 1024 MiB",
            "returns": "a new `Size` instance",
            "stability": "stable",
            "summary": "Create a Storage representing an amount gibibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 55
          },
          "name": "gibibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of gibibytes to be represented."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 KiB = 1024 bytes",
            "returns": "a new `Size` instance",
            "stability": "stable",
            "summary": "Create a Storage representing an amount kibibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 31
          },
          "name": "kibibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of kibibytes to be represented."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 MiB = 1024 KiB",
            "returns": "a new `Size` instance",
            "stability": "stable",
            "summary": "Create a Storage representing an amount mebibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 43
          },
          "name": "mebibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of mebibytes to be represented."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `pebibytes` instead",
            "remarks": "1 PiB = 1024 TiB",
            "stability": "deprecated",
            "summary": "Create a Storage representing an amount pebibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 77
          },
          "name": "pebibyte",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 PiB = 1024 TiB",
            "returns": "a new `Size` instance",
            "stability": "stable",
            "summary": "Create a Storage representing an amount pebibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 89
          },
          "name": "pebibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of pebibytes to be represented."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 TiB = 1024 GiB",
            "returns": "a new `Size` instance",
            "stability": "stable",
            "summary": "Create a Storage representing an amount tebibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 67
          },
          "name": "tebibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of tebibytes to be represented."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Checks if size is a token or a resolvable object."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 173
          },
          "name": "isUnresolved",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "returns": "the quantity expressed in bytes",
            "stability": "stable",
            "summary": "Return this storage as a total number of bytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 111
          },
          "name": "toBytes",
          "parameters": [
            {
              "docs": {
                "summary": "the conversion options."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the quantity of bytes expressed in gibibytes",
            "stability": "stable",
            "summary": "Return this storage as a total number of gibibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 144
          },
          "name": "toGibibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the conversion options."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the quantity of bytes expressed in kibibytes",
            "stability": "stable",
            "summary": "Return this storage as a total number of kibibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 122
          },
          "name": "toKibibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the conversion options."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the quantity of bytes expressed in mebibytes",
            "stability": "stable",
            "summary": "Return this storage as a total number of mebibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 133
          },
          "name": "toMebibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the conversion options."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the quantity of bytes expressed in pebibytes",
            "stability": "stable",
            "summary": "Return this storage as a total number of pebibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 166
          },
          "name": "toPebibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the conversion options."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the quantity of bytes expressed in tebibytes",
            "stability": "stable",
            "summary": "Return this storage as a total number of tebibytes."
          },
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 155
          },
          "name": "toTebibytes",
          "parameters": [
            {
              "docs": {
                "summary": "the conversion options."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        }
      ],
      "name": "Size",
      "symbolId": "lib/size:Size"
    },
    "@aws-cdk/core.SizeConversionOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for how to convert time to a different unit."
      },
      "fqn": "@aws-cdk/core.SizeConversionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/size.ts",
        "line": 193
      },
      "name": "SizeConversionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "SizeRoundingBehavior.FAIL",
            "stability": "stable",
            "summary": "How conversions should behave when it encounters a non-integer result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/size.ts",
            "line": 198
          },
          "name": "rounding",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SizeRoundingBehavior"
          }
        }
      ],
      "symbolId": "lib/size:SizeConversionOptions"
    },
    "@aws-cdk/core.SizeRoundingBehavior": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Rounding behaviour when converting between units of `Size`."
      },
      "fqn": "@aws-cdk/core.SizeRoundingBehavior",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/size.ts",
        "line": 181
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Fail the conversion if the result is not an integer."
          },
          "name": "FAIL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If the result is not an integer, round it to the closest integer less than the result."
          },
          "name": "FLOOR"
        },
        {
          "docs": {
            "remarks": "Return even if the result is a fraction.",
            "stability": "stable",
            "summary": "Don't round."
          },
          "name": "NONE"
        }
      ],
      "name": "SizeRoundingBehavior",
      "symbolId": "lib/size:SizeRoundingBehavior"
    },
    "@aws-cdk/core.Stack": {
      "assembly": "@aws-cdk/core",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A root construct which represents a single CloudFormation stack."
      },
      "fqn": "@aws-cdk/core.Stack",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new stack."
        },
        "locationInModule": {
          "filename": "lib/stack.ts",
          "line": 370
        },
        "parameters": [
          {
            "docs": {
              "summary": "Parent of this stack, usually an `App` or a `Stage`, but could be any construct."
            },
            "name": "scope",
            "optional": true,
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "If `stackName` is not explicitly\ndefined, this id (and any parent IDs) will be used to determine the\nphysical ID of the stack.",
              "summary": "The construct ID of this stack."
            },
            "name": "id",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "Stack properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.StackProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.ITaggable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack.ts",
        "line": 179
      },
      "methods": [
        {
          "docs": {
            "remarks": "We do attribute detection since we can't reliably use 'instanceof'.",
            "stability": "stable",
            "summary": "Return whether the given object is a Stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 185
          },
          "name": "isStack",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Fails if there is no stack up the tree.",
            "stability": "stable",
            "summary": "Looks up the first stack scope in which `construct` is defined."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 193
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "The construct to start the search from."
              },
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Stack"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This can be used to define dependencies between any two stacks within an\napp, and also supports nested stacks.",
            "stability": "stable",
            "summary": "Add a dependency between this stack and another stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 614
          },
          "name": "addDependency",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "reason",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use `stack.synthesizer.addDockerImageAsset()` if you are calling,\nand a different `IStackSynthesizer` class if you are implementing.",
            "stability": "deprecated",
            "summary": "Register a docker image asset on this Stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 823
          },
          "name": "addDockerImageAsset",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "docs": {
            "deprecated": "Use `stack.synthesizer.addFileAsset()` if you are calling,\nand a different IStackSynthesizer class if you are implementing.",
            "stability": "deprecated",
            "summary": "Register a file asset on this Stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 813
          },
          "name": "addFileAsset",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "These get translated to the Metadata section of the generated template.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html",
            "stability": "stable",
            "summary": "Adds an arbitary key-value pair, with information you want to record about the stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 870
          },
          "name": "addMetadata",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "example": "declare const stack: Stack;\n\nstack.addTransform('AWS::Serverless-2016-10-31')",
            "remarks": "Duplicate values are removed when stack is synthesized.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html",
            "stability": "stable",
            "summary": "Add a Transform to this stack. A Transform is a macro that AWS CloudFormation uses to process your template."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 857
          },
          "name": "addTransform",
          "parameters": [
            {
              "docs": {
                "summary": "The transform to add."
              },
              "name": "transform",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "By default, uses\nthe `HashedAddressingScheme` but this method can be overridden to customize\nthis behavior.\n\nIn order to make sure logical IDs are unique and stable, we hash the resource\nconstruct tree path (i.e. toplevel/secondlevel/.../myresource) and add it as\na suffix to the path components joined without a separator (CloudFormation\nIDs only allow alphanumeric characters).\n\nThe result will be:\n\n  <path.join('')><md5(path.join('/')>\n    \"human\"      \"hash\"\n\nIf the \"human\" part of the ID exceeds 240 characters, we simply trim it so\nthe total ID doesn't exceed CloudFormation's 255 character limit.\n\nWe only take 8 characters from the md5 hash (0.000005 chance of collision).\n\nSpecial cases:\n\n- If the path only contains a single component (i.e. it's a top-level\n  resource), we won't add the hash to it. The hash is not needed for\n  disambiguation and also, it allows for a more straightforward migration an\n  existing CloudFormation template to a CDK stack without logical ID changes\n  (or renames).\n- For aesthetic reasons, if the last components of the path are the same\n  (i.e. `L1/L2/Pipeline/Pipeline`), they will be de-duplicated to make the\n  resulting human portion of the ID more pleasing: `L1L2Pipeline<HASH>`\n  instead of `L1L2PipelinePipeline<HASH>`\n- If a component is named \"Default\" it will be omitted from the path. This\n  allows refactoring higher level abstractions around constructs without affecting\n  the IDs of already deployed resources.\n- If a component is named \"Resource\" it will be omitted from the user-visible\n  path, but included in the hash. This reduces visual noise in the human readable\n  part of the identifier.",
            "stability": "stable",
            "summary": "Returns the naming scheme used to allocate logical IDs."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1270
          },
          "name": "allocateLogicalId",
          "parameters": [
            {
              "docs": {
                "summary": "The element for which the logical ID is allocated."
              },
              "name": "cfnElement",
              "type": {
                "fqn": "@aws-cdk/core.CfnElement"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns a string list representing the corresponding `Fn.importValue()`\nexpression for this Export. The export expression is automatically wrapped with an\n`Fn::Join` and the import value with an `Fn::Split`, since CloudFormation can only\nexport strings. You can control the name for the export by passing the `name` option.\n\nIf you don't supply a value for `name`, the value you're exporting must be\na Resource attribute (for example: `bucket.bucketName`) and it will be\ngiven the same name as the automatic cross-stack reference that would be created\nif you used the attribute in another Stack.\n\nOne of the uses for this method is to *remove* the relationship between\ntwo Stacks established by automatic cross-stack references. It will\ntemporarily ensure that the CloudFormation Export still exists while you\nremove the reference from the consuming stack. After that, you can remove\nthe resource and the manual export.\n\nSee `exportValue` for an example of this process.",
            "stability": "stable",
            "summary": "Create a CloudFormation Export for a string list value."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1197
          },
          "name": "exportStringListValue",
          "parameters": [
            {
              "name": "exportedValue",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.ExportValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns a string representing the corresponding `Fn.importValue()`\nexpression for this Export. You can control the name for the export by\npassing the `name` option.\n\nIf you don't supply a value for `name`, the value you're exporting must be\na Resource attribute (for example: `bucket.bucketName`) and it will be\ngiven the same name as the automatic cross-stack reference that would be created\nif you used the attribute in another Stack.\n\nOne of the uses for this method is to *remove* the relationship between\ntwo Stacks established by automatic cross-stack references. It will\ntemporarily ensure that the CloudFormation Export still exists while you\nremove the reference from the consuming stack. After that, you can remove\nthe resource and the manual export.\n\n## Example\n\nHere is how the process works. Let's say there are two stacks,\n`producerStack` and `consumerStack`, and `producerStack` has a bucket\ncalled `bucket`, which is referenced by `consumerStack` (perhaps because\nan AWS Lambda Function writes into it, or something like that).\n\nIt is not safe to remove `producerStack.bucket` because as the bucket is being\ndeleted, `consumerStack` might still be using it.\n\nInstead, the process takes two deployments:\n\n### Deployment 1: break the relationship\n\n- Make sure `consumerStack` no longer references `bucket.bucketName` (maybe the consumer\n  stack now uses its own bucket, or it writes to an AWS DynamoDB table, or maybe you just\n  remove the Lambda Function altogether).\n- In the `ProducerStack` class, call `this.exportValue(this.bucket.bucketName)`. This\n  will make sure the CloudFormation Export continues to exist while the relationship\n  between the two stacks is being broken.\n- Deploy (this will effectively only change the `consumerStack`, but it's safe to deploy both).\n\n### Deployment 2: remove the bucket resource\n\n- You are now free to remove the `bucket` resource from `producerStack`.\n- Don't forget to remove the `exportValue()` call as well.\n- Deploy again (this time only the `producerStack` will be changed -- the bucket will be deleted).",
            "stability": "stable",
            "summary": "Create a CloudFormation Export for a string value."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1148
          },
          "name": "exportValue",
          "parameters": [
            {
              "name": "exportedValue",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.ExportValueOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "If `partition`, `region` or `account` are not specified, the stack's\npartition, region and account will be used.\n\nIf any component is the empty string, an empty string will be inserted\ninto the generated ARN at the location that component corresponds to.\n\nThe ARN will be formatted as follows:\n\n  arn:{partition}:{service}:{region}:{account}:{resource}{sep}{resource-name}\n\nThe required ARN pieces that are omitted will be taken from the stack that\nthe 'scope' is attached to. If all ARN pieces are supplied, the supplied scope\ncan be 'undefined'.",
            "stability": "stable",
            "summary": "Creates an ARN from components."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 706
          },
          "name": "formatArn",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/core.ArnComponents"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method is called when a `CfnElement` is created and used to render the\ninitial logical identity of resources. Logical ID renames are applied at\nthis stage.\n\nThis method uses the protected method `allocateLogicalId` to render the\nlogical ID for an element. To modify the naming scheme, extend the `Stack`\nclass and override this method.",
            "stability": "stable",
            "summary": "Allocates a stack-unique CloudFormation-compatible logical identity for a specific resource."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 603
          },
          "name": "getLogicalId",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFormation element for which a logical identity is needed."
              },
              "name": "element",
              "type": {
                "fqn": "@aws-cdk/core.CfnElement"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use splitArn instead",
            "remarks": "IF THE ARN IS A CONCRETE STRING...\n\n...it will be parsed and validated. The separator (`sep`) will be set to '/'\nif the 6th component includes a '/', in which case, `resource` will be set\nto the value before the '/' and `resourceName` will be the rest. In case\nthere is no '/', `resource` will be set to the 6th components and\n`resourceName` will be set to the rest of the string.\n\nIF THE ARN IS A TOKEN...\n\n...it cannot be validated, since we don't have the actual value yet at the\ntime of this function call. You will have to supply `sepIfToken` and\nwhether or not ARNs of the expected format usually have resource names\nin order to parse it properly. The resulting `ArnComponents` object will\ncontain tokens for the subexpressions of the ARN, not string literals.\n\nIf the resource name could possibly contain the separator char, the actual\nresource name cannot be properly parsed. This only occurs if the separator\nchar is '/', and happens for example for S3 object ARNs, IAM Role ARNs,\nIAM OIDC Provider ARNs, etc. To properly extract the resource name from a\nTokenized ARN, you must know the resource type and call\n`Arn.extractResourceName`.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN.",
            "stability": "deprecated",
            "summary": "Given an ARN, parses it and returns components."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 750
          },
          "name": "parseArn",
          "parameters": [
            {
              "docs": {
                "summary": "The ARN string to parse."
              },
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The separator used to separate resource from resourceName."
              },
              "name": "sepIfToken",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "For\nexample, SNS Topics ARNs have the 'resource' component contain the topic\nname, and no 'resourceName' component.",
                "summary": "Whether there is a name component in the ARN at all."
              },
              "name": "hasName",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ArnComponents"
            }
          }
        },
        {
          "docs": {
            "deprecated": "cross reference handling has been moved to `App.prepare()`.",
            "returns": "reference itself without any change",
            "see": "https://github.com/aws/aws-cdk/pull/7187",
            "stability": "deprecated",
            "summary": "Deprecated."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1344
          },
          "name": "prepareCrossReference",
          "parameters": [
            {
              "name": "_sourceStack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "reference",
              "type": {
                "fqn": "@aws-cdk/core.Reference"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          }
        },
        {
          "docs": {
            "remarks": "Will return a definite value only if the region of the current stack is resolved.\nIf not, a lookup map will be added to the stack and the lookup will be done at\nCDK deployment time.\n\nWhat regions will be included in the lookup map is controlled by the\n`@aws-cdk/core:target-partitions` context value: it must be set to a list\nof partitions, and only regions from the given partitions will be included.\nIf no such context key is set, all regions will be included.\n\nThis function is intended to be used by construct library authors. Application\nbuilders can rely on the abstractions offered by construct libraries and do\nnot have to worry about regional facts.\n\nIf `defaultValue` is not given, it is an error if the fact is unknown for\nthe given region.",
            "stability": "stable",
            "summary": "Look up a fact value for the given fact for the region of this stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1079
          },
          "name": "regionalFact",
          "parameters": [
            {
              "name": "factName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "defaultValue",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "To modify the naming scheme strategy, extend the `Stack` class and\noverride the `allocateLogicalId` method.",
            "stability": "stable",
            "summary": "Rename a generated logical identities."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 584
          },
          "name": "renameLogicalId",
          "parameters": [
            {
              "name": "oldId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "newId",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "use `reportMissingContextKey()`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 559
          },
          "name": "reportMissingContext",
          "parameters": [
            {
              "name": "report",
              "type": {
                "fqn": "@aws-cdk/cx-api.MissingContext"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Contains instructions which will be emitted into the cloud assembly on how\nthe key should be supplied.",
            "stability": "stable",
            "summary": "Indicate that a context key was expected."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 574
          },
          "name": "reportMissingContextKey",
          "parameters": [
            {
              "docs": {
                "summary": "The set of parameters needed to obtain the context."
              },
              "name": "report",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.MissingContext"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Resolve a tokenized value in the context of the current stack."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 532
          },
          "name": "resolve",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "remarks": "Works both if 'arn' is a string like 'arn:aws:s3:::bucket',\nand a Token representing a dynamic CloudFormation expression\n(in which case the returned components will also be dynamic CloudFormation expressions,\nencoded as Tokens).",
            "stability": "stable",
            "summary": "Splits the provided ARN into its components."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 764
          },
          "name": "splitArn",
          "parameters": [
            {
              "docs": {
                "summary": "the ARN to split into its components."
              },
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the expected format of 'arn' - depends on what format the service 'arn' represents uses."
              },
              "name": "arnFormat",
              "type": {
                "fqn": "@aws-cdk/core.ArnFormat"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ArnComponents"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Convert an object, potentially containing tokens, to a JSON string."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 544
          },
          "name": "toJsonString",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "space",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Convert an object, potentially containing tokens, to a YAML string."
          },
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 551
          },
          "name": "toYamlString",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Stack",
      "properties": [
        {
          "docs": {
            "remarks": "This value is resolved according to the following rules:\n\n1. The value provided to `env.account` when the stack is defined. This can\n   either be a concrete account (e.g. `585695031111`) or the\n   `Aws.ACCOUNT_ID` token.\n3. `Aws.ACCOUNT_ID`, which represents the CloudFormation intrinsic reference\n   `{ \"Ref\": \"AWS::AccountId\" }` encoded as a string token.\n\nPreferably, you should use the return value as an opaque string and not\nattempt to parse it to implement your logic. If you do, you must first\ncheck that it is a concrete value an not an unresolved token. If this\nvalue is an unresolved token (`Token.isUnresolved(stack.account)` returns\n`true`), this implies that the user wishes that this stack will synthesize\ninto a **account-agnostic template**. In this case, your code should either\nfail (throw an error, emit a synth error using `Annotations.of(construct).addError()`) or\nimplement some other region-agnostic behavior.",
            "stability": "stable",
            "summary": "The AWS account into which this stack will be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 278
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the cloud assembly artifact for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 318
          },
          "name": "artifactId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "If the stack is environment-agnostic (either account and/or region are\ntokens), this property will return an array with 2 tokens that will resolve\nat deploy-time to the first two availability zones returned from CloudFormation's\n`Fn::GetAZs` intrinsic function.\n\nIf they are not available in the context, returns a set of dummy values and\nreports them as missing, and let the CLI resolve them by calling EC2\n`DescribeAvailabilityZones` on the target environment.\n\nTo specify a different strategy for selecting availability zones override this method.",
            "stability": "stable",
            "summary": "Returns the list of AZs that are available in the AWS environment (account/region) associated with this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 783
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates whether the stack requires bundling or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 1491
          },
          "name": "bundlingRequired",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the stacks this stack depends on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 621
          },
          "name": "dependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.Stack"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "In the form\n`aws://account/region`. Use `stack.account` and `stack.region` to obtain\nthe specific values, no need to parse.\n\nYou can use this value to determine if two stacks are targeting the same\nenvironment.\n\nIf either `stack.account` or `stack.region` are not concrete values (e.g.\n`Aws.ACCOUNT_ID` or `Aws.REGION`) the special strings `unknown-account` and/or\n`unknown-region` will be used respectively to indicate this stack is\nregion/account-agnostic.",
            "stability": "stable",
            "summary": "The environment coordinates in which this stack is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 293
          },
          "name": "environment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if this is a nested stack, in which case `parentStack` will include a reference to it's parent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 685
          },
          "name": "nested",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the list of notification Amazon Resource Names (ARNs) for the current stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 678
          },
          "name": "notificationArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The partition in which this stack is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 644
          },
          "name": "partition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This value is resolved according to the following rules:\n\n1. The value provided to `env.region` when the stack is defined. This can\n   either be a concrete region (e.g. `us-west-2`) or the `Aws.REGION`\n   token.\n3. `Aws.REGION`, which is represents the CloudFormation intrinsic reference\n   `{ \"Ref\": \"AWS::Region\" }` encoded as a string token.\n\nPreferably, you should use the return value as an opaque string and not\nattempt to parse it to implement your logic. If you do, you must first\ncheck that it is a concrete value an not an unresolved token. If this\nvalue is an unresolved token (`Token.isUnresolved(stack.region)` returns\n`true`), this implies that the user wishes that this stack will synthesize\ninto a **region-agnostic template**. In this case, your code should either\nfail (throw an error, emit a synth error using `Annotations.of(construct).addError()`) or\nimplement some other region-agnostic behavior.",
            "stability": "stable",
            "summary": "The AWS region into which this stack will be deployed (e.g. `us-west-2`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 256
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "example": "// After resolving, looks like\n'arn:aws:cloudformation:us-west-2:123456789012:stack/teststack/51af3dc0-da77-11e4-872e-1234567db123'",
            "stability": "stable",
            "summary": "The ID of the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 671
          },
          "name": "stackId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This is either the name defined explicitly in the `stackName` prop or\nallocated based on the stack's location in the construct tree. Stacks that\nare directly defined under the app use their construct `id` as their stack\nname. Stacks that are defined deeper within the tree will use a hashed naming\nscheme based on the construct path to ensure uniqueness.\n\nIf you wish to obtain the deploy-time AWS::StackName intrinsic,\nyou can use `Aws.STACK_NAME` directly.",
            "stability": "stable",
            "summary": "The concrete CloudFormation physical stack name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 637
          },
          "name": "stackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesis method for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 324
          },
          "name": "synthesizer",
          "type": {
            "fqn": "@aws-cdk/core.IStackSynthesizer"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Tags to be applied to the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 229
          },
          "name": "tags",
          "overrides": "@aws-cdk/core.ITaggable",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "remarks": "Example value: `MyStack.template.json`",
            "stability": "stable",
            "summary": "The name of the CloudFormation template file emitted to the output directory during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 313
          },
          "name": "templateFile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Options for CloudFormation template (like version, transform, description)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 234
          },
          "name": "templateOptions",
          "type": {
            "fqn": "@aws-cdk/core.ITemplateOptions"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Amazon domain suffix for the region in which this stack is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 659
          },
          "name": "urlSuffix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If this is a nested stack, returns it's parent stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 830
          },
          "name": "nestedStackParent",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        },
        {
          "docs": {
            "remarks": "`undefined` for top-level (non-nested) stacks.",
            "stability": "stable",
            "summary": "If this is a nested stack, this represents its `AWS::CloudFormation::Stack` resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 305
          },
          "name": "nestedStackResource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnResource"
          }
        },
        {
          "docs": {
            "deprecated": "use `nestedStackParent`",
            "stability": "deprecated",
            "summary": "Returns the parent of a nested stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 839
          },
          "name": "parentStack",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether termination protection is enabled for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 298
          },
          "name": "terminationProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/stack:Stack"
    },
    "@aws-cdk/core.StackProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.StackProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack.ts",
        "line": 35
      },
      "name": "StackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "`analyticsReporting` setting of containing `App`, or value of\n'aws:cdk:version-reporting' context key",
            "stability": "stable",
            "summary": "Include runtime versioning information in this Stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 153
          },
          "name": "analyticsReporting",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Enabling this will create a CloudFormation custom resource\nin both the producing stack and consuming stack in order to perform the export/import\n\nThis feature is currently experimental",
            "stability": "stable",
            "summary": "Enable this flag to allow native cross region stack references."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 165
          },
          "name": "crossRegionReferences",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "A description of the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 41
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The environment of the containing `Stage` if available,\notherwise create the stack will be environment-agnostic.",
            "example": "// Use a concrete account and region to deploy this stack to:\n// `.account` and `.region` will simply return these values.\nnew Stack(app, 'Stack1', {\n  env: {\n    account: '123456789012',\n    region: 'us-east-1'\n  },\n});\n\n// Use the CLI's current credentials to determine the target environment:\n// `.account` and `.region` will reflect the account+region the CLI\n// is configured to use (based on the user CLI credentials)\nnew Stack(app, 'Stack2', {\n  env: {\n    account: process.env.CDK_DEFAULT_ACCOUNT,\n    region: process.env.CDK_DEFAULT_REGION\n  },\n});\n\n// Define multiple stacks stage associated with an environment\nconst myStage = new Stage(app, 'MyStage', {\n  env: {\n    account: '123456789012',\n    region: 'us-east-1'\n  }\n});\n\n// both of these stacks will use the stage's account/region:\n// `.account` and `.region` will resolve to the concrete values as above\nnew MyStack(myStage, 'Stack1');\nnew YourStack(myStage, 'Stack2');\n\n// Define an environment-agnostic stack:\n// `.account` and `.region` will resolve to `{ \"Ref\": \"AWS::AccountId\" }` and `{ \"Ref\": \"AWS::Region\" }` respectively.\n// which will only resolve to actual values by CloudFormation during deployment.\nnew MyStack(app, 'Stack1');",
            "remarks": "Set the `region`/`account` fields of `env` to either a concrete value to\nselect the indicated environment (recommended for production stacks), or to\nthe values of environment variables\n`CDK_DEFAULT_REGION`/`CDK_DEFAULT_ACCOUNT` to let the target environment\ndepend on the AWS credentials/configuration that the CDK CLI is executed\nunder (recommended for development stacks).\n\nIf the `Stack` is instantiated inside a `Stage`, any undefined\n`region`/`account` fields from `env` will default to the same field on the\nencompassing `Stage`, if configured there.\n\nIf either `region` or `account` are not set nor inherited from `Stage`, the\nStack will be considered \"*environment-agnostic*\"\". Environment-agnostic\nstacks can be deployed to any environment but may not be able to take\nadvantage of all features of the CDK. For example, they will not be able to\nuse environmental context lookups such as `ec2.Vpc.fromLookup` and will not\nautomatically translate Service Principals to the right format based on the\nenvironment's AWS partition, and other such enhancements.",
            "stability": "stable",
            "summary": "The AWS environment (account/region) where this stack will be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 107
          },
          "name": "env",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Environment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no permissions boundary is applied",
            "stability": "stable",
            "summary": "Options for applying a permissions boundary to all IAM Roles and Users created within this Stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 173
          },
          "name": "permissionsBoundary",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.PermissionsBoundary"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Derived from construct path.",
            "stability": "stable",
            "summary": "Name to deploy the stack with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 114
          },
          "name": "stackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The synthesizer specified on `App`, or `DefaultStackSynthesizer` otherwise.",
            "remarks": "The Stack Synthesizer controls aspects of synthesis and deployment,\nlike how assets are referenced and what IAM roles to use. For more\ninformation, see the README of the main CDK package.\n\nIf not specified, the `defaultStackSynthesizer` from `App` will be used.\nIf that is not specified, `DefaultStackSynthesizer` is used if\n`@aws-cdk/core:newStyleStackSynthesis` is set to `true` or the CDK major\nversion is v2. In CDK v1 `LegacyStackSynthesizer` is the default if no\nother synthesizer is specified.",
            "stability": "stable",
            "summary": "Synthesis method to use while deploying this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 138
          },
          "name": "synthesizer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.IStackSynthesizer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "stable",
            "summary": "Stack tags that will be applied to all the taggable resources and the stack itself."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 121
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to enable termination protection for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack.ts",
            "line": 145
          },
          "name": "terminationProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/stack:StackProps"
    },
    "@aws-cdk/core.StackSynthesizer": {
      "abstract": true,
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "This class needs to exist to provide public surface area for external\nimplementations of stack synthesizers. The protected methods give\naccess to functions that are otherwise @_internal to the framework\nand could not be accessed by external implementors.",
        "stability": "stable",
        "summary": "Base class for implementing an IStackSynthesizer."
      },
      "fqn": "@aws-cdk/core.StackSynthesizer",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@aws-cdk/core.IStackSynthesizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "remarks": "This will modify the template, so must be called before the stack is synthesized.",
            "stability": "stable",
            "summary": "Add a CfnRule to the bound stack that checks whether an SSM parameter exceeds a given version."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 135
          },
          "name": "addBootstrapVersionRule",
          "parameters": [
            {
              "name": "requiredVersion",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "bootstrapStackVersionSsmParameter",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a Docker Image Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 69
          },
          "name": "addDockerImageAsset",
          "overrides": "@aws-cdk/core.IStackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.DockerImageAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Returns the parameters that can be used to refer to the asset inside the template.\n\nThe synthesizer must rely on some out-of-band mechanism to make sure the given files\nare actually placed in the returned location before the deployment happens. This can\nbe by writing the instructions to the asset manifest (for use by the `cdk-assets` tool),\nby relying on the CLI to upload files (legacy behavior), or some other operator controlled\nmechanism.",
            "stability": "stable",
            "summary": "Register a File Asset."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 56
          },
          "name": "addFileAsset",
          "overrides": "@aws-cdk/core.IStackSynthesizer",
          "parameters": [
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/core.FileAssetSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Must be called before any of the other methods are called.",
            "stability": "stable",
            "summary": "Bind to the stack this environment is going to be used on."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 37
          },
          "name": "bind",
          "overrides": "@aws-cdk/core.IStackSynthesizer",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "If any of the fields contain placeholders, the result will be wrapped in a `Fn.sub`.",
            "stability": "stable",
            "summary": "Turn a docker asset location into a CloudFormation representation of that location."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 185
          },
          "name": "cloudFormationLocationFromDockerImageAsset",
          "parameters": [
            {
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageDestination"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.DockerImageAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "If any of the fields contain placeholders, the result will be wrapped in a `Fn.sub`.",
            "stability": "stable",
            "summary": "Turn a file asset location into a CloudFormation representation of that location."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 156
          },
          "name": "cloudFormationLocationFromFileAsset",
          "parameters": [
            {
              "name": "location",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.FileDestination"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetLocation"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use default settings to add a CloudFormationStackArtifact artifact to\nthe given synthesis session. The Stack artifact will control the settings for the\nCloudFormation deployment.",
            "stability": "stable",
            "summary": "Write the CloudFormation stack artifact to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 126
          },
          "name": "emitArtifact",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SynthesizeStackArtifactOptions"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "deprecated": "Use `emitArtifact` instead",
            "remarks": "Use default settings to add a CloudFormationStackArtifact artifact to\nthe given synthesis session.",
            "stability": "deprecated",
            "summary": "Write the stack artifact to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 115
          },
          "name": "emitStackArtifact",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.SynthesizeStackArtifactOptions"
              }
            }
          ],
          "protected": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Synthesize the associated stack to the session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 74
          },
          "name": "synthesize",
          "overrides": "@aws-cdk/core.IStackSynthesizer",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use `synthesizeTemplate` instead",
            "stability": "deprecated",
            "summary": "Have the stack write out its template."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 81
          },
          "name": "synthesizeStackTemplate",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "@aws-cdk/core.Stack"
              }
            },
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "remarks": "Return a descriptor that represents the stack template as a file asset\nsource, for adding to an asset manifest (if desired). This can be used to\nhave the asset manifest system (`cdk-assets`) upload the template to S3\nusing the appropriate role, so that afterwards only a CloudFormation\ndeployment is necessary.\n\nIf the template is uploaded as an asset, the `stackTemplateAssetObjectUrl`\nproperty should be set when calling `emitArtifact.`\n\nIf the template is *NOT* uploaded as an asset first and the template turns\nout to be >50KB, it will need to be uploaded to S3 anyway. At that point\nthe credentials will be the same identity that is doing the `UpdateStack`\ncall, which may not have the right permissions to write to S3.",
            "stability": "stable",
            "summary": "Write the stack template to the given session."
          },
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 102
          },
          "name": "synthesizeTemplate",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            },
            {
              "name": "lookupRoleArn",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.FileAssetSource"
            }
          }
        }
      ],
      "name": "StackSynthesizer",
      "properties": [
        {
          "docs": {
            "remarks": "Fails if the stack hasn't been bound yet.",
            "stability": "stable",
            "summary": "Retrieve the bound stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 144
          },
          "name": "boundStack",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The qualifier used to bootstrap this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 26
          },
          "name": "bootstrapQualifier",
          "optional": true,
          "overrides": "@aws-cdk/core.IStackSynthesizer",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/stack-synthesizer:StackSynthesizer"
    },
    "@aws-cdk/core.Stage": {
      "assembly": "@aws-cdk/core",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "Derive a subclass of `Stage` and use it to model a single instance of your\napplication.\n\nYou can then instantiate your subclass multiple times to model multiple\ncopies of your application which should be be deployed to different\nenvironments.",
        "stability": "stable",
        "summary": "An abstract application modeling unit consisting of Stacks that should be deployed together."
      },
      "fqn": "@aws-cdk/core.Stage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stage.ts",
          "line": 158
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.StageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stage.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Test whether the given construct is a stage."
          },
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 108
          },
          "name": "isStage",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If called\non a nested stage, returns its parent.",
            "stability": "stable",
            "summary": "Return the stage this construct is contained with, if available."
          },
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 100
          },
          "name": "of",
          "parameters": [
            {
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.Stage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Once an assembly has been synthesized, it cannot be modified. Subsequent\ncalls will return the same assembly.",
            "stability": "stable",
            "summary": "Synthesize this stage into a cloud assembly."
          },
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 215
          },
          "name": "synth",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.StageSynthesisOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          }
        }
      ],
      "name": "Stage",
      "properties": [
        {
          "docs": {
            "remarks": "Derived from the construct path.",
            "stability": "stable",
            "summary": "Artifact ID of the assembly if it is a nested stage. The root stage (app) will return an empty string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 204
          },
          "name": "artifactId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The cloud assembly asset output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 193
          },
          "name": "assetOutdir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The cloud assembly output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 186
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- no validation plugins are used",
            "remarks": "If any plugin reports any violation,\nsynthesis will be interrupted and the report displayed to the user.",
            "stability": "stable",
            "summary": "Validation plugins to run during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 155
          },
          "name": "policyValidationBeta1",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IPolicyValidationPluginBeta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Based on names of the parent stages separated by\nhypens.",
            "stability": "stable",
            "summary": "The name of the stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 136
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default account for all resources defined within this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 122
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "*",
            "stability": "stable",
            "summary": "The parent stage or `undefined` if this is the app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 142
          },
          "name": "parentStage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Stage"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default region for all resources defined within this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 116
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stage:Stage"
    },
    "@aws-cdk/core.StageProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Initialization props for a stage."
      },
      "fqn": "@aws-cdk/core.StageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stage.ts",
        "line": 13
      },
      "name": "StageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The environments should be configured on the `Stack`s.",
            "example": "// Use a concrete account and region to deploy this Stage to\nnew Stage(app, 'Stage1', {\n  env: { account: '123456789012', region: 'us-east-1' },\n});\n\n// Use the CLI's current credentials to determine the target environment\nnew Stage(app, 'Stage2', {\n  env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: process.env.CDK_DEFAULT_REGION },\n});",
            "remarks": "Stacks defined inside this `Stage` with either `region` or `account` missing\nfrom its env will use the corresponding field given here.\n\nIf either `region` or `account`is is not configured for `Stack` (either on\nthe `Stack` itself or on the containing `Stage`), the Stack will be\n*environment-agnostic*.\n\nEnvironment-agnostic stacks can be deployed to any environment, may not be\nable to take advantage of all features of the CDK. For example, they will\nnot be able to use environmental context lookups, will not automatically\ntranslate Service Principals to the right format based on the environment's\nAWS partition, and other such enhancements.",
            "stability": "stable",
            "summary": "Default AWS environment (account/region) for `Stack`s in this `Stage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 44
          },
          "name": "env",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Environment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- for nested stages, outdir will be determined as a relative\ndirectory to the outdir of the app. For apps, if outdir is not specified, a\ntemporary directory will be created.",
            "remarks": "Can only be specified if this stage is the root stage (the app). If this is\nspecified and this stage is nested within another stage, an error will be\nthrown.",
            "stability": "stable",
            "summary": "The output directory into which to emit synthesized artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 57
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no permissions boundary is applied",
            "stability": "stable",
            "summary": "Options for applying a permissions boundary to all IAM Roles and Users created within this Stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 72
          },
          "name": "permissionsBoundary",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.PermissionsBoundary"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no validation plugins are used",
            "remarks": "If any plugin reports any violation,\nsynthesis will be interrupted and the report displayed to the user.",
            "stability": "stable",
            "summary": "Validation plugins to run during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 80
          },
          "name": "policyValidationBeta1",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IPolicyValidationPluginBeta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Derived from the id.",
            "stability": "stable",
            "summary": "Name of this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 64
          },
          "name": "stageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stage:StageProps"
    },
    "@aws-cdk/core.StageSynthesisOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for assembly synthesis."
      },
      "fqn": "@aws-cdk/core.StageSynthesisOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stage.ts",
        "line": 244
      },
      "name": "StageSynthesisOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This is used by tests to allow for incremental verification of the output.\nDo not use in production.",
            "stability": "stable",
            "summary": "Force a re-synth, even if the stage has already been synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 264
          },
          "name": "force",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Should we skip construct validation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 249
          },
          "name": "skipValidation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether the stack should be validated after synthesis to check for error metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stage.ts",
            "line": 256
          },
          "name": "validateOnSynthesis",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/stage:StageSynthesisOptions"
    },
    "@aws-cdk/core.StringConcat": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Drops 'undefined's.",
        "stability": "stable",
        "summary": "Converts all fragments to strings and concats those."
      },
      "fqn": "@aws-cdk/core.StringConcat",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@aws-cdk/core.IFragmentConcatenator"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/resolvable.ts",
        "line": 132
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Join the fragment on the left and on the right."
          },
          "locationInModule": {
            "filename": "lib/resolvable.ts",
            "line": 133
          },
          "name": "join",
          "overrides": "@aws-cdk/core.IFragmentConcatenator",
          "parameters": [
            {
              "name": "left",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "right",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "StringConcat",
      "symbolId": "lib/resolvable:StringConcat"
    },
    "@aws-cdk/core.SymlinkFollowMode": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Determines how symlinks are followed."
      },
      "fqn": "@aws-cdk/core.SymlinkFollowMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/fs/options.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Never follow symlinks."
          },
          "name": "NEVER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Materialize all symlinks, whether they are internal or external to the source directory."
          },
          "name": "ALWAYS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only follows symlinks that are external to the source directory."
          },
          "name": "EXTERNAL"
        },
        {
          "docs": {
            "remarks": "This is the safest mode of operation as it ensures that copy operations\nwon't materialize files from the user's file system. Internal symlinks are\nnot followed.\n\nIf the copy operation runs into an external symlink, it will fail.",
            "stability": "stable",
            "summary": "Forbids source from having any symlinks pointing outside of the source tree."
          },
          "name": "BLOCK_EXTERNAL"
        }
      ],
      "name": "SymlinkFollowMode",
      "symbolId": "lib/fs/options:SymlinkFollowMode"
    },
    "@aws-cdk/core.SynthesizeStackArtifactOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "remarks": "A subset of `cxschema.AwsCloudFormationStackProperties` of optional settings that need to be\nconfigurable by synthesizers, plus `additionalDependencies`.",
        "stability": "stable",
        "summary": "Stack artifact options."
      },
      "fqn": "@aws-cdk/core.SynthesizeStackArtifactOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
        "line": 206
      },
      "name": "SynthesizeStackArtifactOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No additional dependencies",
            "stability": "stable",
            "summary": "Identifiers of additional dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 212
          },
          "name": "additionalDependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role is assumed (current credentials are used)",
            "stability": "stable",
            "summary": "The role that needs to be assumed to deploy the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 226
          },
          "name": "assumeRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No externalID is used",
            "stability": "stable",
            "summary": "The externalID to use with the assumeRoleArn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 233
          },
          "name": "assumeRoleExternalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Bootstrap stack version number looked up",
            "remarks": "Only used if `requiresBootstrapStackVersion` is set.\n\n- If this value is not set, the bootstrap stack name must be known at\n  deployment time so the stack version can be looked up from the stack\n  outputs.\n- If this value is set, the bootstrap stack can have any name because\n  we won't need to look it up.",
            "stability": "stable",
            "summary": "SSM parameter where the bootstrap stack version number can be found."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 276
          },
          "name": "bootstrapStackVersionSsmParameter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role is passed (currently assumed role/credentials are used)",
            "stability": "stable",
            "summary": "The role that is passed to CloudFormation to execute the change set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 240
          },
          "name": "cloudFormationExecutionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The role to use to look up values from the target AWS account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 247
          },
          "name": "lookupRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.BootstrapRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No parameters",
            "stability": "stable",
            "summary": "Values for CloudFormation stack parameters that should be passed when the stack is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 219
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No bootstrap stack required",
            "stability": "stable",
            "summary": "Version of bootstrap stack required to deploy this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 261
          },
          "name": "requiresBootstrapStackVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not uploaded yet, upload just before deploying",
            "stability": "stable",
            "summary": "If the stack template has already been included in the asset manifest, its asset URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stack-synthesizers/stack-synthesizer.ts",
            "line": 254
          },
          "name": "stackTemplateAssetObjectUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stack-synthesizers/stack-synthesizer:SynthesizeStackArtifactOptions"
    },
    "@aws-cdk/core.Tag": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "The Tag Aspect will handle adding a tag to this node and cascading tags to children."
      },
      "fqn": "@aws-cdk/core.Tag",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/tag-aspect.ts",
          "line": 115
        },
        "parameters": [
          {
            "docs": {
              "summary": "The string key for the tag."
            },
            "name": "key",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "value",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.TagProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/tag-aspect.ts",
        "line": 86
      },
      "methods": [
        {
          "docs": {
            "deprecated": "use `Tags.of(scope).add()`",
            "stability": "deprecated",
            "summary": "DEPRECATED: add tags to the node of a construct and all its the taggable children."
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 93
          },
          "name": "add",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TagProps"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `Tags.of(scope).remove()`",
            "stability": "deprecated",
            "summary": "DEPRECATED: remove tags to the node of a construct and all its the taggable children."
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 103
          },
          "name": "remove",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TagProps"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 123
          },
          "name": "applyTag",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.ITaggable"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 74
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "construct",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "Tag",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The string key for the tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 65
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 67
          },
          "name": "props",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/core.TagProps"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The string value of the tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 111
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/tag-aspect:Tag"
    },
    "@aws-cdk/core.TagManager": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "example": "import * as cdk from '@aws-cdk/core';\n\nclass MyConstruct extends cdk.Resource implements cdk.ITaggable {\n  public readonly tags = new cdk.TagManager(cdk.TagType.KEY_VALUE, 'Whatever::The::Type');\n\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    new cdk.CfnResource(this, 'Resource', {\n      type: 'Whatever::The::Type',\n      properties: {\n        // ...\n        Tags: this.tags.renderedTags,\n      },\n    });\n  }\n}",
        "remarks": "Normally, you do not need to use this class, as the CloudFormation specification\nwill indicate which resources are taggable. However, sometimes you will need this\nto make custom resources taggable. Used `tagManager.renderedTags` to obtain a\nvalue that will resolve to the tags at synthesis time.",
        "stability": "stable",
        "summary": "TagManager facilitates a common implementation of tagging for Constructs."
      },
      "fqn": "@aws-cdk/core.TagManager",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/tag-manager.ts",
          "line": 314
        },
        "parameters": [
          {
            "name": "tagType",
            "type": {
              "fqn": "@aws-cdk/core.TagType"
            }
          },
          {
            "name": "resourceTypeName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "tagStructure",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.TagManagerOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/tag-manager.ts",
        "line": 283
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Check whether the given construct is Taggable."
          },
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 287
          },
          "name": "isTaggable",
          "parameters": [
            {
              "name": "construct",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Looks at the include and exclude resourceTypeName arrays to determine if\nthe aspect applies here",
            "stability": "stable",
            "summary": "Determine if the aspect applies here."
          },
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 386
          },
          "name": "applyTagAspectHere",
          "parameters": [
            {
              "name": "include",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "exclude",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns true if there are any tags defined."
          },
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 400
          },
          "name": "hasTags",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Removes the specified tag from the array if it exists."
          },
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 343
          },
          "name": "removeTag",
          "parameters": [
            {
              "docs": {
                "summary": "The tag to remove."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The priority of the remove operation."
              },
              "name": "priority",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method will eagerly render the tags currently applied. In\nmost cases, you should be using `tagManager.renderedTags` instead,\nwhich will return a `Lazy` value that will resolve to the correct\ntags at synthesis time.",
            "stability": "stable",
            "summary": "Renders tags into the proper format based on TagType."
          },
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 358
          },
          "name": "renderTags",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the specified tag to the array of tags."
          },
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 331
          },
          "name": "setTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "priority",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "applyToLaunchedInstances",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the tags in a readable format."
          },
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 372
          },
          "name": "tagValues",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "TagManager",
      "properties": [
        {
          "docs": {
            "remarks": "If you need to make a custom construct taggable, use the value of this\nproperty to pass to the `tags` property of the underlying construct.",
            "stability": "stable",
            "summary": "A lazy value that represents the rendered tags at synthesis time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 305
          },
          "name": "renderedTags",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "remarks": "Normally this is `tags` but some resources choose a different name. Cognito\nUserPool uses UserPoolTags",
            "stability": "stable",
            "summary": "The property name for tag values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 297
          },
          "name": "tagPropertyName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/tag-manager:TagManager"
    },
    "@aws-cdk/core.TagManagerOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to configure TagManager behavior."
      },
      "fqn": "@aws-cdk/core.TagManagerOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/tag-manager.ts",
        "line": 244
      },
      "name": "TagManagerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"tags\"",
            "remarks": "Normally this is `tags`, but Cognito UserPool uses UserPoolTags",
            "stability": "stable",
            "summary": "The name of the property in CloudFormation for these tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-manager.ts",
            "line": 252
          },
          "name": "tagPropertyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/tag-manager:TagManagerOptions"
    },
    "@aws-cdk/core.TagProps": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a tag."
      },
      "fqn": "@aws-cdk/core.TagProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/tag-aspect.ts",
        "line": 9
      },
      "name": "TagProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the tag should be applied to instances in an AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 15
          },
          "name": "applyToLaunchedInstances",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "An empty array will allow this tag to be applied to all resources. A\nnon-empty array will apply this tag only if the Resource type is not in\nthis array.",
            "stability": "stable",
            "summary": "An array of Resource Types that will not receive this tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 25
          },
          "name": "excludeResourceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "An empty array will match any Resource. A non-empty array will apply this\ntag only to Resource types that are included in this array.",
            "stability": "stable",
            "summary": "An array of Resource Types that will receive this tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 34
          },
          "name": "includeResourceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Default priorities:\n\n- 100 for `SetTag`\n- 200 for `RemoveTag`\n- 50 for tags added directly to CloudFormation resources",
            "remarks": "Higher or equal priority tags will take precedence.\n\nSetting priority will enable the user to control tags when they need to not\nfollow the default precedence pattern of last applied and closest to the\nconstruct in the tree.",
            "stability": "stable",
            "summary": "Priority of the tag operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 54
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/tag-aspect:TagProps"
    },
    "@aws-cdk/core.TagType": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/core.TagType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cfn-resource.ts",
        "line": 540
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUTOSCALING_GROUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KEY_VALUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOT_TAGGABLE"
        }
      ],
      "name": "TagType",
      "symbolId": "lib/cfn-resource:TagType"
    },
    "@aws-cdk/core.Tags": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Manages AWS tags for all resources within a construct scope."
      },
      "fqn": "@aws-cdk/core.Tags",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/tag-aspect.ts",
        "line": 138
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the tags API for this scope."
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 143
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "The scope."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Tags"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "add tags to the node of a construct and all its the taggable children."
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 152
          },
          "name": "add",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TagProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "remove tags to the node of a construct and all its the taggable children."
          },
          "locationInModule": {
            "filename": "lib/tag-aspect.ts",
            "line": 159
          },
          "name": "remove",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.TagProps"
              }
            }
          ]
        }
      ],
      "name": "Tags",
      "symbolId": "lib/tag-aspect:Tags"
    },
    "@aws-cdk/core.TimeConversionOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for how to convert time to a different unit."
      },
      "fqn": "@aws-cdk/core.TimeConversionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/duration.ts",
        "line": 287
      },
      "name": "TimeConversionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If `true`, conversions into a larger time unit (e.g. `Seconds` to `Minutes`) will fail if the result is not an integer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/duration.ts",
            "line": 294
          },
          "name": "integral",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/duration:TimeConversionOptions"
    },
    "@aws-cdk/core.TimeZone": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "For more information, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
        "stability": "stable",
        "summary": "Canonical names of the IANA time zones, derived from the IANA Time Zone Database."
      },
      "fqn": "@aws-cdk/core.TimeZone",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/time-zone.ts",
        "line": 6
      },
      "methods": [
        {
          "docs": {
            "returns": "a new Timezone",
            "stability": "stable",
            "summary": "Use this to add a timezone not in this class."
          },
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1070
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the timezone."
              },
              "name": "timezoneName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.TimeZone"
            }
          },
          "static": true
        }
      ],
      "name": "TimeZone",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Abidjan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 9
          },
          "name": "AFRICA_ABIDJAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Algiers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 12
          },
          "name": "AFRICA_ALGIERS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Bissau."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 15
          },
          "name": "AFRICA_BISSAU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Cairo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 18
          },
          "name": "AFRICA_CAIRO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Casablanca."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 21
          },
          "name": "AFRICA_CASABLANCA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Ceuta."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 24
          },
          "name": "AFRICA_CEUTA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/El_Aaiun."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 27
          },
          "name": "AFRICA_EL_AAIUN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Johannesburg."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 30
          },
          "name": "AFRICA_JOHANNESBURG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Juba."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 33
          },
          "name": "AFRICA_JUBA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Khartoum."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 36
          },
          "name": "AFRICA_KHARTOUM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Lagos."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 39
          },
          "name": "AFRICA_LAGOS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Maputo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 42
          },
          "name": "AFRICA_MAPUTO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Monrovia."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 45
          },
          "name": "AFRICA_MONROVIA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Nairobi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 48
          },
          "name": "AFRICA_NAIROBI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Ndjamena."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 51
          },
          "name": "AFRICA_NDJAMENA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Sao_Tome."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 54
          },
          "name": "AFRICA_SAO_TOME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Tripoli."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 57
          },
          "name": "AFRICA_TRIPOLI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Tunis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 60
          },
          "name": "AFRICA_TUNIS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Africa/Windhoek."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 63
          },
          "name": "AFRICA_WINDHOEK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −10:00/−09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Adak."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 66
          },
          "name": "AMERICA_ADAK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Anchorage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 69
          },
          "name": "AMERICA_ANCHORAGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Araguaina."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 72
          },
          "name": "AMERICA_ARAGUAINA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Buenos_Aires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 75
          },
          "name": "AMERICA_ARGENTINA_BUENOS_AIRES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Catamarca."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 78
          },
          "name": "AMERICA_ARGENTINA_CATAMARCA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Cordoba."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 81
          },
          "name": "AMERICA_ARGENTINA_CORDOBA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Jujuy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 84
          },
          "name": "AMERICA_ARGENTINA_JUJUY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/La_Rioja."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 87
          },
          "name": "AMERICA_ARGENTINA_LA_RIOJA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Mendoza."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 90
          },
          "name": "AMERICA_ARGENTINA_MENDOZA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Rio_Gallegos."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 93
          },
          "name": "AMERICA_ARGENTINA_RIO_GALLEGOS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Salta."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 96
          },
          "name": "AMERICA_ARGENTINA_SALTA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/San_Juan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 99
          },
          "name": "AMERICA_ARGENTINA_SAN_JUAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/San_Luis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 102
          },
          "name": "AMERICA_ARGENTINA_SAN_LUIS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Tucuman."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 105
          },
          "name": "AMERICA_ARGENTINA_TUCUMAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Argentina/Ushuaia."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 108
          },
          "name": "AMERICA_ARGENTINA_USHUAIA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Asuncion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 111
          },
          "name": "AMERICA_ASUNCION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Bahia."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 114
          },
          "name": "AMERICA_BAHIA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Bahia_Banderas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 117
          },
          "name": "AMERICA_BAHIA_BANDERAS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Barbados."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 120
          },
          "name": "AMERICA_BARBADOS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Belem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 123
          },
          "name": "AMERICA_BELEM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Belize."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 126
          },
          "name": "AMERICA_BELIZE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Boa_Vista."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 129
          },
          "name": "AMERICA_BOA_VISTA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Bogota."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 132
          },
          "name": "AMERICA_BOGOTA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Boise."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 135
          },
          "name": "AMERICA_BOISE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Cambridge_Bay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 138
          },
          "name": "AMERICA_CAMBRIDGE_BAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Campo_Grande."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 141
          },
          "name": "AMERICA_CAMPO_GRANDE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Cancun."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 144
          },
          "name": "AMERICA_CANCUN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Caracas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 147
          },
          "name": "AMERICA_CARACAS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Cayenne."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 150
          },
          "name": "AMERICA_CAYENNE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Chicago."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 153
          },
          "name": "AMERICA_CHICAGO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Chihuahua."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 156
          },
          "name": "AMERICA_CHIHUAHUA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Ciudad_Juarez."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 159
          },
          "name": "AMERICA_CIUDAD_JUAREZ",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Costa_Rica."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 162
          },
          "name": "AMERICA_COSTA_RICA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Cuiaba."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 165
          },
          "name": "AMERICA_CUIABA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Danmarkshavn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 168
          },
          "name": "AMERICA_DANMARKSHAVN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Dawson."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 171
          },
          "name": "AMERICA_DAWSON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Dawson_Creek."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 174
          },
          "name": "AMERICA_DAWSON_CREEK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Denver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 177
          },
          "name": "AMERICA_DENVER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Detroit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 180
          },
          "name": "AMERICA_DETROIT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Edmonton."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 183
          },
          "name": "AMERICA_EDMONTON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Eirunepe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 186
          },
          "name": "AMERICA_EIRUNEPE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/El_Salvador."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 189
          },
          "name": "AMERICA_EL_SALVADOR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Fort_Nelson."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 192
          },
          "name": "AMERICA_FORT_NELSON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Fortaleza."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 195
          },
          "name": "AMERICA_FORTALEZA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Glace_Bay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 198
          },
          "name": "AMERICA_GLACE_BAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Goose_Bay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 201
          },
          "name": "AMERICA_GOOSE_BAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Grand_Turk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 204
          },
          "name": "AMERICA_GRAND_TURK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Guatemala."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 207
          },
          "name": "AMERICA_GUATEMALA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Guayaquil."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 210
          },
          "name": "AMERICA_GUAYAQUIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Guyana."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 213
          },
          "name": "AMERICA_GUYANA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Halifax."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 216
          },
          "name": "AMERICA_HALIFAX",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Havana."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 219
          },
          "name": "AMERICA_HAVANA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Hermosillo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 222
          },
          "name": "AMERICA_HERMOSILLO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Indianapolis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 225
          },
          "name": "AMERICA_INDIANA_INDIANAPOLIS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Knox."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 228
          },
          "name": "AMERICA_INDIANA_KNOX",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Marengo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 231
          },
          "name": "AMERICA_INDIANA_MARENGO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Petersburg."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 234
          },
          "name": "AMERICA_INDIANA_PETERSBURG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Tell_City."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 237
          },
          "name": "AMERICA_INDIANA_TELL_CITY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Vevay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 240
          },
          "name": "AMERICA_INDIANA_VEVAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Vincennes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 243
          },
          "name": "AMERICA_INDIANA_VINCENNES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Indiana/Winamac."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 246
          },
          "name": "AMERICA_INDIANA_WINAMAC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Inuvik."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 249
          },
          "name": "AMERICA_INUVIK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Iqaluit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 252
          },
          "name": "AMERICA_IQALUIT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Jamaica."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 255
          },
          "name": "AMERICA_JAMAICA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Juneau."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 258
          },
          "name": "AMERICA_JUNEAU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Kentucky/Louisville."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 261
          },
          "name": "AMERICA_KENTUCKY_LOUISVILLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Kentucky/Monticello."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 264
          },
          "name": "AMERICA_KENTUCKY_MONTICELLO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/La_Paz."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 267
          },
          "name": "AMERICA_LA_PAZ",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Lima."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 270
          },
          "name": "AMERICA_LIMA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −08:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Los_Angeles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 273
          },
          "name": "AMERICA_LOS_ANGELES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Maceio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 276
          },
          "name": "AMERICA_MACEIO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Managua."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 279
          },
          "name": "AMERICA_MANAGUA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Manaus."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 282
          },
          "name": "AMERICA_MANAUS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Martinique."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 285
          },
          "name": "AMERICA_MARTINIQUE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Matamoros."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 288
          },
          "name": "AMERICA_MATAMOROS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Mazatlan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 291
          },
          "name": "AMERICA_MAZATLAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Menominee."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 294
          },
          "name": "AMERICA_MENOMINEE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Merida."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 297
          },
          "name": "AMERICA_MERIDA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Metlakatla."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 300
          },
          "name": "AMERICA_METLAKATLA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Mexico_City."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 303
          },
          "name": "AMERICA_MEXICO_CITY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Miquelon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 306
          },
          "name": "AMERICA_MIQUELON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Moncton."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 309
          },
          "name": "AMERICA_MONCTON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Monterrey."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 312
          },
          "name": "AMERICA_MONTERREY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Montevideo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 315
          },
          "name": "AMERICA_MONTEVIDEO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/New_York."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 318
          },
          "name": "AMERICA_NEW_YORK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Nome."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 321
          },
          "name": "AMERICA_NOME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −02:00/−02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Noronha."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 324
          },
          "name": "AMERICA_NORONHA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/North_Dakota/Beulah."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 327
          },
          "name": "AMERICA_NORTH_DAKOTA_BEULAH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/North_Dakota/Center."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 330
          },
          "name": "AMERICA_NORTH_DAKOTA_CENTER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/North_Dakota/New_Salem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 333
          },
          "name": "AMERICA_NORTH_DAKOTA_NEW_SALEM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Nuuk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 336
          },
          "name": "AMERICA_NUUK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Ojinaga."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 339
          },
          "name": "AMERICA_OJINAGA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Panama."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 342
          },
          "name": "AMERICA_PANAMA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Paramaribo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 345
          },
          "name": "AMERICA_PARAMARIBO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Phoenix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 348
          },
          "name": "AMERICA_PHOENIX",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Port-au-Prince."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 351
          },
          "name": "AMERICA_PORT_MINUS_AU_MINUS_PRINCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Porto_Velho."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 354
          },
          "name": "AMERICA_PORTO_VELHO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Puerto_Rico."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 357
          },
          "name": "AMERICA_PUERTO_RICO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Punta_Arenas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 360
          },
          "name": "AMERICA_PUNTA_ARENAS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Rankin_Inlet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 363
          },
          "name": "AMERICA_RANKIN_INLET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Recife."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 366
          },
          "name": "AMERICA_RECIFE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Regina."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 369
          },
          "name": "AMERICA_REGINA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Resolute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 372
          },
          "name": "AMERICA_RESOLUTE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Rio_Branco."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 375
          },
          "name": "AMERICA_RIO_BRANCO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Santarem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 378
          },
          "name": "AMERICA_SANTAREM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Santiago."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 381
          },
          "name": "AMERICA_SANTIAGO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Santo_Domingo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 384
          },
          "name": "AMERICA_SANTO_DOMINGO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Sao_Paulo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 387
          },
          "name": "AMERICA_SAO_PAULO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −01:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Scoresbysund."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 390
          },
          "name": "AMERICA_SCORESBYSUND",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Sitka."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 393
          },
          "name": "AMERICA_SITKA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:30/−02:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/St_Johns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 396
          },
          "name": "AMERICA_ST_JOHNS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Swift_Current."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 399
          },
          "name": "AMERICA_SWIFT_CURRENT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Tegucigalpa."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 402
          },
          "name": "AMERICA_TEGUCIGALPA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Thule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 405
          },
          "name": "AMERICA_THULE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −08:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Tijuana."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 408
          },
          "name": "AMERICA_TIJUANA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Toronto."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 411
          },
          "name": "AMERICA_TORONTO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −08:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Vancouver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 414
          },
          "name": "AMERICA_VANCOUVER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Whitehorse."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 417
          },
          "name": "AMERICA_WHITEHORSE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Winnipeg."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 420
          },
          "name": "AMERICA_WINNIPEG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Yakutat."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 423
          },
          "name": "AMERICA_YAKUTAT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for America/Yellowknife."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 426
          },
          "name": "AMERICA_YELLOWKNIFE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Antarctica/Casey."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 429
          },
          "name": "ANTARCTICA_CASEY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Antarctica/Davis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 432
          },
          "name": "ANTARCTICA_DAVIS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Antarctica/Macquarie."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 435
          },
          "name": "ANTARCTICA_MACQUARIE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Antarctica/Mawson."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 438
          },
          "name": "ANTARCTICA_MAWSON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Antarctica/Palmer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 441
          },
          "name": "ANTARCTICA_PALMER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Antarctica/Rothera."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 444
          },
          "name": "ANTARCTICA_ROTHERA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Antarctica/Troll."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 447
          },
          "name": "ANTARCTICA_TROLL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Almaty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 450
          },
          "name": "ASIA_ALMATY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Amman."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 453
          },
          "name": "ASIA_AMMAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Anadyr."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 456
          },
          "name": "ASIA_ANADYR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Aqtau."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 459
          },
          "name": "ASIA_AQTAU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Aqtobe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 462
          },
          "name": "ASIA_AQTOBE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Ashgabat."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 465
          },
          "name": "ASIA_ASHGABAT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Atyrau."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 468
          },
          "name": "ASIA_ATYRAU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Baghdad."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 471
          },
          "name": "ASIA_BAGHDAD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Baku."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 474
          },
          "name": "ASIA_BAKU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Bangkok."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 477
          },
          "name": "ASIA_BANGKOK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Barnaul."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 480
          },
          "name": "ASIA_BARNAUL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Beirut."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 483
          },
          "name": "ASIA_BEIRUT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Bishkek."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 486
          },
          "name": "ASIA_BISHKEK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Chita."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 489
          },
          "name": "ASIA_CHITA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Choibalsan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 492
          },
          "name": "ASIA_CHOIBALSAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:30/+05:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Colombo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 495
          },
          "name": "ASIA_COLOMBO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Damascus."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 498
          },
          "name": "ASIA_DAMASCUS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Dhaka."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 501
          },
          "name": "ASIA_DHAKA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Dili."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 504
          },
          "name": "ASIA_DILI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Dubai."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 507
          },
          "name": "ASIA_DUBAI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Dushanbe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 510
          },
          "name": "ASIA_DUSHANBE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Famagusta."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 513
          },
          "name": "ASIA_FAMAGUSTA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Gaza."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 516
          },
          "name": "ASIA_GAZA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Hebron."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 519
          },
          "name": "ASIA_HEBRON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Ho_Chi_Minh."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 522
          },
          "name": "ASIA_HO_CHI_MINH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Hong_Kong."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 525
          },
          "name": "ASIA_HONG_KONG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Hovd."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 528
          },
          "name": "ASIA_HOVD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Irkutsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 531
          },
          "name": "ASIA_IRKUTSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Jakarta."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 534
          },
          "name": "ASIA_JAKARTA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Jayapura."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 537
          },
          "name": "ASIA_JAYAPURA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Jerusalem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 540
          },
          "name": "ASIA_JERUSALEM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:30/+04:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Kabul."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 543
          },
          "name": "ASIA_KABUL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Kamchatka."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 546
          },
          "name": "ASIA_KAMCHATKA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Karachi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 549
          },
          "name": "ASIA_KARACHI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:45/+05:45.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Kathmandu."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 552
          },
          "name": "ASIA_KATHMANDU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Khandyga."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 555
          },
          "name": "ASIA_KHANDYGA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:30/+05:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Kolkata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 558
          },
          "name": "ASIA_KOLKATA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Krasnoyarsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 561
          },
          "name": "ASIA_KRASNOYARSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Kuching."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 564
          },
          "name": "ASIA_KUCHING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Macau."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 567
          },
          "name": "ASIA_MACAU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Magadan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 570
          },
          "name": "ASIA_MAGADAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Makassar."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 573
          },
          "name": "ASIA_MAKASSAR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Manila."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 576
          },
          "name": "ASIA_MANILA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Nicosia."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 579
          },
          "name": "ASIA_NICOSIA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Novokuznetsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 582
          },
          "name": "ASIA_NOVOKUZNETSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Novosibirsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 585
          },
          "name": "ASIA_NOVOSIBIRSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Omsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 588
          },
          "name": "ASIA_OMSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Oral."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 591
          },
          "name": "ASIA_ORAL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Pontianak."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 594
          },
          "name": "ASIA_PONTIANAK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Pyongyang."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 597
          },
          "name": "ASIA_PYONGYANG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Qatar."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 600
          },
          "name": "ASIA_QATAR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Qostanay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 603
          },
          "name": "ASIA_QOSTANAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Qyzylorda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 606
          },
          "name": "ASIA_QYZYLORDA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Riyadh."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 609
          },
          "name": "ASIA_RIYADH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Sakhalin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 612
          },
          "name": "ASIA_SAKHALIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Samarkand."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 615
          },
          "name": "ASIA_SAMARKAND",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Seoul."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 618
          },
          "name": "ASIA_SEOUL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Shanghai."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 621
          },
          "name": "ASIA_SHANGHAI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Singapore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 624
          },
          "name": "ASIA_SINGAPORE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Srednekolymsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 627
          },
          "name": "ASIA_SREDNEKOLYMSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Taipei."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 630
          },
          "name": "ASIA_TAIPEI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Tashkent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 633
          },
          "name": "ASIA_TASHKENT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Tbilisi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 636
          },
          "name": "ASIA_TBILISI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:30/+03:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Tehran."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 639
          },
          "name": "ASIA_TEHRAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Thimphu."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 642
          },
          "name": "ASIA_THIMPHU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Tokyo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 645
          },
          "name": "ASIA_TOKYO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Tomsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 648
          },
          "name": "ASIA_TOMSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Ulaanbaatar."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 651
          },
          "name": "ASIA_ULAANBAATAR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Urumqi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 654
          },
          "name": "ASIA_URUMQI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Ust-Nera."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 657
          },
          "name": "ASIA_UST_MINUS_NERA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Vladivostok."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 660
          },
          "name": "ASIA_VLADIVOSTOK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Yakutsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 663
          },
          "name": "ASIA_YAKUTSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:30/+06:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Yangon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 666
          },
          "name": "ASIA_YANGON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Yekaterinburg."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 669
          },
          "name": "ASIA_YEKATERINBURG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Asia/Yerevan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 672
          },
          "name": "ASIA_YEREVAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −01:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/Azores."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 675
          },
          "name": "ATLANTIC_AZORES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/Bermuda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 678
          },
          "name": "ATLANTIC_BERMUDA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/Canary."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 681
          },
          "name": "ATLANTIC_CANARY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −01:00/−01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/Cape_Verde."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 684
          },
          "name": "ATLANTIC_CAPE_VERDE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/Faroe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 687
          },
          "name": "ATLANTIC_FAROE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/Madeira."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 690
          },
          "name": "ATLANTIC_MADEIRA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −02:00/−02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/South_Georgia."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 693
          },
          "name": "ATLANTIC_SOUTH_GEORGIA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Atlantic/Stanley."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 696
          },
          "name": "ATLANTIC_STANLEY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:30/+10:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Adelaide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 699
          },
          "name": "AUSTRALIA_ADELAIDE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Brisbane."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 702
          },
          "name": "AUSTRALIA_BRISBANE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:30/+10:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Broken_Hill."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 705
          },
          "name": "AUSTRALIA_BROKEN_HILL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:30/+09:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Darwin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 708
          },
          "name": "AUSTRALIA_DARWIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:45/+08:45.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Eucla."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 711
          },
          "name": "AUSTRALIA_EUCLA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Hobart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 714
          },
          "name": "AUSTRALIA_HOBART",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Lindeman."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 717
          },
          "name": "AUSTRALIA_LINDEMAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:30/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Lord_Howe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 720
          },
          "name": "AUSTRALIA_LORD_HOWE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Melbourne."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 723
          },
          "name": "AUSTRALIA_MELBOURNE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Perth."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 726
          },
          "name": "AUSTRALIA_PERTH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Australia/Sydney."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 729
          },
          "name": "AUSTRALIA_SYDNEY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for CET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 732
          },
          "name": "CET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for CST6CDT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 735
          },
          "name": "CST6CDT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for EET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 738
          },
          "name": "EET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for EST."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 741
          },
          "name": "EST",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for EST5EDT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 744
          },
          "name": "EST5EDT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 747
          },
          "name": "ETC_GMT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 786
          },
          "name": "ETC_GMT_MINUS_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-10."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 789
          },
          "name": "ETC_GMT_MINUS_10",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-11."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 792
          },
          "name": "ETC_GMT_MINUS_11",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-12."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 795
          },
          "name": "ETC_GMT_MINUS_12",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +13:00/+13:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-13."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 798
          },
          "name": "ETC_GMT_MINUS_13",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +14:00/+14:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-14."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 801
          },
          "name": "ETC_GMT_MINUS_14",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-2."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 804
          },
          "name": "ETC_GMT_MINUS_2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 807
          },
          "name": "ETC_GMT_MINUS_3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-4."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 810
          },
          "name": "ETC_GMT_MINUS_4",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-5."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 813
          },
          "name": "ETC_GMT_MINUS_5",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-6."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 816
          },
          "name": "ETC_GMT_MINUS_6",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +07:00/+07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-7."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 819
          },
          "name": "ETC_GMT_MINUS_7",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +08:00/+08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-8."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 822
          },
          "name": "ETC_GMT_MINUS_8",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT-9."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 825
          },
          "name": "ETC_GMT_MINUS_9",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −01:00/−01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 750
          },
          "name": "ETC_GMT_PLUS_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −10:00/−10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+10."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 753
          },
          "name": "ETC_GMT_PLUS_10",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −11:00/−11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+11."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 756
          },
          "name": "ETC_GMT_PLUS_11",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −12:00/−12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+12."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 759
          },
          "name": "ETC_GMT_PLUS_12",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −02:00/−02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+2."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 762
          },
          "name": "ETC_GMT_PLUS_2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −03:00/−03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 765
          },
          "name": "ETC_GMT_PLUS_3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −04:00/−04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+4."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 768
          },
          "name": "ETC_GMT_PLUS_4",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −05:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+5."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 771
          },
          "name": "ETC_GMT_PLUS_5",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+6."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 774
          },
          "name": "ETC_GMT_PLUS_6",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+7."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 777
          },
          "name": "ETC_GMT_PLUS_7",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −08:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+8."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 780
          },
          "name": "ETC_GMT_PLUS_8",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/GMT+9."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 783
          },
          "name": "ETC_GMT_PLUS_9",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Etc/UTC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 828
          },
          "name": "ETC_UTC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Andorra."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 831
          },
          "name": "EUROPE_ANDORRA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Astrakhan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 834
          },
          "name": "EUROPE_ASTRAKHAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Athens."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 837
          },
          "name": "EUROPE_ATHENS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Belgrade."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 840
          },
          "name": "EUROPE_BELGRADE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Berlin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 843
          },
          "name": "EUROPE_BERLIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Brussels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 846
          },
          "name": "EUROPE_BRUSSELS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Bucharest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 849
          },
          "name": "EUROPE_BUCHAREST",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Budapest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 852
          },
          "name": "EUROPE_BUDAPEST",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Chisinau."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 855
          },
          "name": "EUROPE_CHISINAU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Dublin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 858
          },
          "name": "EUROPE_DUBLIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Gibraltar."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 861
          },
          "name": "EUROPE_GIBRALTAR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Helsinki."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 864
          },
          "name": "EUROPE_HELSINKI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Istanbul."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 867
          },
          "name": "EUROPE_ISTANBUL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Kaliningrad."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 870
          },
          "name": "EUROPE_KALININGRAD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Kirov."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 873
          },
          "name": "EUROPE_KIROV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Kyiv."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 876
          },
          "name": "EUROPE_KYIV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Lisbon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 879
          },
          "name": "EUROPE_LISBON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/London."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 882
          },
          "name": "EUROPE_LONDON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Madrid."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 885
          },
          "name": "EUROPE_MADRID",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Malta."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 888
          },
          "name": "EUROPE_MALTA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Minsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 891
          },
          "name": "EUROPE_MINSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Moscow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 894
          },
          "name": "EUROPE_MOSCOW",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Paris."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 897
          },
          "name": "EUROPE_PARIS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Prague."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 900
          },
          "name": "EUROPE_PRAGUE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Riga."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 903
          },
          "name": "EUROPE_RIGA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Rome."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 906
          },
          "name": "EUROPE_ROME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Samara."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 909
          },
          "name": "EUROPE_SAMARA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Saratov."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 912
          },
          "name": "EUROPE_SARATOV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Simferopol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 915
          },
          "name": "EUROPE_SIMFEROPOL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Sofia."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 918
          },
          "name": "EUROPE_SOFIA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Tallinn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 921
          },
          "name": "EUROPE_TALLINN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Tirane."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 924
          },
          "name": "EUROPE_TIRANE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Ulyanovsk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 927
          },
          "name": "EUROPE_ULYANOVSK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Vienna."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 930
          },
          "name": "EUROPE_VIENNA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +02:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Vilnius."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 933
          },
          "name": "EUROPE_VILNIUS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +03:00/+03:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Volgograd."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 936
          },
          "name": "EUROPE_VOLGOGRAD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Warsaw."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 939
          },
          "name": "EUROPE_WARSAW",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Europe/Zurich."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 942
          },
          "name": "EUROPE_ZURICH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+00:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Factory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 945
          },
          "name": "FACTORY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −10:00/−10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for HST."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 948
          },
          "name": "HST",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +06:00/+06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Indian/Chagos."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 951
          },
          "name": "INDIAN_CHAGOS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +05:00/+05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Indian/Maldives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 954
          },
          "name": "INDIAN_MALDIVES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +04:00/+04:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Indian/Mauritius."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 957
          },
          "name": "INDIAN_MAURITIUS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +01:00/+02:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for MET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 960
          },
          "name": "MET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for MST."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 963
          },
          "name": "MST",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −07:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for MST7MDT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 966
          },
          "name": "MST7MDT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +13:00/+13:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Apia."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 969
          },
          "name": "PACIFIC_APIA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+13:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Auckland."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 972
          },
          "name": "PACIFIC_AUCKLAND",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Bougainville."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 975
          },
          "name": "PACIFIC_BOUGAINVILLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:45/+13:45.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Chatham."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 978
          },
          "name": "PACIFIC_CHATHAM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−05:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Easter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 981
          },
          "name": "PACIFIC_EASTER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Efate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 984
          },
          "name": "PACIFIC_EFATE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +13:00/+13:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Fakaofo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 987
          },
          "name": "PACIFIC_FAKAOFO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Fiji."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 990
          },
          "name": "PACIFIC_FIJI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −06:00/−06:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Galapagos."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 993
          },
          "name": "PACIFIC_GALAPAGOS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:00/−09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Gambier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 996
          },
          "name": "PACIFIC_GAMBIER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Guadalcanal."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 999
          },
          "name": "PACIFIC_GUADALCANAL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Guam."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1002
          },
          "name": "PACIFIC_GUAM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −10:00/−10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Honolulu."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1005
          },
          "name": "PACIFIC_HONOLULU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +13:00/+13:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Kanton."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1008
          },
          "name": "PACIFIC_KANTON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +14:00/+14:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Kiritimati."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1011
          },
          "name": "PACIFIC_KIRITIMATI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Kosrae."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1014
          },
          "name": "PACIFIC_KOSRAE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Kwajalein."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1017
          },
          "name": "PACIFIC_KWAJALEIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −09:30/−09:30.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Marquesas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1020
          },
          "name": "PACIFIC_MARQUESAS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Nauru."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1023
          },
          "name": "PACIFIC_NAURU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −11:00/−11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Niue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1026
          },
          "name": "PACIFIC_NIUE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Norfolk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1029
          },
          "name": "PACIFIC_NORFOLK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +11:00/+11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Noumea."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1032
          },
          "name": "PACIFIC_NOUMEA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −11:00/−11:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Pago_Pago."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1035
          },
          "name": "PACIFIC_PAGO_PAGO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +09:00/+09:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Palau."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1038
          },
          "name": "PACIFIC_PALAU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −08:00/−08:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Pitcairn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1041
          },
          "name": "PACIFIC_PITCAIRN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +10:00/+10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Port_Moresby."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1044
          },
          "name": "PACIFIC_PORT_MORESBY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −10:00/−10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Rarotonga."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1047
          },
          "name": "PACIFIC_RAROTONGA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −10:00/−10:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Tahiti."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1050
          },
          "name": "PACIFIC_TAHITI",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +12:00/+12:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Tarawa."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1053
          },
          "name": "PACIFIC_TARAWA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +13:00/+13:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for Pacific/Tongatapu."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1056
          },
          "name": "PACIFIC_TONGATAPU",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset −08:00/−07:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for PST8PDT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1059
          },
          "name": "PST8PDT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "UTC offset +00:00/+01:00.",
            "stability": "stable",
            "summary": "IANA Time Zone database entry for WET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1062
          },
          "name": "WET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TimeZone"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the timezone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/time-zone.ts",
            "line": 1078
          },
          "name": "timezoneName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/time-zone:TimeZone"
    },
    "@aws-cdk/core.Token": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Can be used to delay evaluation of a certain value in case, for example,\nthat it requires some context or late-bound data. Can also be used to\nmark values that need special processing at document rendering time.\n\nTokens can be embedded into strings while retaining their original\nsemantics.",
        "stability": "stable",
        "summary": "Represents a special or lazily-evaluated value."
      },
      "fqn": "@aws-cdk/core.Token",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/token.ts",
        "line": 47
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return a resolvable representation of the given value."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 101
          },
          "name": "asAny",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return a reversible list representation of this token."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 93
          },
          "name": "asList",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.EncodingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return a reversible number representation of this token."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 85
          },
          "name": "asNumber",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If the Token is initialized with a literal, the stringified value of the\nliteral is returned. Otherwise, a special quoted string representation\nof the Token is returned that can be embedded into other strings.\n\nStrings with quoted Tokens in them can be restored back into\ncomplex values with the Tokens restored by calling `resolve()`\non the string.",
            "stability": "stable",
            "summary": "Return a reversible string representation of this token."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 77
          },
          "name": "asString",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.EncodingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compare two strings that might contain Tokens with each other."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 110
          },
          "name": "compareStrings",
          "parameters": [
            {
              "name": "possibleToken1",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "possibleToken2",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.TokenComparison"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "One of these must be true:\n\n- `obj` is an IResolvable\n- `obj` is a string containing at least one encoded `IResolvable`\n- `obj` is either an encoded number or list\n\nThis does NOT recurse into lists or objects to see if they\ncontain resolvables.",
            "stability": "stable",
            "summary": "Returns true if obj represents an unresolved value."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 62
          },
          "name": "isUnresolved",
          "parameters": [
            {
              "docs": {
                "summary": "The object to test."
              },
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        }
      ],
      "name": "Token",
      "symbolId": "lib/token:Token"
    },
    "@aws-cdk/core.TokenComparison": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "The return type of `Token.compareStrings`.",
        "stability": "stable",
        "summary": "An enum-like class that represents the result of comparing two Tokens."
      },
      "fqn": "@aws-cdk/core.TokenComparison",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/token.ts",
        "line": 14
      },
      "name": "TokenComparison",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This means both components are Tokens."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 31
          },
          "name": "BOTH_UNRESOLVED",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TokenComparison"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This means we're certain the two components are NOT Tokens, and different."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 25
          },
          "name": "DIFFERENT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TokenComparison"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This means exactly one of the components is a Token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 28
          },
          "name": "ONE_UNRESOLVED",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TokenComparison"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This means we're certain the two components are NOT Tokens, and identical."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 19
          },
          "name": "SAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/core.TokenComparison"
          }
        }
      ],
      "symbolId": "lib/token:TokenComparison"
    },
    "@aws-cdk/core.Tokenization": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Less oft-needed functions to manipulate Tokens."
      },
      "fqn": "@aws-cdk/core.Tokenization",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/token.ts",
        "line": 131
      },
      "methods": [
        {
          "docs": {
            "remarks": "This is different from Token.isUnresolved() which will also check for\nencoded Tokens, whereas this method will only do a type check on the given\nobject.",
            "stability": "stable",
            "summary": "Return whether the given object is an IResolvable object."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 209
          },
          "name": "isResolvable",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Values can only be primitives, arrays or tokens. Other objects (i.e. with methods) will be rejected.",
            "stability": "stable",
            "summary": "Resolves an object by evaluating all tokens and removing any undefined or empty objects or arrays."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 193
          },
          "name": "resolve",
          "parameters": [
            {
              "docs": {
                "summary": "The object to resolve."
              },
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "summary": "Prefix key path components for diagnostics."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.ResolveOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "In case of a string, the string must not be a concatenation.",
            "stability": "stable",
            "summary": "Reverse any value into a Resolvable, if possible."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 171
          },
          "name": "reverse",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.ReverseOptions"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "It's illegal for the string to be a concatenation of an encoded token and something else.",
            "stability": "stable",
            "summary": "Un-encode a string which is either a complete encoded token, or doesn't contain tokens at all."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 144
          },
          "name": "reverseCompleteString",
          "parameters": [
            {
              "name": "s",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Un-encode a Tokenized value from a list."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 162
          },
          "name": "reverseList",
          "parameters": [
            {
              "name": "l",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Un-encode a Tokenized value from a number."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 155
          },
          "name": "reverseNumber",
          "parameters": [
            {
              "name": "n",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.IResolvable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Un-encode a string potentially containing encoded tokens."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 135
          },
          "name": "reverseString",
          "parameters": [
            {
              "name": "s",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.TokenizedStringFragments"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If it is an object (i.e., { Ref: 'SomeLogicalId' }), return it as-is.",
            "stability": "stable",
            "summary": "Stringify a number directly or lazily if it's a Token."
          },
          "locationInModule": {
            "filename": "lib/token.ts",
            "line": 216
          },
          "name": "stringifyNumber",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "Tokenization",
      "symbolId": "lib/token:Tokenization"
    },
    "@aws-cdk/core.TokenizedStringFragments": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Fragments of a concatenated string containing stringified Tokens."
      },
      "fqn": "@aws-cdk/core.TokenizedStringFragments",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/string-fragments.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 42
          },
          "name": "addIntrinsic",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 34
          },
          "name": "addLiteral",
          "parameters": [
            {
              "name": "lit",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 38
          },
          "name": "addToken",
          "parameters": [
            {
              "name": "token",
              "type": {
                "fqn": "@aws-cdk/core.IResolvable"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "If there are any",
            "stability": "stable",
            "summary": "Combine the string fragments using the given joiner."
          },
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 94
          },
          "name": "join",
          "parameters": [
            {
              "name": "concat",
              "type": {
                "fqn": "@aws-cdk/core.IFragmentConcatenator"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply a transformation function to all tokens in the string."
          },
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 62
          },
          "name": "mapTokens",
          "parameters": [
            {
              "name": "mapper",
              "type": {
                "fqn": "@aws-cdk/core.ITokenMapper"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.TokenizedStringFragments"
            }
          }
        }
      ],
      "name": "TokenizedStringFragments",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 26
          },
          "name": "firstValue",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 30
          },
          "name": "length",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return all Tokens from this string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 49
          },
          "name": "tokens",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IResolvable"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/string-fragments.ts",
            "line": 20
          },
          "name": "firstToken",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        }
      ],
      "symbolId": "lib/string-fragments:TokenizedStringFragments"
    },
    "@aws-cdk/core.TreeInspector": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "Inspector that maintains an attribute bag."
      },
      "fqn": "@aws-cdk/core.TreeInspector",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/tree.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "remarks": "Keys should be added by convention to prevent conflicts\ni.e. L1 constructs will contain attributes with keys prefixed with aws:cdk:cloudformation",
            "stability": "stable",
            "summary": "Adds attribute to bag."
          },
          "locationInModule": {
            "filename": "lib/tree.ts",
            "line": 17
          },
          "name": "addAttribute",
          "parameters": [
            {
              "docs": {
                "summary": "- key for metadata."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- value of metadata."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "TreeInspector",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Represents the bag of attributes as key-value pairs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/tree.ts",
            "line": 8
          },
          "name": "attributes",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/tree:TreeInspector"
    },
    "@aws-cdk/core.UniqueResourceNameOptions": {
      "assembly": "@aws-cdk/core",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating a unique resource name."
      },
      "fqn": "@aws-cdk/core.UniqueResourceNameOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/names.ts",
        "line": 11
      },
      "name": "UniqueResourceNameOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Non-alphanumeric characters allowed in the unique resource name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/names.ts",
            "line": 32
          },
          "name": "allowedSpecialCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 256",
            "stability": "stable",
            "summary": "The maximum length of the unique resource name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/names.ts",
            "line": 18
          },
          "name": "maxLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "The separator used between the path components."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/names.ts",
            "line": 25
          },
          "name": "separator",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/names:UniqueResourceNameOptions"
    },
    "@aws-cdk/core.ValidationResult": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "remarks": "Models a tree of validation errors so that we have as much information as possible\nabout the failure that occurred.",
        "stability": "stable",
        "summary": "Representation of validation results."
      },
      "fqn": "@aws-cdk/core.ValidationResult",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/runtime.ts",
          "line": 126
        },
        "parameters": [
          {
            "name": "errorMessage",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "results",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ValidationResults"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/runtime.ts",
        "line": 125
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Turn a failed validation into an exception."
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 136
          },
          "name": "assertSuccess"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return a string rendering of the tree of validation failures."
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 148
          },
          "name": "errorTree",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Wrap this result with an error message, if it concerns an error."
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 156
          },
          "name": "prefix",
          "parameters": [
            {
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ValidationResult"
            }
          }
        }
      ],
      "name": "ValidationResult",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 126
          },
          "name": "errorMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 129
          },
          "name": "isSuccess",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 126
          },
          "name": "results",
          "type": {
            "fqn": "@aws-cdk/core.ValidationResults"
          }
        }
      ],
      "symbolId": "lib/runtime:ValidationResult"
    },
    "@aws-cdk/core.ValidationResults": {
      "assembly": "@aws-cdk/core",
      "docs": {
        "stability": "stable",
        "summary": "A collection of validation results."
      },
      "fqn": "@aws-cdk/core.ValidationResults",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/runtime.ts",
          "line": 166
        },
        "parameters": [
          {
            "name": "results",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/core.ValidationResult"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/runtime.ts",
        "line": 165
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 169
          },
          "name": "collect",
          "parameters": [
            {
              "name": "result",
              "type": {
                "fqn": "@aws-cdk/core.ValidationResult"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 180
          },
          "name": "errorTreeList",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "If there are failures in the collection, add a message, otherwise\nreturn a success.",
            "stability": "stable",
            "summary": "Wrap up all validation results into a single tree node."
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 190
          },
          "name": "wrap",
          "parameters": [
            {
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.ValidationResult"
            }
          }
        }
      ],
      "name": "ValidationResults",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 176
          },
          "name": "isSuccess",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 166
          },
          "name": "results",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.ValidationResult"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/runtime:ValidationResults"
    }
  },
  "version": "0.0.0",
  "fingerprint": "KTqY6DtMS+CgkJVUXGwZQ2+7plrOVXVCLXkjx8Ejkfc="
}