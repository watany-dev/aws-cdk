"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@aws-cdk/core");
const integ_tests_1 = require("@aws-cdk/integ-tests");
const lib_1 = require("../lib");
const app = new core_1.App();
const stack = new core_1.Stack(app, 'integ-iam-role-1');
const g1 = new lib_1.Group(stack, 'MyGroup');
const g2 = new lib_1.Group(stack, 'YourGroup');
for (let i = 0; i < 5; ++i) {
    const user = new lib_1.User(stack, `User${i + 1}`);
    user.addToGroup(g1);
    g2.addUser(user);
}
const policy = new lib_1.Policy(stack, 'MyPolicy');
policy.attachToGroup(g1);
policy.addStatements(new lib_1.PolicyStatement({
    resources: [g2.groupArn],
    actions: ['iam:*'],
}));
new integ_tests_1.IntegTest(app, 'iam-role-test', {
    testCases: [stack],
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcudXNlcnMtYW5kLWdyb3Vwcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLnVzZXJzLWFuZC1ncm91cHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBMkM7QUFDM0Msc0RBQWlEO0FBQ2pELGdDQUE4RDtBQUU5RCxNQUFNLEdBQUcsR0FBRyxJQUFJLFVBQUcsRUFBRSxDQUFDO0FBRXRCLE1BQU0sS0FBSyxHQUFHLElBQUksWUFBSyxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBRWpELE1BQU0sRUFBRSxHQUFHLElBQUksV0FBSyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztBQUN2QyxNQUFNLEVBQUUsR0FBRyxJQUFJLFdBQUssQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFFekMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRTtJQUMxQixNQUFNLElBQUksR0FBRyxJQUFJLFVBQUksQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM3QyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BCLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7Q0FDbEI7QUFFRCxNQUFNLE1BQU0sR0FBRyxJQUFJLFlBQU0sQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDN0MsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN6QixNQUFNLENBQUMsYUFBYSxDQUFDLElBQUkscUJBQWUsQ0FBQztJQUN2QyxTQUFTLEVBQUUsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDO0lBQ3hCLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQztDQUNuQixDQUFDLENBQUMsQ0FBQztBQUVKLElBQUksdUJBQVMsQ0FBQyxHQUFHLEVBQUUsZUFBZSxFQUFFO0lBQ2xDLFNBQVMsRUFBRSxDQUFDLEtBQUssQ0FBQztDQUNuQixDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHAsIFN0YWNrIH0gZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBJbnRlZ1Rlc3QgfSBmcm9tICdAYXdzLWNkay9pbnRlZy10ZXN0cyc7XG5pbXBvcnQgeyBHcm91cCwgUG9saWN5LCBQb2xpY3lTdGF0ZW1lbnQsIFVzZXIgfSBmcm9tICcuLi9saWInO1xuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5cbmNvbnN0IHN0YWNrID0gbmV3IFN0YWNrKGFwcCwgJ2ludGVnLWlhbS1yb2xlLTEnKTtcblxuY29uc3QgZzEgPSBuZXcgR3JvdXAoc3RhY2ssICdNeUdyb3VwJyk7XG5jb25zdCBnMiA9IG5ldyBHcm91cChzdGFjaywgJ1lvdXJHcm91cCcpO1xuXG5mb3IgKGxldCBpID0gMDsgaSA8IDU7ICsraSkge1xuICBjb25zdCB1c2VyID0gbmV3IFVzZXIoc3RhY2ssIGBVc2VyJHtpICsgMX1gKTtcbiAgdXNlci5hZGRUb0dyb3VwKGcxKTtcbiAgZzIuYWRkVXNlcih1c2VyKTtcbn1cblxuY29uc3QgcG9saWN5ID0gbmV3IFBvbGljeShzdGFjaywgJ015UG9saWN5Jyk7XG5wb2xpY3kuYXR0YWNoVG9Hcm91cChnMSk7XG5wb2xpY3kuYWRkU3RhdGVtZW50cyhuZXcgUG9saWN5U3RhdGVtZW50KHtcbiAgcmVzb3VyY2VzOiBbZzIuZ3JvdXBBcm5dLFxuICBhY3Rpb25zOiBbJ2lhbToqJ10sXG59KSk7XG5cbm5ldyBJbnRlZ1Rlc3QoYXBwLCAnaWFtLXJvbGUtdGVzdCcsIHtcbiAgdGVzdENhc2VzOiBbc3RhY2tdLFxufSk7XG5cbmFwcC5zeW50aCgpO1xuIl19