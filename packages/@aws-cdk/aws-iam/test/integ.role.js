"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@aws-cdk/core");
const integ_tests_1 = require("@aws-cdk/integ-tests");
const lib_1 = require("../lib");
const app = new core_1.App();
const stack = new core_1.Stack(app, 'integ-iam-role-1');
const role = new lib_1.Role(stack, 'TestRole', {
    assumedBy: new lib_1.ServicePrincipal('sqs.amazonaws.com'),
});
role.addToPolicy(new lib_1.PolicyStatement({ resources: ['*'], actions: ['sqs:SendMessage'] }));
const policy = new lib_1.Policy(stack, 'HelloPolicy', { policyName: 'Default' });
policy.addStatements(new lib_1.PolicyStatement({ actions: ['ec2:*'], resources: ['*'] }));
policy.attachToRole(role);
// Role with an external ID
new lib_1.Role(stack, 'TestRole2', {
    assumedBy: new lib_1.AccountRootPrincipal(),
    externalIds: ['supply-me'],
});
// Role with an org
new lib_1.Role(stack, 'TestRole3', {
    assumedBy: new lib_1.OrganizationPrincipal('o-1234'),
});
new integ_tests_1.IntegTest(app, 'integ-iam-role', {
    testCases: [stack],
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcucm9sZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLnJvbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBMkM7QUFDM0Msc0RBQWlEO0FBQ2pELGdDQUFzSDtBQUV0SCxNQUFNLEdBQUcsR0FBRyxJQUFJLFVBQUcsRUFBRSxDQUFDO0FBRXRCLE1BQU0sS0FBSyxHQUFHLElBQUksWUFBSyxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBRWpELE1BQU0sSUFBSSxHQUFHLElBQUksVUFBSSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUU7SUFDdkMsU0FBUyxFQUFFLElBQUksc0JBQWdCLENBQUMsbUJBQW1CLENBQUM7Q0FDckQsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLHFCQUFlLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRTFGLE1BQU0sTUFBTSxHQUFHLElBQUksWUFBTSxDQUFDLEtBQUssRUFBRSxhQUFhLEVBQUUsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztBQUMzRSxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUkscUJBQWUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLFNBQVMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3BGLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFMUIsMkJBQTJCO0FBQzNCLElBQUksVUFBSSxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUU7SUFDM0IsU0FBUyxFQUFFLElBQUksMEJBQW9CLEVBQUU7SUFDckMsV0FBVyxFQUFFLENBQUMsV0FBVyxDQUFDO0NBQzNCLENBQUMsQ0FBQztBQUVILG1CQUFtQjtBQUNuQixJQUFJLFVBQUksQ0FBQyxLQUFLLEVBQUUsV0FBVyxFQUFFO0lBQzNCLFNBQVMsRUFBRSxJQUFJLDJCQUFxQixDQUFDLFFBQVEsQ0FBQztDQUMvQyxDQUFDLENBQUM7QUFFSCxJQUFJLHVCQUFTLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFO0lBQ25DLFNBQVMsRUFBRSxDQUFDLEtBQUssQ0FBQztDQUNuQixDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHAsIFN0YWNrIH0gZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBJbnRlZ1Rlc3QgfSBmcm9tICdAYXdzLWNkay9pbnRlZy10ZXN0cyc7XG5pbXBvcnQgeyBBY2NvdW50Um9vdFByaW5jaXBhbCwgT3JnYW5pemF0aW9uUHJpbmNpcGFsLCBQb2xpY3ksIFBvbGljeVN0YXRlbWVudCwgUm9sZSwgU2VydmljZVByaW5jaXBhbCB9IGZyb20gJy4uL2xpYic7XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKTtcblxuY29uc3Qgc3RhY2sgPSBuZXcgU3RhY2soYXBwLCAnaW50ZWctaWFtLXJvbGUtMScpO1xuXG5jb25zdCByb2xlID0gbmV3IFJvbGUoc3RhY2ssICdUZXN0Um9sZScsIHtcbiAgYXNzdW1lZEJ5OiBuZXcgU2VydmljZVByaW5jaXBhbCgnc3FzLmFtYXpvbmF3cy5jb20nKSxcbn0pO1xuXG5yb2xlLmFkZFRvUG9saWN5KG5ldyBQb2xpY3lTdGF0ZW1lbnQoeyByZXNvdXJjZXM6IFsnKiddLCBhY3Rpb25zOiBbJ3NxczpTZW5kTWVzc2FnZSddIH0pKTtcblxuY29uc3QgcG9saWN5ID0gbmV3IFBvbGljeShzdGFjaywgJ0hlbGxvUG9saWN5JywgeyBwb2xpY3lOYW1lOiAnRGVmYXVsdCcgfSk7XG5wb2xpY3kuYWRkU3RhdGVtZW50cyhuZXcgUG9saWN5U3RhdGVtZW50KHsgYWN0aW9uczogWydlYzI6KiddLCByZXNvdXJjZXM6IFsnKiddIH0pKTtcbnBvbGljeS5hdHRhY2hUb1JvbGUocm9sZSk7XG5cbi8vIFJvbGUgd2l0aCBhbiBleHRlcm5hbCBJRFxubmV3IFJvbGUoc3RhY2ssICdUZXN0Um9sZTInLCB7XG4gIGFzc3VtZWRCeTogbmV3IEFjY291bnRSb290UHJpbmNpcGFsKCksXG4gIGV4dGVybmFsSWRzOiBbJ3N1cHBseS1tZSddLFxufSk7XG5cbi8vIFJvbGUgd2l0aCBhbiBvcmdcbm5ldyBSb2xlKHN0YWNrLCAnVGVzdFJvbGUzJywge1xuICBhc3N1bWVkQnk6IG5ldyBPcmdhbml6YXRpb25QcmluY2lwYWwoJ28tMTIzNCcpLFxufSk7XG5cbm5ldyBJbnRlZ1Rlc3QoYXBwLCAnaW50ZWctaWFtLXJvbGUnLCB7XG4gIHRlc3RDYXNlczogW3N0YWNrXSxcbn0pO1xuXG5hcHAuc3ludGgoKTtcbiJdfQ==