#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("@aws-cdk/core");
const integ_tests_1 = require("@aws-cdk/integ-tests");
const s3 = require("../lib");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'aws-cdk-s3');
const inventoryBucket = new s3.Bucket(stack, 'InventoryBucket', {
    removalPolicy: cdk.RemovalPolicy.DESTROY,
});
const myBucket = new s3.Bucket(stack, 'MyBucket', {
    inventories: [
        {
            destination: {
                bucket: inventoryBucket,
                prefix: 'reports',
            },
            frequency: s3.InventoryFrequency.DAILY,
            format: s3.InventoryFormat.PARQUET,
        },
    ],
    removalPolicy: cdk.RemovalPolicy.DESTROY,
});
const secondInventoryBucket = new s3.Bucket(stack, 'SecondBucket', {
    removalPolicy: cdk.RemovalPolicy.DESTROY,
});
myBucket.addInventory({
    destination: {
        bucket: secondInventoryBucket,
    },
});
new integ_tests_1.IntegTest(app, 'cdk-integ-bucket-inventory', {
    testCases: [stack],
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuYnVja2V0LWludmVudG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLmJ1Y2tldC1pbnZlbnRvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EscUNBQXFDO0FBQ3JDLHNEQUFpRDtBQUNqRCw2QkFBNkI7QUFFN0IsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7QUFFMUIsTUFBTSxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUUvQyxNQUFNLGVBQWUsR0FBRyxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGlCQUFpQixFQUFFO0lBQzlELGFBQWEsRUFBRSxHQUFHLENBQUMsYUFBYSxDQUFDLE9BQU87Q0FDekMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxRQUFRLEdBQUcsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUU7SUFDaEQsV0FBVyxFQUFFO1FBQ1g7WUFDRSxXQUFXLEVBQUU7Z0JBQ1gsTUFBTSxFQUFFLGVBQWU7Z0JBQ3ZCLE1BQU0sRUFBRSxTQUFTO2FBQ2xCO1lBQ0QsU0FBUyxFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLO1lBQ3RDLE1BQU0sRUFBRSxFQUFFLENBQUMsZUFBZSxDQUFDLE9BQU87U0FDbkM7S0FDRjtJQUNELGFBQWEsRUFBRSxHQUFHLENBQUMsYUFBYSxDQUFDLE9BQU87Q0FDekMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxxQkFBcUIsR0FBRyxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRTtJQUNqRSxhQUFhLEVBQUUsR0FBRyxDQUFDLGFBQWEsQ0FBQyxPQUFPO0NBQ3pDLENBQUMsQ0FBQztBQUVILFFBQVEsQ0FBQyxZQUFZLENBQUM7SUFDcEIsV0FBVyxFQUFFO1FBQ1gsTUFBTSxFQUFFLHFCQUFxQjtLQUM5QjtDQUNGLENBQUMsQ0FBQztBQUVILElBQUksdUJBQVMsQ0FBQyxHQUFHLEVBQUUsNEJBQTRCLEVBQUU7SUFDL0MsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDO0NBQ25CLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IG5vZGVcbmltcG9ydCAqIGFzIGNkayBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCB7IEludGVnVGVzdCB9IGZyb20gJ0Bhd3MtY2RrL2ludGVnLXRlc3RzJztcbmltcG9ydCAqIGFzIHMzIGZyb20gJy4uL2xpYic7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbmNvbnN0IHN0YWNrID0gbmV3IGNkay5TdGFjayhhcHAsICdhd3MtY2RrLXMzJyk7XG5cbmNvbnN0IGludmVudG9yeUJ1Y2tldCA9IG5ldyBzMy5CdWNrZXQoc3RhY2ssICdJbnZlbnRvcnlCdWNrZXQnLCB7XG4gIHJlbW92YWxQb2xpY3k6IGNkay5SZW1vdmFsUG9saWN5LkRFU1RST1ksXG59KTtcblxuY29uc3QgbXlCdWNrZXQgPSBuZXcgczMuQnVja2V0KHN0YWNrLCAnTXlCdWNrZXQnLCB7XG4gIGludmVudG9yaWVzOiBbXG4gICAge1xuICAgICAgZGVzdGluYXRpb246IHtcbiAgICAgICAgYnVja2V0OiBpbnZlbnRvcnlCdWNrZXQsXG4gICAgICAgIHByZWZpeDogJ3JlcG9ydHMnLFxuICAgICAgfSxcbiAgICAgIGZyZXF1ZW5jeTogczMuSW52ZW50b3J5RnJlcXVlbmN5LkRBSUxZLFxuICAgICAgZm9ybWF0OiBzMy5JbnZlbnRvcnlGb3JtYXQuUEFSUVVFVCxcbiAgICB9LFxuICBdLFxuICByZW1vdmFsUG9saWN5OiBjZGsuUmVtb3ZhbFBvbGljeS5ERVNUUk9ZLFxufSk7XG5cbmNvbnN0IHNlY29uZEludmVudG9yeUJ1Y2tldCA9IG5ldyBzMy5CdWNrZXQoc3RhY2ssICdTZWNvbmRCdWNrZXQnLCB7XG4gIHJlbW92YWxQb2xpY3k6IGNkay5SZW1vdmFsUG9saWN5LkRFU1RST1ksXG59KTtcblxubXlCdWNrZXQuYWRkSW52ZW50b3J5KHtcbiAgZGVzdGluYXRpb246IHtcbiAgICBidWNrZXQ6IHNlY29uZEludmVudG9yeUJ1Y2tldCxcbiAgfSxcbn0pO1xuXG5uZXcgSW50ZWdUZXN0KGFwcCwgJ2Nkay1pbnRlZy1idWNrZXQtaW52ZW50b3J5Jywge1xuICB0ZXN0Q2FzZXM6IFtzdGFja10sXG59KTsiXX0=